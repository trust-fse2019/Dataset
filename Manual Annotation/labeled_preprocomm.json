{"robottelo": {"954": ["elyezer", "2014-07-03T19:23:30Z", {"sthirugn": ["ack"], "robottelo-bot": ["can one of the admins verify this patch?"], "Ichimonji10": ["ack"]}], "613": ["AdamSaleh", "2014-03-31T15:52:06Z", {"omaciel": ["ack"], "elyezer": ["ack pending uncommenting lines", "these lines should be uncomment"]}], "3480": ["rochacbruno", "2016-05-23T20:25:08Z", {"sthirugn": ["ack"], "oshtaier": ["it is not actually a fix, but more as workaround. ack in case we have _ very few _ cases like that"], "elyezer": ["i think we should use a specific exception here because exception is so generic that can mask other possible failures. this will do what it is supposed to do, but always that i see generic exception that does not look good to me.", ":: + 1::"]}], "3031": ["elyezer", "2015-11-11T18:17:57Z", {"sthirugn": ["ack"], "omaciel": ["ACK"]}], "4380": ["svtkachenko", "2017-02-23T17:48:44Z", {"oshtaier": ["and yes, do not forget to put bug in 'verified state if cases passed", "right, that is good idea for syntax flag, but defect can be verified manually for second version", "syntax doing syntax call automatically, and read consists from syntax, syntax and etc. is there any specific reason to have provided call explicitly? usually, we try to avoid that", "that question is applicable for all other tests"]}], "1681": ["JacobCallahan", "2014-11-12T21:32:36Z", {"sthirugn": ["ack"], "Ichimonji10": ["ack < strike > pending comments. < / strike >", "mr. understatement", "iirc, some team members have expressed a desire that syntax be used instead of syntax.", "aaa, never mind then."], "JacobCallahan": ["it apparently has been a while since hammer - - help was updated.", ":: + 1::", "it was { n - 1} when n > number. otherwise {} is preffered", "np! thx for the review"]}], "3703": ["abalakh", "2016-08-11T10:03:34Z", {"rplevka": ["this got to be cherry-picked to syntax"], "oshtaier": ["remove that '4, 538 long txt file please =)", "and runs from syntax too", "basically ack, requiring a lot of test runs", "ack", "that a little bit risky change that will require running some more tests probably", "that will also require running auto-complete tests for organization and location"], "abalakh": ["syntax as i don't have test results yet, but overall pr is ready for review.", "test results: first attempt :c odenote that because of issue with subscriptions for custom products not appearing the tests are randomly failing as well as all the rest our t3 tests on ci. it's pretty important issue with either our automation or application, but it's not related to this pull request specifically.", "test results for existing search autocomplete tests :c ode", "removed one problematic test from pr, will fix it and submit when i'm back from pto. pr is ready to be merged", "yeah. well as i already have to rerun hostcollection tests i think that's the way we'll validate the change. anyway right now all the subscriptions-related tests are failing on jenkins and this change works perfectly with existing contenthost registering / errata installation tests, so this subscription should be a good candidate.", "i've checked manually if the new xpath is ok with organizations but haven't taken a look on location, will do that. long story short previous xpath was working only with foreman-style search bar, new one should work with both foreman and katello styles.", "thanks for suggestion, i'll apply it. but not in this case, for example - number virtualmachines above can be combined, but session should be started only when all the actions with those machines are finished successfully."], "renzon": ["ack, see only the context managers initialization once \"flat is better than nested. what a big pr, all the time i see this i think the same as why not accept pr with more commits to keep history sane?", "too many nested context managers, maybe you could put ( url", "same about context managers nesting"]}], "2594": ["sthirugn", "2015-07-21T15:56:56Z", {"sthirugn": ["i followed the convention specified in url"], "abalakh": ["ack"], "Ichimonji10": ["ack"]}], "3195": ["sthirugn", "2015-12-22T18:40:23Z", {"oshtaier": ["ack"]}], "1409": ["sthirugn", "2014-09-19T16:03:53Z", {"sthirugn": ["this is part of url"], "omaciel": ["ack"], "elyezer": ["ack"]}]}, "luigi": {"657": ["themalkolm", "2015-01-25T21:51:46Z", {"Tarrasch": ["looks good to me"], "themalkolm": ["! ( url"], "erikbern": ["yes coverage increased number", ":):):)"]}], "681": ["erikbern", "2015-01-27T22:51:07Z", {"Tarrasch": ["nice"]}], "1860": ["daveFNbuck", "2016-09-20T20:22:01Z", {"Tarrasch": ["a nice separation of commits worthy of a merge-commit!:)", "can we rename syntax to syntax?", "- what is syntax? - is there any code-path where it's not set? - is there any code-path but ( url it.", "interesting. before this patch, was this just a premature optimization done before?", "sorry. by set i don't mean syntax / syntax / syntax. i mean that we shouldn't have any default values as they are not used anywhere. that's my claim. furthermore. i still don't see anywhere where it's used. can you convince me that there's a codepath where it's used? from what i see it's not used anywhere. - - - second read-through. ( url it's referenced. i guess we should rename this variable to syntax. as it's not the random seed itself we're providing.", "i like pr's to be focused as well. but if you decide to only minimally touch hard-to - understand code, it will remain hard-to - understand for the reviewers too. i would appreciate it if you could change the name of this local variable at this one place. not strictly necessary though)."], "daveFNbuck": ["thanks!", "it won't be set if you're running a task that doesn't have a timeout on number worker.", "yeah we didn't need a multiprocess queue so we used the single-process one here.", "yeah, but i like to keep prs focused. we can do that as a separate change.", "i've renamed random _ seed to use _ multiprocessing so it makes sense in more contexts.", "added to this pr as a separate commit."]}], "913": ["Tarrasch", "2015-04-28T09:46:36Z", {"Tarrasch": ["self-merging this but i can't imagine it being an issue. i need this change asap:)"], "stephenpascoe": ["known issue on travis? urlurl"]}]}, "OpenSlides": {"610": ["emanuelschuetze", "2013-04-23T10:38:34Z", {"normanjaeckel": ["i don't like this connection between the version page and the config pages. they have nothing to do with each other. can we find a good place where to put the linkt to the version page. maybe outside the config tab?", "this import is not neccessary, isn't it?", "see note above.", "is this modification necessary?", "ok. why not.", "ok. but please open an issue for you or me.", "why not 'can nominate oneself? see: url", "i opened an issue for this. you can assign it to me.", "also 'oneself?", "the old line was not correct any more, but now we have still the problem, that one can delete the group number number. we should catch this. you can create an issue for me, if you do not want to do this for number. 4a1.", "can you add a newline here?", "by the way: thank you for inserting the paperclip. :-)"], "ostcar": ["wow, this is really a great pull request. can you fix the last things and rebase the commits?", "#612 can you tell me why this try: except block is necessary, and why you opened a ticked, instead of fixing it right now in this pull request?", "why do you need this variable in the context? you can use a row string in the template.", "please revert this change and add an attribute person _ id to the anonymous user. for example by adding the personmixin."], "emanuelschuetze": ["maybe something like a impressum page?", "right, i'll remove this line.", "no sorry, i'll remove the \",.", "can we do it after number - a1? i want to merge this pull request today for the release.", "see issue #267 for creating impressum page with version number.", "ok, i changed it.", "changed.", "assigned.", "added check with try... except block if group exists. else use number = 0.", "done."]}], "1514": ["emanuelschuetze", "2015-04-09T13:09:55Z", {"normanjaeckel": ["ok.", "can you please use restructeredtext instead of markdown because we do so in other readmes.", "this line is not necessary.", "this line seems not to be relevant for the upstream repo.", "which license do we use for the logo? what says the logo developer?", "see above."], "ostcar": ["i don't like that the logo lays in this repo. but if you can accept, that we remove it from this place before the number release, then you can merge this."], "emanuelschuetze": ["all done in new commit", "ready for last review", "added mit license info to readme and each svg file. rebased all changes to one commit. ready for last review and merge.", "done", "line removed.", "i would say: same like openslides core. i could reference to this url: urlok?"]}]}, "tgstation": {"4974": ["GunHog", "2014-09-25T17:45:18Z", {"Jalleo": ["quick conversation happened just now on irc this is placed as a reminder for gun to change the shooting distance of the ed number 's to be within sight number of targetrelated issue that can be closed after if done is: #766anything else i put here referance to this pr somehow. #2037 #2448 #3710 #3771", "here is another i just found in the list of unrepenting bugs: #3900"], "optimumtact": ["This is just a suggestion, but instead of having a lot if is checks for the current machine mode, instead make a mode datum class, this mode datum will have methods that implement the functionality of that mode for each method where you are doing if checks.\n\nThen instead of if checks you just call the submethod for the mode datum (the current one being stored in a var on the bot). You can change the bot mode by simply switching out the datum stored in the current_mode var.\n\nThis will make the code cleaner, and will also simplify adding new modes as you can just write a new datum class that implements the required sub methods.\n\nIf you want to learn more about this type of design then\nurl\n\nedit: I'd be willing to work on this after this gets merged to the TG mainline"], "ike709": [":: + 1::"], "ChangelingRain": ["#3710 has been fixed for a while, actually, far earlier than #5171not sure why it was still open.", "it happen!"], "paprka": ["telebatons being on safe weapons should be fine. rather than giving all heads of staff a weapon license i think this works better and increases their value a little. cheers.", "rad as fuck gun hog. this code is:: + 1:: in most places. i will try downloading this branch and bugtesting it later for you a bit, i want to see the improvements in bot movement.", "doesn't emping mules totally fuck them up too? with the ion rifle? a malf ai doing that is pretty stupid outside of a gimmick if it's got borgs with it, and by that point the borgs have likely already won. the ai on its trusty mule steed with a horde of borgs following it."], "Dorsisdwarf": ["if the ai can make custom destiantions, what's to stop an engiborg from hacking a mule and letting the ai ride around smashing humans at supersanic speed like a robotics hells angel?"], "Cheridan": ["i have faith in you the letters ok, shown enclosed in a square. meaning okay, denoting approval. the opposite of the squared ng emoji.", "cute.: >", "if a var is defined previously, it doesn't need to be here again unless you're changing it. you could clean up some of the vars here, it looks like."], "theOperand": ["to be honest much of this is just magic to me. radio controller is so url yeah this is probably fine, but if somebody else could do a review i'd be very grateful. this has my:: + 1::, though.", "this should probably be something like this :c ode", "please use user instead of usr.", "mispelled comment: ^]", "this seems fairly hacky to be honest", "this will probably confuse the fuck out of ais.", "bots can't go on unsimulated turfs?? besides, they can still go through space, just not if the target is spessh: v", "remove commented out code pls"], "GunHog": ["thanks for catching that beepsky name, cheri. that is fixed now, along with the mule's ui window name. note: i made it so that floorbots are anchored when moving to fix a space hole or while building bridges. i saw that happen quite often during initial development, and it often prevented them reaching their target.", "i would be happy to try that out, i am not familiar with this method though. i obviously would prefer to have this merged before completely rewriting and testing not only my expansion but the entirety of the code itself, as it could significantly delay development.", "this is far from idle, by the way it is proving difficult to write move code for the bots that not only works but is better than how things are now.", "i would be happy to show you my progress, cheri, but in a branch not linked to this pr, i still have the following things to do: - format the new bot _ move proc to handle all use cases - trim the extensive logic in certain bots to use the new scan proc - decide if i should touch mules beyond compatiblity and the features already added, they are more robust and do not need as many changes. once i am done with that, i will add some tweaks in another commit, then resolve conflicts, especially with bugfixes that i fixed a different way or fixes that are to something i removed entirely.", "committed my work so far so you know that this is very much alive, and also to get any bored coder's feedback on the changes so far. i will hopefully have the other bots done soon, then i can do a few more tweaks, resolve some merge conflicts, test the crap out of it, fix any more bugs i find, then hopefully pass the maintainer review.", "the issues noted above will be fixed after i post a conflict fix, i cannot touch secbots until that is done. the latest commit is about floorbots, cleanbots, and medibots.", "did a quick merge conflict resolution, and fix for that. it integrates #5395 and #5171 as well. #3900 appears to be fixed. fixes #2037 #2448 - i do not have a fix for this yet. #3710 - this needs more explanation. if it refers to patrol failures, it is usually due to airlock access issues. patrol code automatically terminates after five tries. if it is something else, elaboration is required. #3710 - tested to be resolved", "- nerfed ed number to only hunt and shoot at people that are within screen range. - purged all the \". src i could find in the hopes of breaking that habit in botcode. - telebatons are safe weapons now - closed a potential exploit where the ai could re-enable remote bot control by hacking and un-hacking a bot. - pingsky is now on the ai's frequency. see commit log for other changes. i have no further balance or feature changes planned. i will be making changes according to anything pointed out in maintainer review or further testing runs.", "merge conflicts fixed.", "kinetic accelerator is now a safe weapon.", "what feedback would be optimal?", "i will remove this check then.", "will do.", "yes. will remove when i sync.", "making new move code soon!", "honk!", "roger. i should pass the usr gained from the topic to this proc, yes?", "i never knew why people did that. sure, will hunt for things like that and change accordingly."], "RemieRichards": ["yeah do this please, setting. to the value... returned allows this topic to be if'd easier later on."]}], "18299": ["PKPenguin321", "2016-06-06T04:50:09Z", {"PKPenguin321": ["i wasn't sure if i should put this before the parent call. i think as it is, the hulk can still get one attack off, but then the blade will close immediately after. hopefully this is fine.", "moved it, this comment didn't close for some reason"], "Supermichael777": ["this nerf to hulks can probably be removed now that the reflect chance is not number percent.", "oh yeah move the parent call to after"]}], "15374": ["neersighted", "2016-02-10T02:15:43Z", {"PKPenguin321": [":: + 1:: also, dat branch name"], "imtakingabreakdontatme": ["i'm not sure streamlining and automating what little there is to do in our medical system is a good thing, but it isn't a balance concern either way since ops have a number safe place to do surgery"]}], "7864": ["Jordie0608", "2015-02-21T11:15:44Z", {"theOperand": ["the theoretical limit for any sorting algorithm is, on average, o) ( according to the timsort txt file, url timsort is supposedly very close to that."]}], "23211": ["imtakingabreakdontatme", "2017-01-21T18:05:42Z", {"SgtxRootbeer": ["i think it's useful for going against a goliath tendril."], "lzimann": ["They are really good against watchers(since they will remove the freezing) though.", "Just remove the stun removal part and the item is good."], "optimumtact": ["don't repeat a comment already made earlier, leave a reaction to that comment so people can see it's supported.", "you're welcome to try code some of the suggestions yourself. in fact this should motivate you to do so, just make sure it's acceptable to kor."], "Magikarpet": ["to be honest the current price of stimpacks are low but they have a use against the heirophant / colossus / clearing ground to go somewhere quickly while mining, especially more so when the server is lagging against the colossus with it's shotgun.", "the survival pen has no ephedrine for a speed boost but it does have leporazine and omnizine + mining nanites. the only speed boost it would give you is from healing you quickly out of orange / watcher freezing.", "jughu the bundle comes with number epis and number stimpacks the reason why it's a discount is that number = 200"], "francinum": ["kor no.", "i like how all the suggestions were completely ignored in favor of blind removal."], "Kromgar": ["as one of the few miners in the top number for megafauna kills... i ise these all the damn time against all megafauna. especially bubblegum and legion the stim is so good for dodging. drake less so but it helps if you fivk up and get knocked out by a fireball - - - - - please just make them speed and warm up only i use em for watchers for keeping warm and goliath tendrils as well. really helped when i fucked up and got srunned. but the speed os the number reason i use it. - - - - - - - - - - - - - or just make them cost 1k or 2k points. i need those damn things for traversing lavaland quick and fightin megafauna. theyve also saved me when sudden watcher shot outta nowhere hits me while fighting drake due to explosion aggro - - - - - - - - - - just get rid of the synaptizine and it should be okay - - - - - - - - - - in conclusion: just make them pens with ephedrine and that chemical that keeps you warm. make them cost 1k or 2k mining points. it doesn't need to have synaptizine like it already does", "i'd prefer to keep the box but if not i canalways empty my roundstart box to store stims i guess"], "Yoshmaster": ["make it so that if you die on mining you are permabannedhard core gaming"], "kevinz000": ["kor yes"], "Hatfish": ["you can get number stimpacks for the price of number medipen, they aren't anywhere near as expensive.", "maybe increase the cost of a single stimpen to number or so and remove the value kit?"], "MimicFaux": ["increase the cost / remove the bundle. they do have legitmate uses."], "improvedname": ["but fox your goliaths stuns you number seconds when on their tendrils while our goliaths are number second"], "jughu": ["just decrease the amount of stimpacks i guess from number to number and then remove the number ephis"]}], "27120": ["Cyberboss", "2017-05-10T16:19:24Z", {"GunHog": ["fasta booms!!! faaastaaa"], "Robustin": ["you're doing god's work son."], "lzimann": ["what could go wrong"], "banthebantz": ["cheeky boom booms"]}], "18951": ["Xhuis", "2016-06-27T00:15:07Z", {"Jalleo": ["it will break prefs if they are changed i think test it locally kor"], "Jazaen": ["Could you at least leave the Ascendants, to be used in admin fuckery?"], "Chocobro": ["remie and gunhog have it right", "yeah"], "Fox-McCloud": ["just keep it in the code until its reworked."], "coiax": ["just datum antags stuff, it's okay, if you're just removing it, that's a lot easier to cope with than changing it."], "Incoming5643": ["i really don't get why people feel the need to do this. you don't need to remove the old work to _ start _ working on the new work. you can just, you know, do the new stuff then overwrite the old stuff when the new stuff's done. is it a motivation thing? i don't get it at all.", "x-ho - eez"], "PKPenguin321": ["it's zuis kinda like louis but with a z. also i actually like shadowling as a game mode but i have faith xhuis will bring it back in a good way.", "> sorry, this pull request couldn \u2019 t be reverted automatically. it may have already been reverted, or the content may have changed since it was merged. reee"], "Xhuis": ["personal preference. i prefer starting with a clean slate instead of leaving behind old stuff.", "hrm, okay. just contact me if you want this closed.", "it might, yeah. not sure how to make sure.", "zwee.", "it's been a little over six months since this went through. i wouldn't expect it to work flawlessly either.: p", "to anyone afraid i wasn't going to stay true to my word, you don't need to worry. to anyone who reviled shadowlings and don't want then back, then look for the thread in the feedback forums and give me input on how to make the more enjoyable for everyone."], "imtakingabreakdontatme": ["this doesnt break prefs / saves does it?", "remie said prefs will be fine"], "Cebasiz": ["i always kind of liked shadowling to be honest", "you're a cool guy unpronounceable namei like youkeep on keepin 'on"], "GunHog": ["awful. we are never getting that replacement, you know.", "zoo-wiice"], "Firecage": ["i dislike this honestly. just do the rework and then replace the existing shadowling shit with it, don't remove it, then start a rework which may or may not ever get done."], "Zilenan91": ["slings are real bad:: + 1::", "shadowlings were never good in the first place", "i always thought it was zoo-iss"], "RemieRichards": ["it's zoo-ees"]}], "19837": ["Jordie0608", "2016-08-12T02:28:18Z", {"optimumtact": ["good stuff", "this code ugly af", "no"], "Jordie0608": ["from my testing it would seem that syntax is either broken or doesn't do anything like what i expected it to.", "turns out it was the latter.", "are you going to miss those number lines of typecasting?"]}], "19183": ["ChangelingRain", "2016-07-06T21:34:34Z", {"ChangelingRain": ["it's like sharp but more sharper", "all is _ sharp _ accurate actually does is let you cut slice-able food accurately. also this is clearly a bladed spear not just a pointy spear duh"], "imtakingabreakdontatme": ["isn't sharp accurate supposed to be surgical tools?", "have you every done heart surgery with a steampunk spear"], "Zilenan91": ["why can spears cut off limbs anyways, that's not really what spears do. they stab organs not delimb people.", "that's more of a pike at that point if a spear is used to slice rather than stab"], "Supermichael777": ["spears were used to slash. you only poked in large formations or specific hunting situations. a blade that wide would almost certainly necessitate slashing. think of a spear as knife on a stick. the crappy crafted spears are like shivs, all you can to is stab."], "xxalpha": ["hmmm"]}], "9836": ["AnturK", "2015-06-07T15:11:17Z", {"Shadowlight213": [":: + 1:: thank you so much!", "viruses are on varedit blocked? as a trialmin i can edit them just fineedit: the lock is for directly editing the virus var. editing viruses themselves isn't locked"], "Stickymayhem": ["god yes"], "AnturK": ["sure, can switch this around. wanted to make it explicit."], "theOperand": ["would probably be better to copy over all vars using the vars list and add exceptions for holder and affected _ mob."], "phil235": ["yeah, it's a bit ugly to be honest"], "Iamgoofball": ["remember to remove viruses from the \"varedit blocked list then"]}], "5460": ["paprka", "2014-10-25T22:02:53Z", {"ghost": ["i did redo my whimsy rd outfit but it never got put in, kinda sucks it'll be gone. oh well."], "WJohn": ["pls man we're in the middle of a gigantic item move that'll be done in like a day, you're only giving yourself more work when that happens."], "optimumtact": ["would there be anyway to extend the neck sprite up a little bit, so you get the classic turtleneck neck:: + 1::", "i see what you mean, apparently spacemen have no necks from the front"], "Steelpoint": ["reminds me of professor membrane.! ( urlcan 't say much to this, pretty cool though the shoulders seem a bit to square and it seems very purple. edit: and neinhaus, there's nothing wrong with adding your improved outfit to the rd's locker.", "hence why i said, \"if the updated whimsy sprite is good then there is no reason why we can't just have both. i 'm complimenting your sprite. i just think we can keep both sprites.", "calm down, jeez. i 'm simply responding to your intent to remove the whimsy sprite, and suggesting that we keep it in the locker and get it updated."], "paprka": ["\"can 't say much to this then fuck off, i'm really tired of useless goddamn comments in my prs", "are you saying females can't have muscles cheridan, you sexist pig", "! ( urli removed the drawn-on muscles that were a carry over from the tactical turtleneck. i 'd prefer to keep the saturation of the purple as it is, because otherwise it'd be too dark and confused with a nuke op jumpsuit. plus, it'll likely be under a labcoat, and the whole point is color identity.", "it looks like poop and is just a reference to archer a trademark symbol, the letters tm displayed after a word that is trademarked. and i see literally no rds wearing it anymore", "the updated whimsy sprite was never added and i was unaware one even fucking existed cool your jets steelpoint", "i'm aware that we can keep both sprites if the other one looked less like shit, please stop making useless comments in my prs", "good job genius it's almost like that's what i was already doing, i'm seriously getting fucking tired of your pointless comments.", "pointless comments = inane nagging. i stated the reason i removed the rd alt jumpsuit. it was a bad sprite and i offered a better alternative. doesn't that make you think i'd readd it if a better sprite was brought forth? no? then you're criminally stupid, stop commenting on my prs.", "it looks a little weird from the frontthe pixels under the mouth aren't really the neck, they're the chin. spacemen sprites are weird.", "conflicts resolved"], "Czarcastic": ["color need to be saturated a bit, it's too much purple in my opinion"], "Cheridan": ["i agree with the comment that the purple's a bit too saturated. the drawn-on muscles are kind of weird too, especially since they'll still be there when worn by a female."], "TZK13": ["it would look way better if it was a lighter shade of purple."], "Atskadan": ["i still dont see the need to get rid of the whimsy suit when you could just add this one", "pointless comments = things i dont agree with"], "RemieRichards": ["oi, calm the hell down."]}], "15964": ["RemieRichards", "2016-03-07T18:06:24Z", {"KazeEspada": ["ghosts"], "MMMiracles": ["would it be possible to add a diffeent offset so you could have proper-looking passengers on vehicles?"], "phil235": ["doesn't this mean that if i click cancel when shown the window to chose which of the mobs to unbuckle it would still unbuckle someone?", "usr - > user, also it says creature even if there's more than one mobs buckled.", "unrelated to this pr, but the buckled trick here is no longer needed, most likely.. the trick has the inconvenience that the mob will slip on water and bananas despite being on a chair", "not taking into account the temperature of the second buckled mob? you could make heat _ source be the average of all the mobs buckled.", "is there really a risk that the first arg isn't a living mob?", "in that case why only check the type in vehicle / unbuckle _ mob but not in atom / movable / proc / unbukle _ mob?", "these six lines are useless.", "/ obj / structure / chair probably needs a relaymove similar to vehicle. but this is work for another pr.", "- - - - > var / list / mob / living / buckled _ mobs = list"], "duncathan": ["when was the last time someone was buckled to an he pipe?"], "Iamgoofball": ["keep it in but make it slip the janicart too", "admins"], "RemieRichards": ["woops, yeah that's true", "how would you redo this loop then?", "i'm multiplying the body temperature of the first mob by the number of mobs, to get a guess estimate of the total body temperature of all the mobs. it 's a decent guess too because since all the mobs are in the same environment their body temperatures should be close enough to just accept it. i really didn't want to have two loops, one to gather the total heat and then another to apply it. < b > edit < / b > i did bugger up the maths a tiny bit, i'll fix that", "both now check the type, this is resolved."]}], "5271": ["Menshin", "2014-10-15T14:07:30Z", {"tkdrg": ["this fixes #5160 i believe."], "hornygranny": ["merge conflict"], "optimumtact": ["would be nice to see some performance results, we've got cpu to spare though, so it's not a big deal."], "MrPerson": ["performance is of secondary concern to doing this properly."]}], "14352": ["imtakingabreakdontatme", "2016-01-03T20:02:01Z", {"phil235": ["i don't think lawsync is needed when the ai uses its \"show laws verb.", "to be honest i really prefer supermichael's solution to this silicon law issue. adding a second argument for this is awkward."], "tkdrg": ["rip4real"], "Cheridan": ["rip"], "imtakingabreakdontatme": ["i just left it as a failsafe since this bug has cropped up and been fixed repeatedly over the years. i could move it though"], "Supermichael777": ["it's simple enough but i deleted the branch and started playing witcher number."]}], "9422": ["AnturK", "2015-05-09T12:09:43Z", {"xxalpha": [":: + 1:: x100 emoji: the number one-hundred, written in red, underlined twice for emphasis. originating from the number number written on a school exam or paper to indicate a perfect score of number out of number. teachers in japan may also use a stamp in addition to the number mark, to indicate that a student has performed very well. this number emoji is commonly used as a shorthand for number, with the usage meaning \u201c keep it real \u201d or a similar sentiment. a number emoji can be used to express pride or general acceptance of an idea. in snapchat, the number emoji appearing next to a fire emoji indicates a number day snapstreak. x100 emoji: the number one-hundred, written in red, underlined twice for emphasis. originating from the number number written on a school exam or paper to indicate a perfect score of number out of number. teachers in japan may also use a stamp in addition to the number mark, to indicate that a student has performed very well. this number emoji is commonly used as a shorthand for number, with the usage meaning \u201c keep it real \u201d or a similar sentiment. a number emoji can be used to express pride or general acceptance of an idea. in snapchat, the number emoji appearing next to a fire emoji indicates a number day snapstreak. x100 emoji: the number one-hundred, written in red, underlined twice for emphasis. originating from the number number written on a school exam or paper to indicate a perfect score of number out of number. teachers in japan may also use a stamp in addition to the number mark, to indicate that a student has performed very well. this number emoji is commonly used as a shorthand for number, with the usage meaning \u201c keep it real \u201d or a similar sentiment. a number emoji can be used to express pride or general acceptance of an idea. in snapchat, the number emoji appearing next to a fire emoji indicates a number day snapstreak."], "optimumtact": ["no a thumbs-down gesture indicating disapproval. fix the root cause"], "Jordie0608": ["quickmerging cos it's annoying as balls"], "AnturK": ["this is the root cause. that proc shouldn't drain power. that's function of time that should be somewhere else. i could drop some generic hook for mob / living but that seems an overkill unless someone's porting mechas to / mob. i mean updating status shouldn't have side-effect of draining battery - that makes no sense."]}], "26045": ["ChangelingRain", "2017-04-09T23:01:59Z", {"Shadowlight213": ["logging for glob when"], "lzimann": ["it's for the best."], "optimumtact": ["feature freeze"], "ChangelingRain": ["for reference as to why, please look at this; url", "this is not a feature", "cheridan says this isn't a feature oh my god"], "Niknakflak": ["oranges is in a mood"], "Cyberboss": ["because the first person to make them set a bad fucking example", "not a feature"], "nfreader": ["hooray! why were they shortened in the first place though?", "just a heads up, syntax will probably show both the shorthand and the longer updated names for the april stats. so that'll be annoying, but something we'll have to deal with."]}], "14011": ["ChangelingRain", "2015-12-24T18:27:36Z", {"ChangelingRain": ["who cares about changes i play for phat lore, half of which i added myself"], "ghost": ["blobs really need a timer to show when the burst is going to happen. this alone would be a big buff to blobs"], "Jordie0608": ["> changelog for some lore and not the actual changebb plz"], "tkdrg": ["okay sure why not"]}], "864": ["Ricotez", "2013-06-26T21:51:15Z", {"ghost": ["a fist raised in the air that may be used as a celebratory gesture: the fist pump. can also be used to represent zero items, due to a lack of any fingers being held up. sometimes used as a symbol of resistance or defiance. silicons unite! a fist raised in the air that may be used as a celebratory gesture: the fist pump. can also be used to represent zero items, due to a lack of any fingers being held up. sometimes used as a symbol of resistance or defiance.", "the quality of the xenomorph hologram isn't up with the current holograms. it also doesn't register very well against the grey floor tiles. it's going to stand out as a shoddy addition. the ai core sprite looks good.", "* shrug"], "Ricotez": ["actually that is exactly how the current holograms work. it's a sprite using very bright, blue colours. the ai code adds an additional blue overlay, then makes the sprite semi-transparent and finally adds scan lines. these are the sprites of the default hologram before it is loaded and the ai code modifies it:! ( url"], "Nodrak": ["silicons sync!"], "caelaislinn": ["i like them", "at some point in the future, the icon states may as well be named ex \"red october \"monochrome just to cut out the if / else chain"]}], "5993": ["paprka", "2014-11-22T16:23:56Z", {"Steelpoint": ["real mature. the fireaxe currently has only two legitimate uses. - rapidly breaking open windows / grilles - opening powered down doorsthis pr is effectively removing number of the legitimate reason's for the existence of the fireaxe, and essentially is turning it into a overglorifyd crowbar that kills people quicker. you reap what you sow, i stated this would be a problem with single tile windows, but that's not something we can fix now. this is a ic / security problem, fireaxe's are very rare, if someone is freely able to run around with one of two fireaxe's in a public hallway breaking windows then get security on it.", "it's a security issue, not a code issue.", "in that case, going for the two hit window / 1 hit grille approach seems fair.", "difference is ied's are easier to make, destroy wires and are small hidden items. whereas a fireaxe is a very large, impossible to hide and rare item.", "since i'm on my phone i'll keep it brief. if i were to ask to have the plays tag removed it would be removed, i just haven't since i like seeing who actually uses it in a argument. also fireaxe's are actually used to break down doors and windows in real lifethe only legit thing the axe does currently is quickly break down windows, this pr is effectively removing its functionality and leaving us with what is essentially a robust killing weapon instead of a item that has a actual good excuse to exist. razheras suggestion is what we should go with."], "Aranclanos": ["uhhh we're on a freeze brrr", "brr so cold why is this freeze so cold brrr please wait for the cold to end brrr", "four more days of peace please"], "paprka": ["not gonna spoon feed someone who's too lazy to read code or my original comment but still thinks somehow his opinion is valid here. spaghetti being twirled on a fork, from a bowl of spaghetti bolognese.", "fire axes are perfectly fine even with this nerf, just not grief tools anymore, and plasma fires destroy windows anyway so????????????????????????", "you mean like the codethat was written... to give it a ton of damage to grilles and windows already??? this is better code. the fire axe is still an extremely powerful melee weapon and shits on grilles and windows better than anything else, as well as opens firelocks. if you want, i could make it so it doesn't conduct and you can break electrified grilles without gloves, but i'm not readding the retarded window instakill so people can smash all the shuttle windows.", "no it doesn't, and you're so out of touch with the game to think that. atmos techs almost never use the fire axe, it's cumbersome and they have a backpack fire extinguisher that's much more robust for putting out fires. the fire axe is a borderline grief tool and saying 'just stop them! is putting a code balance issue on our administration which is lazy as fuck. also, when has an atmos tech ever needed to instantly smash windows and grilles to save people? people on fire are dead within seconds, plasma fires almost always break windows in departments / hallways anyway, and you'd be way more useful to be using the new extinguisher nozzle instead of the fire axe which sacrifices your actual yknow, fire fighting capability. the fire axe's main function is to break windows and grilles faster than anything else, which it still does, and force open firelocks. it still does both of those things perfectly fine, but now without special code that allows for 'le break all the windows at the bridge, le break all the windows on the shuttle instantly!! the fire axe has always been 'murder weapon with extra griefer flavor, your hilariously bad opinions are showing again. there are also number fire axes on the station, quality miggles never playing the game at it again!", "brr aran's a faggot and this isn't even a feature brr stop proving you're such a garbage maintainer brrrthis is almost directly related to the fulltile windows pr, next time i'll include it in that pr so people don't cry about stupid shit when they don't know what they're even talking aboutinb4 pap is nerfing fire axe ;( ( ( ( ( ( ( ( ( ( ( ( singulo thread", "why do people request that i do things like this then don't tell the other maintainersmaybe aran's just a moron and incredibly out of the loop, who knows", "you can merge this if you feel it's necessary after the hallways are instantly breached a billion more times i'm unsubscribing from it rather than just closing this pr, maintainers can discuss it themselves.", "- rapidly breaking open windows / grillesbutitstilldoesthatfaster than anything else on the station, even fucking guns", "as opposed to having no opposing reason? gj once again faggots you've shit up a paprika pr for no real reason without having even an inch of understanding of the code or game balance, pretty much everyone who actually plays the game and atmos tech doesn't give a shit about this because they know the fire axe's value does not lie in its instant window smashing ability like you seem to believe in your own little world where ss13 is about retarded bullshit like that", "i bet ieds were a security issue in your mind too steelpoint?", "but that doesn't answer how they aren't a security issue and a code issue and this isn't? the fire axe is simply never used for this apparently incredibly 'useful purpose and snowflake code is awful. i'm not upping the damage, it's meant to take a lot longer, all windows were buffed and this means the fire axe is going to take number hits to break a window as well, but it still serves its purpose because it's better than anything else for destroying windows. ieds don't destroy windows anymore mr rarely plays. the fire axe is still a powerful weapon designed for wedging doors open like a crowbar, not being op window smasher. that's not what they're for irl and that's only been what they were for in ss13 because of border windows, which isn't the case anymore because windows aren't annoying as fuck to break anymore. e v e r y atmos tech player i've asked about this have said the axe's window breaking feature is completely irrelevant to it, they've never needed to use the axe to break windows to fight fires and ergo buffed the backpack extinguishers anyway which would make using the axe really clunky and generally a waste of time. this' tool 'is frankly outdated, and the instasmash feature only exists on it for griefing at this point. all this but you might be potentially ruining the axe as a 'tool! 'from people who never play the fucking game anymore is starting to get on my nerves. no, we shouldn't keep a feature like this in the game, it is a code issue, because we can fucking do something about it. further shitty arguments can be mailed to: my ass244 redundant fallacies aveunited states of freedom"], "xxalpha": ["this is dumb and pointless. make the code better if you want, but don't remove a functionality.", "why is it retarded? that's what the fireaxe was for, to be an easy breakin tool. you just made it a slightly stronger extinguisher without fire extinguishing."], "Razharas": ["it will also become number hit crit instead of number hit crit, which is as good as eswordnumber number was there for a reason", "two maintainers think its a feature - ill put this until its discussed to be otherwise", "with border windows, it took number hits of fire axe to get rid of all the glass on the tileif you will make it number hit kill a fulltile window + number hit kill a grille it will be return to the previous stable balance and ill be ok with merging it", "so what to do with this"], "Kraseo": ["screaming out your only reason to remove a functionality does not make it more valid"], "Atskadan": ["nothis makes the only actual use of the axe less effectiveor a crowbar to open doors but hardly anyone knows about that and it's barely usefulhow many hits to break a window?", "if people are griefing with it, stop themyou can grief with anything, that doesnt mean they should have their / main functions / removed because some people use them poorlyhaving multiple useful features is not a bad thing, especially for an item that there are only number of on the station. both of them are behind doors exclusive to like, number people and all of them are qualified to have it. removing this feature turns the fireaxe from \"actually useful tool that robust atmos techs use to \"murder weapon with extra flavor", "if it still breaks windows and grilles faster than anything else, why change it at alli've used the fireaxe before to save people, though usually not from actual fires. ie people stuck in places, people dying / dead in places without oxygen, etcwhenever i go to retrieve a body or there's an emergency as an atmos tech, i bring the axeyour griefing argument is about as valid as saying \"security can hit random people with the stun baton sometimes and thats bad yeah they can do itno, its not allowedyes, its an admin problem if they do it a bunchthey're using the item's function properly for a bad reason, thats a problem with the person, not the item"]}], "21984": ["Cyberboss", "2016-12-06T16:34:52Z", {"ExcessiveUseOfCobblestone": ["make the projectile last within viewing range if your concern is > to get pulled from escape to medbay and be insta dead", "it has a cd"], "optimumtact": ["just meat hook them again scrub"], "Kromgar": ["it needs the stun. i mean how else can i be pudge?"], "jaxy15": ["roadhog doesn't need a nerf"], "imtakingabreakdontatme": ["do a reasonable nerf instead of making it worse than a lasergun please", "> being able to pull people a whole number tilesboring", "well there isn't much point in pulling someone to melee them if they just walk away after"], "Chnkr": ["we need a \"i ded tag"], "Armhulen": ["> well there isn't much point in pulling someone to melee them if they just walk away after"], "Cyberboss": ["the range isn't as much as a problem as the stun pull imo", "weaken number is equivalent of being shot by a dis-abler however many times so i think it's fair"], "Iamgoofball": ["literally makes this worthlessnerf phantom lancer instead please"], "Supermichael777": ["might as well grab a fire extinguisher. leave the damage"]}], "1219": ["Aranclanos", "2013-08-23T12:54:02Z", {"caelaislinn": ["are window breakages that frequent?"]}], "2305": ["Giacom", "2014-01-10T18:33:24Z", {"Razharas": ["what?"], "Ergovisavi": ["not that dualsabers reflecting neurotoxin isn't hilarious, but you should probably make them a ballistic instead of an energy projectile"], "Giacom": ["wrong pr friend."], "ChuckTheSheep": [": o"], "Aranclanos": ["aliens should be nerged anyways, neurotoxin is fucking op and if you need a dual saber to fight against it, how is the lion going to call for the packs?"]}], "21989": ["Chnkr", "2016-12-06T22:04:59Z", {"ExcessiveUseOfCobblestone": ["is it possible to have detain mode arrest and \"pull the player at the cost of making it so beepsky can't stun anyone else or move? aka good for subduing one person but makes it even easier for a group to gg the poor thing. not sure what people want out of the detain feature that is also fair for the person who got captured."], "PKPenguin321": ["please no, armsky locking people down in the armory is funny as fuck every time", "rip"], "YakumoChen": ["makes it easier to deal with clearly harmful people and armoury looters as ai. detain mode is useful."], "imtakingabreakdontatme": ["But it was a good PR"], "Chnkr": ["i'm no longer interested in contributing to / tg / station, feel free to copy the pr and submit it as your own."], "Fox-McCloud": ["terrible feature, imo; good riddance."]}], "5966": ["hornygranny", "2014-11-21T01:55:19Z", {"Razharas": ["reviewed profeccionally and fixed in my heandis good"], "hornygranny": ["i still have to test most of this", "act _ act", "lol i thought i finished this. i'll do it next week", "all i need to fix now is a few items show a message that you whack it with the emag"], "optimumtact": ["HG when?"], "theOperand": ["i prefer emagged, acted, exploded and emped: ^ ^ ^ ^ ^]"], "RemieRichards": ["more syntaxs pls"]}], "20893": ["Screemonster", "2016-10-10T00:16:06Z", {"phil235": ["i don't really see the point of moving the tampering thing to all secure crates. and having the tampering effect be a probability is odd. loot crate are special so it's reasonable to have an explosive rigged in it, but not for secure crate shipped directly from centcom. also, why not put the tampering code in take _ damage instead?"], "Screemonster": ["because i'm a dummy and i completely missed that proc when i was reading through all the changes that had been made to how damage works. that would make more sense. probability was there to have an chance of getting some goodies the old-fashioned way. if people would rather not have rng involved then setting it to a number or number would be easy enough. as for all crates, that's more for the functionality of being able to, say, map a crate other than a loot crate onto a space ruin or similar with the tamperproof var set to be non-zero.", "was away for a couple of days and hoping to get some input. made a new pr 'cause the damage overhaul getting merged meant it was simpler to start over."], "optimumtact": ["why do you keep making new pr's?", "are you going to move this to take _ damage?", "thanks"]}], "25373": ["coiax", "2017-03-22T00:04:44Z", {"ChangelingRain": ["denied"], "Cyberboss": ["> the cogscarab alarms: cease component use!"], "PKPenguin321": ["\u2744\ufe0f"], "coiax": ["rip."], "imtakingabreakdontatme": ["\"No\""]}], "12547": ["optimumtact", "2015-10-21T00:13:15Z", {"ghost": ["! ( url"], "Ricotez": ["while we're on the subject it might be helpful to agree on some kind of standardized way to comment codefor example i started using javadoc because i am used to it, but it feels kinda wrong in byond"], "optimumtact": ["comments should be relevant to the code at hand. because all comments add developer overhead, as we have to maintain them.", "as long as the comments are illustrative and highlight important features that are not necessarily visible from just viewing the code then i'm fine with them."], "imtakingabreakdontatme": ["muh culture"], "Incoming5643": ["someday someone is just gonna try and remove all comments from the codebase. i can feel it."]}], "15043": ["imtakingabreakdontatme", "2016-01-29T19:28:31Z", {"tkdrg": ["the doomsday device turning on stops the shuttle from escaping, then it turns off and lets it escape againthe only actual effect is resetting the shuttle timerwhich i'm not sure is intended now that i think about it, since it could mean off-station ais could spam doomsday to effectively stunlock the shuttle"], "neersighted": ["this is also a win condition?"], "imtakingabreakdontatme": ["you can only buy one device. the timer reset is intended so people have time to get to the shuttle after killing the ai"]}], "393": ["Petethegoat", "2013-04-17T14:52:25Z", {"Aranclanos": ["add the same for monkeys."]}], "13736": ["MrStonedOne", "2015-12-17T15:16:48Z", {"tkdrg": ["very neat:: + 1::", "syntax"], "MrStonedOne": ["number line change, number commits.", "the branch name starts with patch, that means github editor, that means no, no testing = p"], "YotaXP": ["is the first syntax here not supposed to be in quotes?", "you also misspelled syntax. do you test your stuff? a sad face with a single tear running from one eye, down the cheek. hurt and upset, but not crying hysterically. some versions of this emoji features a tears running down each cheek."]}]}, "cryptography": {"1600": ["alex", "2015-01-02T01:02:45Z", {"jenkins-cryptography": ["test passed. refer to this link for build results: url", "test passed. refer to this link for build results: url", "test passed. refer to this link for build results: url", "test passed. refer to this link for build results: url"], "alex": ["i'm not sure how to test this. if i put syntax in a test module, syntax doesn't seem to be able to pick it up, and i'm not sure why."], "public": ["these tests are a lot more complex than mine were. do we care?"], "glyph": ["this looks reasonably good to me. it should be noted that this is more or less a clone of url and we should probably factor all this out into a library."]}], "1970": ["reaperhulk", "2015-05-17T20:37:57Z", {"simo5": ["i have very similar code in welcome that i would love to dump in favour of cryptography's implementation, is there anything blocking this pr from getting merged that needs work?", "what's your concern with it? this is still hazmat so people need to be careful no matter what. once openssl is fixed in a way we can trust it to behave thenw e can simply gut this code and use openssl directly. do you think you'd have a different interface if it were a backend function exposed?", "just an idea, would it make sense to test openssl's aeswrap at run time on first use with known values and determine what to use going forward based on the result? or is it possible to check the openssl version at runtime and switch based on that?", "that was my thinking too, yeah we probably fixed it in rhel, but it's not a big deal if we do not use it because it fails a version check. if someone is really keen on it they can patch cryptography to relax the version check or to explicitly single out a specific version number where they know it has been fixed on their platform. unless they do that they get the python version."], "alex": ["this needs a more verbose explanation. why would anyone want to do that?"], "reaperhulk": ["yeah, the frustrating part is that openssl _ does _ have this as a function, but older versions have a bug and actually do the key wrap wrong. sad trombone", "the best we can do is run one wrap operation to determine if the underlying library works, but i'm not a big fan of having the code paths fork like that honestly.", "if we want to pursue doing that i'd prefer to put that in a separate pr so we can keep the review size on this one reasonable. here's some of the code that would be required in that subsequent pr: url"], "lvh": ["okay, that's a use case:) i agree that that's the extent of the threat model, and i think it's a reasonable risk. it'd be a bit nicer if everything was in c so we didn't have to worry about when / if an object would be collected and / or overwriting that data with nuls; but i'm not sure the threat model that would help with is realistic.", "yeah, me either. fortunately, version checking is likely to work reasonably well here; i'm guessing that maybe some old versions will have the fix backported, but newer versions are unlikely to have the shitty broken version. using the python version when the c version would also have worked isn't great but it's not exactly terrible either...", "looks good to me modulo nitpick re: skip message which is up to you.", "looks good to me", "for clarity, this checks if aes is supported, which is only equivalent to supporting aes key wrap because we just have a python implementation now, right? that might be useful to specify in the error message, although i suppose it's unlikely that an implementation supports aes key wrap but not bare aes.", "cool, i didn't realize these were already in the repo.", "this comment should probably point out that this is only true because of ecb mode, and perhaps note that the magic number bytes is just aes' block size.", "this should mention which kind of key wrapping we're doing."]}], "1368": ["reaperhulk", "2014-09-29T20:18:59Z", {"jenkins-cryptography": ["test passed. refer to this link for build results: url"], "alex": ["why was teh docs line removed?", "err, spelling, the spelling line"], "reaperhulk": ["because i am a dangerous incompetent. adding that back momentarily."]}], "2562": ["evilaliv3", "2015-12-24T09:22:06Z", {"evilaliv3": ["just error:) you are too fast! i 'm also rebasing against the current master"], "alex": ["jenkins, ok to test.", "that command was for jenkins, to test it to run the tests. i haven't looked at why they're failing.", "not sure what happened here, several extra commits appear to have been added in the rebase process.", "why was this removed?"], "reaperhulk": ["this is a consequence of the signature of this macro changing over time. in the most recent versions of openssl it is declared with a const second argument, while older versions did not do this. to fix this move the declaration to the macros section."]}], "1998": ["etrauschke", "2015-05-29T21:11:00Z", {"reaperhulk": ["verified. i'll merge once travis is done!"]}]}, "mne-python": {"1063": ["teonbrooks", "2014-01-12T15:15:37Z", {"agramfort": ["thanks!"]}], "1595": ["dengemann", "2014-10-03T08:48:57Z", {"dengemann": ["squashed. rebased."], "agramfort": ["and merged!", "not not", "besides looks good to me"]}], "1485": ["mainakjas", "2014-08-04T16:33:46Z", {"agramfort": ["ok let us know when done", "it should be fixed with v0. 15 just released", "pushed to maint / 0. 8 branchthanks"], "mainakjas": ["oops, just realized that this was never released: url i undid the changes. there are only a few doc fixes in the pr left. please feel free to merge."]}], "541": ["dengemann", "2013-03-31T18:17:26Z", {"christianbrodbeck": ["otherwise looks good to me", "don't you need to keep this line? otherwise channel names are not going to match channels", "not quite yet:)", "to make sure for future changes, maybe also check with the number of channels in the epoch's data?"], "larsoner": ["right, i think you need syntax instead of syntax. also, it would be a good idea to add a test to make sure they were actually dropped from all appropriate fields. it's not ideal if this sort of error is only detected on human code review. that's what tests are for:)"], "dengemann": ["ok, this should be good to go now.", "yep, was one too much. thanks for attending; -)", "is fixed.", "... by the way incomlpete revert changes in my editor. visual feedbeck may help... finally, it should be good", "the test now also includes the number of channels."], "agramfort": ["thanks"]}], "2263": ["rkmaddox", "2015-07-05T16:59:34Z", {"larsoner": ["So that test fails for you on master, but passes with your pr, right? I can\ntest the fix shortly.", "Usually I test my fixes on my CUDA workstation -- so of course the first\nfiltering PR I open without testing it there would have a CUDA error", "Yep, works. Thanks for the fix!", "Backported to 0.9 as well"], "rkmaddox": ["yep, on my cuda-enabled machine it fails on master but works with this pr. hopefully you find the same.", "good thing i'm around to clean up your mistakes."]}], "3569": ["kaczmarj", "2016-09-07T17:32:39Z", {"kingjr": ["you have to check whether the syntax from syntax matches the one we pasted in syntax. do you want to give it a shot, else i'll take care of it"], "kaczmarj": ["ok, closing the request.", "i'm sorry, i do not know how to fix this issue. i am relatively new to programming..."], "agramfort": ["the get _ params should be inherited from the baseestimator class. if it does not work, then baseestimator is missing in class hierarchy or estimator violates sklearn api"]}], "2978": ["larsoner", "2016-03-02T16:48:23Z", {"teonbrooks": ["a face with hearts instead of eyes, or heart eyes emoji as it is generally known. used as an expression of love, for example: \u201c i love you \u201d or \u201c i love this \u201d."], "larsoner": ["i'll go ahead and merge since i need this for #2977, but if anyone else has comments on the code feel free and i'll follow up", "no, none is only for deprecation purposes"], "choldgraf": [":d resampling speed! i ran it on a dataset that i've got, here's the output :c ode!! ( url"], "agramfort": ["or none?", "my bad got it... forget it"], "kingjr": ["nice:)"], "jona-sassenhagen": ["super cool. iirc some of the tf decomposition methods could also benefit from auto padding to powers of number?", "this one is so good to have happened."]}]}, "pandas": {"4592": ["Komnomnomnom", "2013-08-17T11:28:32Z", {"jreback": ["merge?", "thanks you sir!"], "Komnomnomnom": ["yep, good to go. passes for me on python number & number"]}], "9226": ["tvyomkesh", "2015-01-12T03:39:28Z", {"jorisvandenbossche": ["pandas.tslib.Timedelta -> pandas.Timedelta (that is how it is exposed to the users)", "I think you could also just convert the datetime.timedelta to a pd.Timedelta, and then treat them the same. Maybe that is not the most efficient for datetime.timedelta, but then you don't need the two different codepaths", "You can use tm.assertRaises for this, for usage see eg  url"], "jreback": ["your method will not handle < number sec if its not divisible. better to start go thru the time hierarchy and add offsets. e. g. syntax, you can use the syntax property to get these.", ". components of a timedelta is a named tuple with the data u need", "hmmnanoseconds is not allowed as an argument to datetime. timedelta but i t should be allowed hereu can add that if u want", "hmm adding a nano should workmaybe not converted properly", "couple of minor changes, pls rebase and squash.", "ok, looks good. pls add a release note referencing the original issue. you can put it in the enhancements section.", "minor import correction, otherwise looks good. ping after you push and its green.", "thanks!", "put this as a module level variable", "kill this", "add the syntax", "add the issue number as a comment here", "these are virtually the same routine, so kill the first. you dont need to test both, just the syntax ones.", "yes this cannot be syntax. its always an int.", "you can just say syntax", "just add the syntax import syntax at the top, rather than using syntax", "syntax"], "tvyomkesh": ["ok thanks. i am seeing an inconsistency though. pd. timedelta doesn't allow nanoseconds in constructor but its components list till nanoseconds. here is what i can reproduce. < pre > python number. 9] on darwintype \"help, \"copyright, \"credits or \"license for more information. > > > from pandas. tslib import timedelta > > > td = timedeltatraceback: file \"< stdin >, line number, in < module > file \"pandas / tslib. pyx, line number, in pandas. tslib. timedelta. _ _ new _ _ raise valueerror > > > td = timedelta > > > td. components. _ fields < / pre >", "also, if i try to add nano dateoffset to any other pd. dateoffset on my machine, i get this error: typeerror: ufunc add cannot use operands with types dtype and dtype '). something i need to fix in my build etc.? example: < pre > > > > from pandas import offsets > > > d1 = offsets. second > > > d2 = offsets. milli > > > d3 = offsets. micro > > > d4 = offsets. nano > > > number * d1 + 4 * d2 + 3 * d3 + 2 * d4traceback: file \"< stdin >, line number, in < module > file \"pandas / tseries / offsets. py, line number, in _ _ add _ _ return _ delta _ to _ ticktypeerror: ufunc add cannot use operands with types dtype and dtype) > > > number * d1 + 4 * d2 + 3 * d3 < 5004003 * micros > > > > number * d1 + 4 * d2 + 0 * d3 < 5004 * millis > > > > number * d1 + 4 * d2a thumbs-up gesture indicating approval. * d3 < 5004001 * micros > < / pre > thanks,", "ok thanks, i will need to look into these more and see if i spot a fix. i guess these need to be fixed first to properly traverse hierarchy and add offsets otherwise things seem to be working fine till microseconds.", "from what i see, support for nano is broken in timedelta and i am able to reproduce that in various ways. however, it seems like this enh should should not need any further changes related to the nano fixes. would it be a good idea to treat these two separately? i can go ahead and create a separate issue for the nano fix and continue the fix related discussions there, while this enh can be merged independently.", "incorporated review comments and squashed. created a new issue to track nano fix here. url thanks.", "ok, changed imports, docstring and release note. thanks.", "done", "done. agreed and this way to _ offset will be more resilient to datetime. timedelta evolution.", "sounds good. done.", "yup", "makes sense. done", "removed none check and int"]}], "15652": ["gfyoung", "2017-03-11T01:15:31Z", {"jreback": ["thanks!"]}], "9508": ["blbradley", "2015-02-17T20:47:51Z", {"jreback": ["thabjs", "ping when green"]}], "5060": ["jorisvandenbossche", "2013-09-30T18:36:20Z", {"jreback": ["ready to go?"], "cpcloud": ["pulling it down now", "still get obnoxious blue:! ( url", "yep good number go"]}], "2321": ["y-p", "2012-11-21T22:41:16Z", {"wesm": ["oh really? pls report if you are able"], "y-p": ["i get a couple of failed tests for cparser which are unrelated.", "false alarm, it went away with a clean / develop."]}], "14537": ["keshavramaswamy", "2016-10-29T17:56:08Z", {"TomAugspurger": ["Could verify that we have tests for all the cases of sep and delim_whitespace, and maybe add a few if we don't?", "Take a look at the NumPy docstring reference, which we try to follow. So this would be something like like", "Could you make these keyword arguments (sep=sep, delim_whitespace=delim_whitespace)"], "keshavramaswamy": ["looks like the build fails due to this? url"], "jorisvandenbossche": ["i would not list syntax specifically, as this is actually a equivalent for syntax. so would only list syntax of the two, and explain clearly what the default syntax values means.", "thanks a lot!", "this actually just used syntax under the hood, so i don't know to what extent this is needed?", "can you add here an explanation of what syntax means?"], "gfyoung": ["do you think you can add round-trip tests for slightly unusual delimiters instead of the standard white-space one? one is probably sufficient.", "true, but if the implementation changes, we would like to make sure such behaviour does not break. in any case, couldn't hurt, right? a happy and smiling face with big open mouth, showing teeth. differs only slightly from the smiling face with open mouth emoji by the fact that these eyes are emoji-style smiling eyes, instead of tall oval eyes.", "that's what the test method name is describing, which is why i put the comment under the name. what you did should be fine."]}], "4972": ["alefnula", "2013-09-24T20:06:41Z", {"jreback": ["fyi... in fut make the top of the pr like i did here; then when merged willl auto close the issue and make the title reflect the issue for easy viewing thanks! these r gr8", "right, i think dan birken still fixing that up"], "cpcloud": ["hm syntax not compatible with py3 :(", "at least the version we're using isn't", "yep those are building"]}], "2012": ["jleahy", "2012-10-03T13:18:37Z", {"changhiskhan": ["thanks!"]}], "9475": ["jorisvandenbossche", "2015-02-12T16:34:48Z", {"jorisvandenbossche": ["as far as i understand the code, this _ was _ hit, and this fixed the issue in the pr i linked, but it only fixed it for the case when you provide real level names for syntax and is simpler, i took that option.", "ok! still have to add a release note"], "jreback": ["this wasn't being hit anywhere?", "ok, your soln seems right / reasonable."]}], "11690": ["jreback", "2015-11-24T13:07:34Z", {"shoyer": ["looks great - - thanks!"]}], "8741": ["davidastephens", "2014-11-06T04:11:36Z", {"jorisvandenbossche": ["the doc errors are indeed fixed! is it possible to include a test for what you fixed?"], "jreback": ["thanks!"]}], "8030": ["cpcloud", "2014-08-14T17:46:50Z", {"jreback": ["ok"]}], "7675": ["jreback", "2014-07-06T17:43:50Z", {"jreback": ["ok, that's fine... will change. thanks", "ok, this is merged in master. pls give a recheck and lmk if anything else. thanks:) if all set on your end going to release friday."], "yarikoptic": ["could i have mislead you more?;) it was number 4bit :-/ on number 2bit it was that other issue, so it didn't get to test with number - - tested now in number 2bit chroot - - indeed the same problem. so just please skip regardless of the arch just based on numpy / python version"]}], "1025": ["changhiskhan", "2012-04-11T15:50:35Z", {"wesm": ["cool. though all the other methods have syntax instead of syntax. small detail, merging away for now"], "changhiskhan": ["gh #1012"]}], "5761": ["chappers", "2013-12-21T10:04:08Z", {"y-p": ["thanks, this is useful stuff. but the pr violates a bunch of git-related guidelines explained in ( url - you merged master into your pr branch. - you developed the pr on top of a pandas commit from number months ago, that's about number commits back in the fog of time. both of these do nasy things to the git history and so the devs follow a bunch of rules on how to use git to avoid that. please fix it yourself or let us know if you need git help. it's fine if you do, we all did at some point. we value your work, we want your help making pandas better, but please follow the guidelines or ask for help if you need it.", "no, that would have prevented this, now you need to fix the existing branch. upddate your master branch to point at current master on github, thencheckout your pr branch. then :c ode", "nicely done.", "i haven't run sphinx, but assuming it's ok... merge away."], "jtratner": ["- easiest is just to copy paste your changes to a separate file, checkout current master, and then paste them back on. since it's docs _ and _ a relatively new section of the docs, you should be fine."], "jreback": ["ok will merge and can check how", "docs look good url feel free to add more:)"], "chappers": ["yeah... i don't have any idea what i'm doing. so i'm suppose to update a branch to upstream / master and then run syntax on it? and then submit a pr?", "thanks a lot."], "jorisvandenbossche": ["thanks for this work! i add some comments inline.", "i ran sphinx with this, and its ok. i cannot judge everything in the pr, but it seems ok.", "can you import numpy as np?", "the indendation is not needed in the syntax and syntax blocks. so you can just begin the line with syntax and then indent the following code just with number level. and this is also for all following code-blocks."]}], "4300": ["Komnomnomnom", "2013-07-19T23:36:46Z", {"jreback": ["i can update the docs about syntax... how shall i describe this?", "perfect... let's get everything merged in and i'll fix the docs... let me know what to merge and in which order testing on windows now", "both pr passed on windows", "going ready... in number... number... number", "thank you!"], "Komnomnomnom": ["doh, i never think about the docs, ujson describe it as code", "order shouldn't matter as they both touched different files. i re-based both onto master before pushing.", "i'm happy for this to be merged now and if / when people are happy with #4299 that can be merged too.", "cool, thanks"]}], "1425": ["orbitfold", "2012-06-07T23:27:29Z", {"wesm": ["cool. could you be a bit more careful about not merging upstream into your feature branches? makes merging the branch back to master a lot harder for me", "sorry, ignore my comment on the other pr, i see the same thing happened here", "not sure what happened, but it looks like this branch was not based off of pydata / master - - this resulted in very confused git. i committed and pushed the changes by hand, but if it happens again i'll make you redo the pr / commits with a clean branch =)"], "orbitfold": ["sure", "yes, sorry about that. i am not quite sure what happened myself, i am still a bit clumsy with git. i am used to mercurial. you shouldn't feel bad forcing me to resubmit pull requests if needed."]}], "5978": ["MichaelWS", "2014-01-16T19:05:10Z", {"MichaelWS": ["done", "also, i have never worked with vbench before, so i am not sure if i am doing what is intended", "i am getting some odd errors. i will have to do some more research later today on it. sqlalchemy. exc. integrityerror: column checksum is not unique u'insert into benchmarks values'", "easy enough. that is done.", "thanks, that is fixed.", "added more tests with partial nan's and duplicate values. nan's will always be nan's so not sure if we would ever catch a bug if all nan's.", "easy enough. i added that as well."], "jorisvandenbossche": ["i think you put it accidentally in pandas number section", "can you put the explanation on a seperate line, and after the syntax the type info? ( url"], "jreback": ["can you add a vbench for both cases", "so change to that...", "add a benchmark in vb _ suite / groupby. py... just copy-paste what you want to dosyntax", "this looks finecan u rebase and move release notes to number", "can you reset the release. rst to master head then add your change again. their were some formatting updates which you are reverting... this should only be your number line change", "thanks!", "i think we need to have this syntax option on dataframe for consistency as well. can you add? issue is here: url", "can you add a couple of more tests, maybe all nan series and for groupby, group that has number element", "but that is the check; make sure you propogate nans; the edge cases are always important to test", "can you put a blank line fore the bugs label?", "i think you have it here, but can you have a test with 'int64 and datetimes;", "your rebase introduced these... need to edit", "these are the conflicts that you need to edit out"]}]}, "Theano": {"5885": ["AndreiCostinescu", "2017-04-24T05:52:22Z", {"nouiz": ["thanks"]}], "2766": ["nouiz", "2015-04-15T03:50:57Z", {"nouiz": ["trigger new travis build.", "this parameter apear in the auto generated doc in the function signature. when i saw it there, i was wondering why it was there and not documented. so this make it clear to people they should ignore it from the function signature.", "maybe, but as this isn't used, i don't think it make a difference.", "good idea: url"], "abergeron": ["i think it's better to not document deprecated args. they are only there to keep old code working.", "ok then."], "lamblin": ["Should we try to acquire the lock instead in case of (persistent) error?"]}], "1042": ["jlowin", "2012-10-31T19:25:33Z", {"nouiz": ["thanks!"]}], "4821": ["nouiz", "2016-08-03T20:37:30Z", {"nouiz": ["i updated the pr."], "abergeron": ["since we use the driver api this is not exactly true but equivalent.", "speed up its - > speeds up his", "process - > processes", "same corrections as above.", "this should not be in the c key, it doesn't change any code."]}], "3035": ["thomasmesnard", "2015-06-15T20:33:45Z", {"carriepl": ["right now, the added test covers the ticket it needed to address. to ensure good coverage, it should also validate that the output is valid.", "i think this is fine and can be merged as soon as travis passes.", "there should be two empty lines between these two functions", "same here"]}], "1656": ["lamblin", "2013-12-09T21:01:55Z", {"lamblin": ["we should wait for someone actually experiencing the problem to test it before merging it."], "nouiz": ["visual inspection of the code seam good. but if someone can confirm that it fix there problem, it would be good."]}], "5184": ["YangZhang4065", "2016-11-04T19:10:41Z", {"lamblin": ["i'm not opposed to it, but maybe we should have a more general mechanism for defining or redefining the gradient of an op, rather than a collection of ops for all the things that we may want to do to gradients. scaling seems general enough, so i'm ok with this pr."], "nouiz": ["do you have time to finish this pr? it only need the flake8 fixes i comented aboce. otherwise, it should be good. thanks", "continued in gh number"]}], "4258": ["lamblin", "2016-03-18T16:14:38Z", {"nouiz": ["seem ok to me."], "abergeron": ["i'm pretty sure that this is done inside of concatenate. it doesn't hurt to have it here though.", "or actually it does if syntax. this will cover up the error."], "lamblin": ["i don't see the check you are talking about, and anyway, it fails because of an overflowerror even before that, because syntax is declared as an syntax. the existing tests check that the error is not covered up."]}]}, "scikit-image": {"1139": ["grlee77", "2014-09-09T23:25:36Z", {"ahojnnes": ["Thanks for your contribution. This looks good to me, but I'll let other people review it, that are more familiar with the viewer."], "blink1073": ["looks good to me.", "add another blank line here.", "mental note to the next reviewer: this is tangential to the pr, fixing up the current docstring for combobox.", "remove dead line.", "trailing whitespace.", "please wrap this line after the ptype argument...", "remove extra blank line.", "remove dead code.", "add a blank line at the end of the file.", "line is over number chars, suggest using :c ode", "missing whitespace after commas.", "missing whitespace after comma."], "grlee77": ["i agree that is confusing / wrong and will remove it. i was previously using the. checkstate method which returns number for unchecked, number for checked, but later chose to instead use. ischecked which returns only true or false. qt checkboxes support a tristate mode via. checkstate and. setcheckstate. details at: urlurlif you think there is a reason to support tristate it is simple to change the calls to. setchecked /. ischecked to the respective. setcheckstate /. checkstate calls."], "tonysyu": ["sorry, i've been aggressively filtering email by titles, so i didn't see the ping. this looks like a nice addition. thanks! i added a few minor stylistic comments, but otherwise this looks good. this is tangential to this pr, but i'm not getting image updates in the viewer anymore. currently, the image only updates when resizing the window; otherwise, filtering seems to have no effect. anyone else see this?", "i just added the issue described above: #1148", "unintentional deletion? pep8", "pep8: there should be an extra blank line above this.", "these comments should be a single comment above the syntax line.", "pep8: line length", "this comment doesn't match the test: syntax - > syntax? actually i don't think this comment actually adds any information, so you can probably just remove it.", "while you're changing the line above, could you remove these extra new lines at the end of the file?"]}], "1704": ["MartinSavc", "2015-09-11T08:09:19Z", {"MartinSavc": ["ill follow your recommendations - one example for cross figure sharing and sharing specific axes. ill revert the rest to the requested standard.", "is this better?", "ok. i'll change these back to codewhat about the specific cases wher plt. subplots does not seem flexible enough? there are two specific cases: - sharing axes across figures - sharing only specific axes in a figure - for example the first column"], "JDWarner": ["we recently standardized the plot creation api to syntax, which is the preferred matplotlib style. there are a couple different ways these changes are implemented in this pr; i prefer the style shown in syntax to the style here as it continues the use of syntax."], "tacaswell": ["If is better to use fig.add_subplot rather than plt.subplot()."], "stefanv": ["please don't include merge commits in prs.", ":: + 1::"], "emmanuelle": ["hi sorry for taking so long to answer you. in more complex cases where only one axes could be shared, i would suggest not to share axes at all, for the sake of code simplicity in our gallery examples. it's always a difficult trade-off between readability and efficiency / more features... if you don't mind reverting the few examples where you could not use subplots, i think it would be better to improve the readability. if you prefer, you can keep one example corresponding to each case, in order to document that this is possible. however, i learnt a few things looking at the different possibilities for sharing axes in your examples, and i think that this could make a nice addition to the user guide. i think we're missing an \"image visualization section in url where these explanations on sharing axes could nicely fit. thank you very much for your contribution!", "thanks a lot! it took some time, but thank you very much for your contribution!"]}], "118": ["zpincus", "2012-02-02T03:54:44Z", {"stefanv": ["could you add two small test images and some tests that exercise this functionality if the plugin is available? what does the \"flags parameter to read _ metadata do? i tried it on some jpgs, and the exif data comes back. the tuple format for the keys os a bit weird, and all the strings are terminated by newline characters. works well, thanks!"]}]}, "vumi-go": {"839": ["jerith", "2014-01-17T18:24:47Z", {"jerith": ["there are some bulk send tests that will probably fail on pypy `) until praekelt / vumi #704 lands.", "bleh. the syntax envvar was only added in number. 0, so it doesn't help here. :-(", "closed in favour of #1327."], "rudigiesler": [":: + 1::"]}], "117": ["jerith", "2012-12-03T11:41:37Z", {"hodgestar": ["Thumps up sign indicating approval after tests"], "dmaclay": ["looks ok - i think we can land iti'm no longer setup to do a manual test on a replica local deploy:: + 1::"]}], "722": ["justinvdm", "2013-09-25T14:30:44Z", {"jerith": ["Thumps up sign indicating approval after tests"]}], "103": ["smn", "2012-11-06T11:42:45Z", {"hodgestar": ["a thumbs-up gesture indicating approval... in theory for stdouts connected to terminals syntax is the sensible default encoding and for pipes it's syntax. the whole area is a minefield though."]}]}, "django-rest-framework": {"3868": ["jamesbeith", "2016-01-24T14:03:02Z", {"jamesbeith": ["hope these step help. essentially the boolean field loses it value if the serializer is rendered again in a template. do let me know if you want any more info or example. * * steps * * - build upon this example, ( url where you submit a form and errors are reported - create a syntax class with a syntax and a _ required _ syntax - render the serializer in a html template using syntax and the syntax template tag - in the browser check the checkbox but leave the text input blank - submit the form * * expected results * * - the serializer is invalid and the template rendered again - the error is reported that the syntax is required - the checkbox * * remains * * checked * * actual results * * - the serializer is invalid and the template rendered again - the error is reported that the syntax is required - the checkbox is * * no longer * * checked and required checking again before submitting the form", "here's a test patch. run against syntax the test will fail as \"checked is missing, which should not be the case the data value is \"true. hope that helps. ( url"], "tomchristie": ["- could you supply the test patch as a pull request that adds the test?", "thanks for having raised this! has been resolved since - merging in your test case and getting these closed off."], "xordoquy": ["can you provide us some directions about how to reproduce the initial issue?"]}], "387": ["ludwigkraatz", "2012-11-08T14:01:06Z", {"tomchristie": ["Would make more sense to change so that serializer fields have a form_field_class attribute that gives the appropriate form field type. That was custom subclasses would automatically work."]}], "2238": ["Catstyle", "2014-12-09T11:28:57Z", {"tomchristie": ["#2237 certainly needs more review, but i think this pull request is too early. let's get a clear description of the issue and figure out if this is a docs problem, a bug, or something else.", "closing this pending resolution on #2237."], "Catstyle": ["absolutely need more reviews"]}], "2053": ["thedrow", "2014-11-10T07:31:50Z", {"tomchristie": ["Linked to the related issue", "pre_save here wouldn't (can't) have the same behavior as before.\nPreviously it'd be passed the instantiated, but unsaved object instance.\nHere serializer.instance doesn't exist because we don't have an instantiated object instance, just .validated_data.", "No, that's a fundamental change - there isn't an instantiated unsaved object instance anymore, because we only create it at the point of save. Any pre save behavior in user code is going to need to properly reflect that.", "Similar here, serializer.instance does exist in this case, but modifying it won't have the desired effect,\nso passing it to pre_save() likely isn't actually what the user needs now.\nPassing additional attributes to .save() is the right way to add in addition attributes, and .validated_data is the right way to inspect the validated serializer state.\nWe can't really replicate the old API exactly here due to the underlying changes in the serializer API.", "This'd be:"], "thedrow": ["fixed.", "is it possible to work around that design choice for now?"]}]}, "c2cgeoportal": {"209": ["elemoine", "2012-06-11T08:50:27Z", {"asaunier": ["you mean that we could ignore the instruction if the test fails? that 's a possibility. on the other hand, the crash helps detecting a misconfiguration."], "sbrunner": ["or just test url in wms?", "yes but it's a bit hard and when we create a new layer we can't add it in the database without braking others installation who use the same database... it sure that it shouldn \u2019 t be completely ignored an error or a warning should be logged.", "an other possibility is to add it to the self. errors, ant not just add a comment in the source code of the page but open a window with the errors! cust\u00e9phane", "this is an other issue because actuality the admin interface has no \"programming link to the mapfile.", "nice, merge :-)"], "elemoine": ["i think that the admin interface should somehow warn the administrator that the layer has no corresponding layer in the mapfile. it does not make sense to bother the users with administrator errors.", "i've attached two commits that make syntax more robust and log a warning message if the layer has no corresponding entry in the mapfile. please review."]}], "2402": ["sbrunner", "2016-07-12T15:19:46Z", {"fredj": ["please merge"]}], "1296": ["sbrunner", "2015-03-16T16:49:53Z", {"asaunier": ["looks good to me."]}]}, "addons-server": {}, "ome-documentation": {"365": ["mtbc", "2013-05-16T15:47:24Z", {"jburel": ["syntax that first sentence will be enough to stress users i. e. syntax.", "codenot very clear", "- - no - rebase"], "hflynn": [":: + 1:: to the index page changes, i was going to say we should clarify what the old. fs file covered soon.", "good to merge as far as i'm concerned.", "i'd add a comma after 'repository"], "mtbc": ["thank you, good points; hopefully this is an improvement."]}], "449": ["hflynn", "2013-08-23T10:41:42Z", {"ghost": ["this all looks fine, just needs a couple of minor corrections. essentially, wherever we have java number mentioned, there does need to be a \"+ or \"or higher qualification since it does work with later versions; number is just the minimum supported version.", "this all looks great, please merge."], "jburel": ["- - rebased - to #453"]}], "1079": ["joshmoore", "2015-01-26T20:29:14Z", {"joshmoore": ["happy to add in syntax. guess the only real optimization would be performance, though i haven't tested it. assuming, say, a 1tb file, i'd think a simple syntax would be much healthier.", "syntax and syntax is definitely in-place. syntax and syntax work both via in-place and non-in - place", "- - rebased - to #1087"], "ximenesuk": ["this looks good but in looking at the built docs i noticed that the, not strictly in-place, transfer option \"upload _ rm isn't yet documented so this might be a good pr for that to sit in. the comparison between the \"cp group and the \"ln group is fine but why \"cp over \"upload? that comparison should be stated somewhere hereabouts too.", "looks good to me. a sentence hinting at the benefits of syntax might head off any questions but if we have no concrete metrics then maybe leave that for now? i'm happy either way.", "yes, i think in-place may now be a misplaced term! all number. x imports are effectively in-place, it's just what you do before and after the import that differs!"], "hflynn": ["erm, sorry to come at this late but if this isn't actually in-place import stuff, would it not be better documented on url or at least signposting further up the page?", "ah ok, sorry, i obviously got the wrong end of the stick.", "re-running the merge build now but this is looking fine to me in that case. i'm inclined to agree about leaving the extra stuff on number. 0 only since we already decided not to rebase #975", "we do like to pick our terminology!", "looks fine on staging. merging."]}], "62": ["sbesson", "2012-09-11T08:12:40Z", {"joshmoore": ["ok'd with j-m. merging."], "ximenesuk": ["everything looks okay. one stylistic point is that some of the \"double figures, e. g. urlmight look better with some space between them - as they are they blend together and look like one screenshot."], "jburel ": [" I don't think we should keep the Future Development page in doc. Opinions?", " looks good now I will fix the insight-OMERO.insight change after merge", "Last thing is now to remove the Future directions section then we should be ok"]}]}, "mackup": {"143": ["Cottser", "2013-12-02T02:23:45Z", {"lra": ["no this is great, i initially did the 1st test hoping somebody else will write the rest. thx!"]}]}, "django-cms": {"2753": ["koirikivi", "2014-02-27T15:05:53Z", {"hcNick": ["amazing work. thanks!"], "koirikivi": ["all right, thanks:)", "fixed django number and number support for custom-named user models and python number import errors in tests. should be ready to merge once tests pass."], "tanderegg": ["i've incorporated these changes into #2622, and added some additional modifications that were required to fully support custom naming of custom user models."], "digi604": ["thnx for the hard work guys", "if this is really not needed remove it here."]}], "4410": ["vxsx", "2015-09-02T08:16:29Z", {"FinalAngel": ["awesome looks good to me"]}], "4504": ["vxsx", "2015-09-25T11:19:13Z", {"yakky": ["what's the intended behavior? if syntax is in the url - > switch to build mode and set it in the sessionif syntax is in the url - > switch to build mode and set it in the sessionif no syntax is in the url - > remember the session value"], "FinalAngel": ["fe looks good to me"], "vxsx": ["so here i don't really know what to do. if i keep the old code - it works for the first time you visit the the page with syntax but then it _ never _ resets back to false.", "i was thinking intended behaviour is if syntax in the url - store syntax into session. if no build is in the url - reset value to syntax", "build mode = structure mode", "the usecase is sharing a link to another cms user. it is documented here url but it's not respected in any way at the moment", "however keep in mind that my adjustment doesn't store anything in the session because i don't know how to do that, it only achieves expected frontend behaviour"], "mkoistinen": ["that sounds reasonable. what are the use-cases for this? is this a documented feature?", "my feeling is that we're not doing this right. since changing between structure and preview mode does not require a page load, i don't think it should have a get parameter to do, but rather a parameter."]}]}, "commcare-hq": {"14563": ["esoergel", "2017-01-17T22:49:33Z", {"kkrampa": ["i reused ucr's filters code so restrictions should be the same as in ucr."], "czue": ["ok awesome, then i think this is g2g. build failed on something that doesn't look related but is weird. kicked. syntaxsyntaxsyntax"]}], "12020": ["gcapalbo", "2016-06-11T12:27:34Z", {"gcapalbo": ["grabbed the name from url"], "czue": ["nice"], "snopoke": ["great thanks"]}], "3315": ["czue", "2014-05-01T18:44:54Z", {"esoergel": [":: + 1::"]}], "9920": ["dannyroberts", "2016-01-15T21:59:07Z", {"esoergel": ["That sounds rough. Merging 'cause travis dgaf about test dependencies."]}], "10675": ["millerdev", "2016-03-09T21:08:01Z", {"dannyroberts": ["cool! we don't use inventory params much, but i think this is actually a perfect use case for them: whether there's external block storage and where it lives is very much a part of the inventory and varies by machine.: a thumbs-up gesture indicating approval.: on the choice"], "czue": ["a colorful party popper, used for party or other celebration. appears as a conical party hat, with streamers or confetti bursting out of one end. design may feature stripes."], "benrudolph": ["no test coverage"]}], "14667": ["kmbrgandhi", "2017-01-26T15:49:22Z", {"proteusvacuum": ["code", "this gets added in both cases, so can you just pull it outside of the if statement?", "would it ever happen that case _ type or domain is blank? might be worth validating that all your inputs are correct here and sending an error back to zapier if not.", "you can just set syntax up at the top of this method, and use that everywhere you see the name syntax. i think that might be a little easier to reason with.", "i think syntax is a syntax, so you don't need to do this.", "you can use syntax above instead of this: url", "i think this is confusing. can you change syntax to syntax in zapier so this is consistent?", "i think it might be good to validate that all of these properties are set, and return an error if they aren't.", "i think this would be a big performance drain if there are a lot of cases in the domain. it might be better to do something like: syntaxthis will also throw a syntax exception if that case doesn't exist, which you should catch and send down as an http error. i think you should also validate if the case that you get from the db is of the same case type as what the user said it was and send an error to zapier if not.", "a thumbs-up gesture indicating approval.", "what are the ways that zapier does authentication? this is currently exposed to everyone, and doesn't require a password...", "unsecured endpoint a face with wide open eyes and raised eyebrows. appears to be shocked by a scary event.", "would it ever be useful to return the case _ id of the new case in the http response? i could see this being useful if zapier shows any information about successful responses in their dashboard.", "you can follow this ( url instead, which will also delete all the forms, and you won't have to replicate this line in all the tests.", "this would be used like this: syntax on line number", "nit: the", "nit: i think if you return a list of the syntax namedtuple's this might be a bit easier to reason about and use, but this seems fine too.", "nit: since this is duplicated in all of these test methods, you could pull it out into an instance method :c ode"], "kmbrgandhi": ["fixed."], "dimagimon": ["there are number errors: * corehq / apps / api / resources / v0 _ 5. py, line number - f811 redefinition of unused 'user from line number * corehq / apps / api / resources / v0 _ 5. py, line number - e302 expected number blank lines, found number * corehq / apps / api / resources / v0 _ 5. py, line number - e251 unexpected spaces around keyword / parameter equals * corehq / apps / api / resources / v0 _ 5. py, line number - w391 blank line at end of file * corehq / apps / zapier / api / v0 _ 5. py, line number - e501 line too long * corehq / apps / zapier / api / v0 _ 5. py, line number - w391 blank line at end of file * corehq / apps / zapier / tests. py, line number - f401 'user imported but unused * corehq / apps / zapier / tests. py, line number - e501 line too long * corehq / apps / zapier / tests. py, line number - e501 line too long * corehq / apps / zapier / tests. py, line number - w391 blank line at end of file", "there are number errors: * corehq / apps / zapier / tests. py, line number - e226 missing whitespace around arithmetic operator * corehq / apps / zapier / tests. py, line number - e501 line too long * corehq / apps / zapier / tests. py, line number - e501 line too long * corehq / apps / zapier / tests. py, line number - e501 line too long * corehq / apps / zapier / tests. py, line number - e501 line too long * corehq / apps / zapier / tests. py, line number - e501 line too long", "there are number errors: * corehq / apps / zapier / tests. py, line number - e226 missing whitespace around arithmetic operatore501 line too long * corehq / apps / zapier / tests. py, line number - e124 closing bracket does not match visual indentation * corehq / apps / zapier / tests. py, line number - e501 line too long * corehq / apps / zapier / tests. py, line number - e124 closing bracket does not match visual indentation * corehq / apps / zapier / tests. py, line number - e501 line too long * corehq / apps / zapier / tests. py, line number - e124 closing bracket does not match visual indentation * corehq / apps / zapier / tests. py, line number - e501 line too long * corehq / apps / zapier / tests. py, line number - e124 closing bracket does not match visual indentation * corehq / apps / zapier / tests. py, line number - e501 line too long * corehq / apps / zapier / tests. py, line number - e124 closing bracket does not match visual indentation * corehq / apps / zapier / tests. py, line number - e501 line too long * corehq / apps / zapier / tests. py, line number - e124 closing bracket does not match visual indentation * corehq / apps / zapier / tests. py, line number - e501 line too long * corehq / apps / zapier / tests. py, line number - e124 closing bracket does not match visual indentation * corehq / apps / zapier / tests. py, line number - e501 line too long * corehq / apps / zapier / tests. py, line number - e124 closing bracket does not match visual indentation * corehq / apps / zapier / tests. py, line number - e501 line too long * corehq / apps / zapier / tests. py, line number - e124 closing bracket does not match visual indentation", "e501 line too long", "w391 blank line at end of file", "f401 'couchuser imported but unused", "e226 missing whitespace around arithmetic operator", "f401 'user _ id _ to _ username imported but unused", "e501 line too long", "f401 'delete _ all _ users imported but unused"], "NoahCarnahan": ["a colorful party popper, used for party or other celebration. appears as a conical party hat, with streamers or confetti bursting out of one end. design may feature stripes.", "syntax is called for each user, meaning there is one database request for each user. in most domains, that's fine, however we have a couple domains that with thousands of users, so we need a way to fetch the user names with fewer db requests. i bet you could write a new function modeled after syntax that returns users ids and usernames at the same time.", "nit-pick: this comment could be a doc string for customfield class", "this would be a good place to use the django ( url it helps ensure that the requests generated look like the ones we will see in production, and also takes care of the view instantiation, which can actually vary depending on how the view class is added in urls. py.", "i think this test is also demonstrating that updating a case that does not exist. on this line you might have meant to use the id of the case that was just created?", "same as last comment, i think you need a real case id here.", "this function looks good a thumbs-up gesture indicating approval."], "snopoke": ["wow. great work all! excited to see how this getsused."], " snopoke": ["Wow. Great work all! Excited (and a little nervous) to see how this gets\nused."]}], "13045": ["benrudolph", "2016-08-30T15:01:36Z", {"esoergel": ["i think you may also need to update this line: urlcode"], "benrudolph": ["good catch, thanks", "the cat variant of the smiling face with heart-shaped eyes emoji. no one knows why we need a cat variant of this. a face with hearts instead of eyes, or heart eyes emoji as it is generally known. used as an expression of love, for example: \u201ci love you\u201d or \u201ci love this\u201d. a yellow face with a big grin, uplifted eyebrows, and smiling eyes, each shedding a tear from laughing so hard. widely used to show something is funny or pleasing. not to be confused with the sad \ud83d\ude2d loudly crying face. one of the ten most popular emojis between 2014\u20132018 and was named the oxford dictionaries 2015 \u201cword of the year\u201d."]}], "8722": ["nickpell", "2015-10-19T19:37:52Z", {"nickpell": ["also not sure if url needs to be validated, or column fields for charts. it's not clear to me out of these, which gets passed into a sql and which doesn't", "convinced myself that report column ids need to be validated too, since they appear in the sql query. still not sure about fields belonging to charts.", "looks like charts fields do not need security validation, since they are used asynchronously by the client and never are inserted into a sql query.", "still wrapping my head around sqlagg, will try to find the right places to add column name / alias validation tomorrow.", "since this is being taken care of in sqlagg, i don't feel like it's worth complicating ucr code", "not entirely sure if syntax get passed to the sql query, but validated here anyway", ":: + 1::", "good point - updated to reflect postgres docs."], "NoahCarnahan": ["agreed it would be nice to be confident that at a low level we are protected from injections. i _ think _ every ucr query goes through sqlagg, in which case i think that is a good place to put the guarantees. i think sqlalchmey makes it pretty easy to protect from injections because it escapes most strings or builds queries in an object-oriented fashion. i think the way we handle columns is safe, but i haven't confirmed this. i'm pretty sure the way we do filters is not safe because we pass raw sql to the query ( url", "re url good point, looks like the filter values are covered. however, i think the filter _ names _ are not, because those are user supplied, and inserted directly into the string. in, was not user supplied."], "czue": ["this looks good to me - though in my head i was hoping we could get around this whole situation by using properly escaped values in the query at a lower level. did you explore that route at all? don't have any reason to believe that it's necessarily possible, but it does seem like if we could push this problem into the library rather than in some kind of janky regexes we maintain that would be better. also - were you able to reproduce a sql injection locally? or is this is all theoretical?", "they should land in the syntax so this seems legit", "noticed this question is specific to microsoft sql. did you find any resources for postgres?"], "snopoke": ["we could switch to using sqlalchemy expression functions and bindparams: urlwe can also verify that column names exist in the tables. probably somewhere around here: url", "looking at this pr again i'm not against this approach but it also seems like it would be easier to do 'real validation of column names in sql-agg as mentioned above."]}], "5864": ["benrudolph", "2015-03-13T17:44:17Z", {"dannyroberts": ["failures seem unrelated", "yeah that's pretty weird, and there are two different errors. can you get those to error locally if you run just those tests?"], "czue": ["nice. - if you want to make this tool more useful we'd definitely want it to also profile / track couch doc / view access since we have the general sense that that overhead is significantly more than postgres. made this a long time ago inspired by django debug toolbar that might be a good starting point for that: url"], "snopoke": ["looks like a nice tool. keen to play with it a bit."], "dimagimon": ["e122 continuation line missing indentation or outdented"], "dmyung": ["the debugpanel was updated on one of the significant couchdbkit changes - so barring other major upgrades to it, it should still work. it largely followed the conventions of the sql debug panel, which involved adding a custom property to cache all the requests and durations, and then accessing it at the end of the request cycle. in general couch calls were number number 0x slower than a single postgres call, so many small calls did add up. another thing to check even in addition to sql profiling is the actual payload you get back from the db. at my current digs, i had what seemed like very fast queries, but in fact ate a lot of time in transmission and python cost from db to django. so if you are returning entire model instances back for something but are only displaying a sum or a subset of columns, you might want to either find a metric to measure and see if it's a source of slowdown at all. the orm has the defer queryset method that lets you skip fields for this reason. on sat, mar number, number at time, cory zue wrote: > nice. url - if you want to make > this tool more useful we'd definitely want it to also profile / track couch > doc / view access since we have the general sense that that overhead is > significantly more than postgres. > > url made this a long time ago inspired by > django debug toolbar that might be a good starting point for that: > url > > \u2014 > reply to this email directly or view it on github > url"], "benrudolph": ["same failures as last time. so much for number backwards incompatible changes. the failures definitely look unrelated, but perhaps it caused by something in the migration?", "ok so i can reproduce the error just by bumping to number. 4. just gotta figure out what changed between those two versions"]}], "2477": ["nickpell", "2014-02-11T22:16:18Z", {"nickpell": ["fixed"], "biyeun": ["i would use syntax here...", "doesn't need to be syntax", "generally, properties aren't prefixed with syntax get implies that it's a callable method and that there are likely other parameters", "nm, i see why below"]}], "6857": ["snopoke", "2015-05-27T15:01:39Z", {"twymer": ["a five-point star of pale-yellow color. generally used for visual flair rather than astronomical purposes. firework emoji, showing a explosion of colored light in the night sky, used for any number of celebrations such as new year's eve. colors vary by platform, and may include pink, purple, yellow, blue, and green. the cat variant of the grinning face emoji.:: + 1::"], "esoergel": ["a cake with lit candles in the middle, created for someone \u2019 s birthday. the apple version features strawberries for decoration and flavour. google has chosen what appears to be a sponge cake, and other platforms appear to show strawberry or chocolate cakes. a colorful party popper, used for party or other celebration. appears as a conical party hat, with streamers or confetti bursting out of one end. design may feature stripes. a single balloon, used for birthdays and other celebrations. displayed as red on most platforms, except samsung which displays a blue balloon. the cat variant of the face with tears of joy."], "czue": ["lol, so simple and so much better"]}], "14583": ["snopoke", "2017-01-19T13:13:00Z", {"calellowitz": ["failure was time out. going ahead and merging anyway"]}], "3725": ["biyeun", "2014-06-26T21:12:04Z", {"czue": ["could you write a test that reveals the bug so that someone else can take a look later? i think it would be worth finding the right fix, or at the very least understanding why this fix works, and that will allow it to be easily handed off to someone else as a future task. i'm not saying that should block a p2 bugfix so feel free to merge this before the next deploy, but generally we should be able to understand our code well enough to know why fixes work. it'd also likely be good to leave a comment on that save line indicating that this is a temporary workaround and potentially link to your comment here.", "url"]}], "1475": ["czue", "2013-10-11T21:09:27Z", {"twymer": ["you could just do syntax. it doesn't error if there is no syntax.", "why is content in brackets?"], "czue": ["this is my syntax for code"]}], "15178": ["emord", "2017-02-28T19:26:52Z", {"emord": ["for use in the future when we use the same data source, but want to test different data", "es doesn't actually have a way to delete all data in one index"], "gcapalbo": ["looks good to me. i don't have too much context but should some of those clear _ table methods have a unit testing only decorator, or are there valid scenarios where we'd run them live?"], "benrudolph": ["wow nice that is some huge improvements. looks like build was cancelled?", "ah yes just getting caught up that. crazy"]}], "9025": ["TylerSheffels", "2015-11-09T12:59:18Z", {"czue": ["does data not also need to be formatted?"], "snopoke": ["also, the syntax and syntax are not compatible. for logging you should use syntax and then just include the parameters as arguments to the log call. code"], "TylerSheffels": ["yep, it does. i will add in both places"]}], "4673": ["esoergel", "2014-10-31T16:05:13Z", {"dimagimon": [":: + 1:: no lint errors found."]}], "1901": ["snopoke", "2013-11-21T08:43:23Z", {"czue": ["no context for the tech but i think great to QA on prod behind a toggle as long as we're confident it won't break existing stuff"]}], "10456": ["snopoke", "2016-02-24T08:10:11Z", {"czue": ["build fail not related"]}], "10280": ["czue", "2016-02-12T13:02:26Z", {"czue": ["a check mark that displays with a white outlined appearance. shows on most platforms with a bright green rounded rectangle or circle surrounding it. android previously displayed this as an outlined blue check mark / blue tick. this emoji is not supported in twitter names, possibly in an attempt to minimize confusion with a verified checkmark."], "benrudolph": ["Thumps up sign indicating approval after tests"]}], "12575": ["esoergel", "2016-07-21T19:35:19Z", {"czue": [":: + 1:: on a check mark that displays with a white outlined appearance. shows on most platforms with a bright green rounded rectangle or circle surrounding it. android previously displayed this as an outlined blue check mark / blue tick. this emoji is not supported in twitter names, possibly in an attempt to minimize confusion with a verified checkmark."]}], "15258": ["orangejenny", "2017-03-06T19:25:29Z", {"biyeun": ["i like how you worded this from the user's perspective a thumbs-up gesture indicating approval.", "don't forget to rebuild the diffs"]}]}, "botocore": {"240": ["jlafon", "2014-02-21T04:06:52Z", {"jamesls": ["you should be able to use syntax for this."], "disruptek": ["thanks very much for fixing this."]}], "620": ["kyleknap", "2015-08-06T20:52:43Z", {"jamesls": [": shipit: looks good.", "why change this instead of adding a new test? is the put case no longer valid if you send an empty body?"]}]}, "requests": {"1742": ["kevinburke", "2013-11-18T02:39:07Z", {"kennethreitz": ["this is super cool! thanks!"], "Lukasa": ["sure, why not?:: + 1::"]}], "4026": ["floppym", "2017-05-16T23:02:02Z", {"floppym": ["> it's especially easy given that tests aren't part of the actual package and should only be included in source archives, not source distributions. what 's the difference between a \"source archive and a \"source distribution? i'm missing your point. my goal is to be able to run the tests as part of the gentoo linux build script for this package. we skip this currently; otherwise i would have noticed the missing files sooner.", "using graft causes any syntax files to also be picked up - - we don't want that.", "i created #4027 with graft / exclude - global. i leave it to up to you guys to pick one.:)"], "kennethreitz": ["1 to pinning"], "sigmavirus24": ["> given that this was overlooked for a year, it seems like an easy place to forget about again. it 's especially easy given that tests aren't part of the actual package and should only be included in source archives, not source distributions. but * shrug * i'm not about to have this disagreement with another downstream redistributor. i d also like to avoid capping sphinx to preserve number support. i'd rather pipfile joined the time-period it was born into and understood dependencies that were for specific versions of python or specific environments.", "> what's the difference between a \"source archive and a \"source distribution? i'm missing your point. one is literally the archive of the repository made by setuptools and uploaded to pypi. the other is meant to actually be installed by things python tooling for an end user. one is meant as historical data, the other as an actual installable product. one can be downloaded by downstream redistributors and used to run tests, the other is meant to be downloaded and used by users. > my goal is to be able to run the tests as part of the gentoo linux build script for this package. we skip this currently; otherwise i would have noticed the missing files sooner. and that's an admirable goal. no one wants a downstream redistributor to package something incorrectly and only find out about it from users.", "if we want to pin, let's pin. at the moment we're capping. i'm fine with pinning * temporarily *.", "closing and re-opening to trigger new builds with our fixed dependencies"], "nateprewitt": ["given that this was overlooked for a year, it seems like an easy place to forget about again. perhaps simply changing it to syntax which has worked for syntax? you handle the releases though, so whatever you think works best, i'm on board with. as for the failure, it's due to our sphinx dependency in dev-packages. a release that came out today finally broke number which sphinx stopped supporting a while ago. we'll likely want to pin it at syntax until we deprecate number support ourselves.", "perhaps syntax would be a more permissive command to use here. that way we're capturing possibly required files in the tests directory that aren't necessarily python files.", "if we did a release with dirty directories, you're right, that could be a problem. i'd suggest using something like syntax to solve the syntax issue. that approach will be more inline with most of the other major python projects.", "thanks:)"], "Lukasa": ["i'd rather take the recursive-include for now."]}], "1105": ["slingamn", "2013-01-17T09:53:10Z", {"slingamn": ["the file appears to have grown from number 0k to number 7k :-\\", "cool, if you're sure we have all the relevant revocations covered. this diff just removes the turktrust roots. does certifi require an analogous pull request? is certifi being end-of - lifed now that it's vendored here?"], "kennethreitz": ["i'd prefer to stick with our existing ca bundle.", "yeah, i'll move it to my archive account. thanks for this!", "url"]}], "580": ["slingamn", "2012-05-04T04:18:58Z", {"slingamn": ["heh, if the user sets syntax and syntax, which should win? right now it's the config."], "travisbot": ["this pull request."], "kennethreitz": ["you're amazing."]}], "3763": ["nateprewitt", "2016-12-09T19:27:16Z", {"Lukasa": ["heh, we won't forget: we'll run immediately into errors because i removed the kwarg entirely. let's not queue up a whole bunch of prs: let's focus on doing number first. a yellow face with a slight, partially open smile and its left eye winking. signals a joke, flirtation, hidden meaning, or general positivity. tone varies, including playful, affectionate, suggestive, or ironic. an emoji form of the;) emoticon. not to be confused with the more mischievous or sexual a sly smile, often used with a sexual, or smug connotation. not to be confused with the unamused face, which has similar eyes, but a displeased mouth. on snapchat, this emoji next to a contact denotes that this person snaps you frequently, but you do not frequently snap them in return. smirking face."]}]}, "matplotlib": {"8157": ["patniharshit", "2017-02-26T14:29:12Z", {"patniharshit": ["no tests found in test _ dates as well.", "whats the problem here? pep8?", "\"appveyor build failed what does this mean? by the way while fixing for pep8 violations in my code i noticed several other files also have these violations.", "what do you mean by parameterizing the tests?", "can someone help me here? all tests are passing locally. why travis is failing? i can't open its job log.", "what 'which is referring to is not clear or is this a suggestion to change 'return to 'rotate?", "done.", "didn't notice there was a template. updated now.", "thanks for pointing that out, it was probably a mistake on my part.", "updated.", "removed.", "changed.", "yup, forgot to delete that. deleted now."], "tacaswell": ["if there are no tests, then you are in luck as you get to meaningfully increase our test coverage! it is a syntax method so putting it in syntax would make sense, but it is also date-specific so putting in syntax would also make sense. i lean slightly towards the second, but does not matter that much.", "can you also drop a file in url so that this gets properly advertised?", ":: + 1:: except for the change to the docs.", "'which ticks to rotate?", "it looks like you have a mix of tabs and spaces, can you please make them all spaces ( many editors have tools to help with this, and a minimum find and replace `\\ t '- > '.", "you can also pass this in as syntax which is less cryptic than the leading syntax. which we support _ both _ syntax and syntax is an interesting question... which the answer to is it is my fault: number 8d961a176c3376571f63fb3b7ae01e56137cde7 a sad face with a frowning mouth and disappointed eyes. not to be confused with the pensive face which is more remorseful..", "can you please use the template in syntax? that makes in very easy to combine each of these files when it comes time for a release."], "phobson": ["yeah you've got a number of pep8 violations. url", "travis ci tests the code on a linux operating system. appveyor tests the code on windows. however, appveyor is generally broken for us right now, so we're not too concerned that the build failed.", "in this case, i would take away the syntax loop and pass those values into the test function itself. this has the advantage of testing every value of syntax independently. that means, for example, that if syntax fails for some reason, the other values still get tested. in your case, that means your test would become: code", "travis failure looks like it's just a flaky test unrelated to your pr. looks like the appveyor build is old enough that it was suffering from systematic failures.", "thanks for sticking with us! i fixed a minor pep8 thing. i'll wait for the ci to wrap up on that commit and then i'll merge.", "thanks again - - merged!", "tom meant that you should change \"selects which ticklabels to return to \"selects which ticklabels to rotate", "pep8 will want another blank line here"], "QuLogic": ["i think this file needs to be deleted now, as the next one covers it?", "align with the opening bracket.", "here too.", "syntax", "syntax", "unnecessary parentheses.", "why is this removed?", "this should indicate what the default means; both, neither?"], "tacaswell ": ["If there are no tests, then you are in luck as you get to meaningfully increase our test coverage!\n\nIt is a figure method so putting it in test_figure would make sense, but it is also date-specific so putting in test_dates would also make sense. I lean slightly towards the second, but does not matter that much.", "Can you also drop a file in url so that this gets properly advertised?", "You can also pass this in as get_xticklabels(which=which) which is less cryptic than the leading False.\n\nWhich we support both minor and which is an interesting question...which the answer to is it is my fault: 08d961a", "Can you please use the template in README.rst? That makes in very easy to combine each of these files when it comes time for a release.", "Thumps up sign indicating approval except for the change to the docs."]}], "1522": ["NelleV", "2012-11-21T09:48:06Z", {"dmcdougall": ["this looks fine to me. a thumbs-up gesture indicating approval... will merge tomorrow.", "this variable name made me laugh.", "i propose syntax for the next one..."], "pelson": ["agreed.:: + 1::"]}], "4464": ["tacaswell", "2015-05-24T19:24:00Z", {"tacaswell": ["ah, sorry i misunderstood your comment."], "QuLogic": ["there's a test case for the chunking in #8176, so it does seem to work; is its non-use the only reason for removing it?"], "efiring": ["Good catch--I forgot all about this. Path simplification doesn't supersede this, however. It can still make the difference between being able make a plot, and not. Here is an example:\nMaybe the thing to do, in the interest of simplification, is to remove the rcParam and hardwire a suitable chunksize. #mdboom, is there a better way of avoiding the agg limitation?"]}], "5440": ["mdboom", "2015-11-08T20:56:17Z", {"jenshnielsen": ["should this be backported to number?"], "mdboom": ["i think this one is good to go.", "my definition is things that affect the appearance of the plot are style. things that are related to the environment / platform in use and other technical considerations are not.", "i've added a comment about what should be blacklisted. i hope that addresses the comments above, and otherwise this is good-to - merge.", "i think this is ready-to - merge, unless there are other comments.", "yes.", "in that case, i thought using style might be handy, e. g. an emacs key style.", "i see. that makes sense.", "fixed."], "efiring": ["i have the impression that some might want tighter restrictions - - a larger blacklist. merging this does not preclude such changes, but it seems worthwhile to get the mechanism in place without further delay.", "missing a leading underscore.", "the name is not so clear in indicating that a dict of valid params will be returned; how about syntax or syntax?", "would it make sense to raise a warning if a a blacklisted key is found?"], "WeatherGod": ["i think this raises a bit more general question of what is the line between styles and settings. there are tons of other settings such as the default keymappings, animation settings, and such that may or may not make sense as a \"style. i am fine with what has been chosen so far, it is just a question of how much more do we want to blacklist.", "also, do we know if people have been using style. use as a convenient way to apply custom rcparams? if so, then this change could break that use-case", "this is all fine, but we still don't have a definition that can help guide us in choosing what should and shouldn't be allowed in a style file. so, to get the conversation rolling, i'll propose a definition: \"a non-style parameter is one whose change would have no effect after importing pyplot. this definition might not be good enough. should the line be drawn at figure creation? axes creation?", "there is a bit of a disconnect here. rcdefaults is more than just style stuff, but it doesn't make sense to blacklist entries there, either, does it?", "what about the default keymappings?"], "tacaswell": ["should also remove all of the black-listed entries from syntax", "i would say it has to have a visual effect, rather than a ui effect which i think lines up with what said and is a super set of things like dpi are on the edge and should probably be allowed."]}], "5570": ["tomoemon", "2015-11-27T06:53:31Z", {"jenshnielsen": ["This break another test in test simplification because it checks for the presence of encodebytes.\n\nI would prefer that the code does not monkeypatch the stdlib modules. I would suggest something like\n", "The pep8 test fails because you need at least 2 spaces before an inline comment", "Great. The new test failures are just random flukes not related to your changes. I have restarted these tests"], "WeatherGod": ["hmm, coveralls isn't happy for some reason. shall we ignore this for now? i think we can improve test coverage of the animation module by using the new nullwriter as a smoke tester later.", "backported to v1. 5. x as 2baedb0", "hmm, not exactly sure, but i am wondering if number. x is now broken for py2. 6? i don't think this pr broke it, but for some reason, one of the usetex unittests is breaking for py2. 6..."]}], "6039": ["jonchar", "2016-02-21T21:27:00Z", {"jonchar": ["no problem!"], "tacaswell": ["Thumps up sign indicating approval", "backported to v1.5.1-doc as 10a860e", "Thanks!"]}], "3534": ["tacaswell", "2014-09-18T04:05:40Z", {"WeatherGod": ["The grammar... I have no clue"]}], "2048": ["takluyver", "2013-05-22T09:48:44Z", {"mdboom": ["fwiw, fixed in #2041 as well, but that should apply cleanly."]}], "5044": ["astrofrog", "2015-09-10T11:50:19Z", {"jenshnielsen": ["it's most likely one of our random transient failures. i have restarted that job"], "astrofrog": ["i'm confused about the python number failure - is this related to this pr?"], "mdehoon": ["i can confirm that these pdf files work with the macosx backend. low resolution: < img width = \"187 alt = \"screengrab lowres src = \"urlhigh resolution: < img width = 196 \"alt = screengrab highres \"src = url", "see url."], "tacaswell": ["as a side note, these pdfs are smaller than most of our source files.", "thanks! i also really like the new sub-plot icon."]}]}, "zamboni": {"3413": ["chuckharmston", "2015-10-26T18:23:55Z", {"ngokevin": ["here too", "i think a couple of tests would help in case we ever add sorting and such. r+wc"]}], "1042": ["dash1291", "2013-08-23T23:22:57Z", {"washort": ["review"]}], "2693": ["mstriemer", "2014-10-30T16:23:57Z", {"andymckay": ["review", "i really don't know if we need both, looking at stage, there's only one email in there and there's nothing on prod", "just having regexes only, will let us delete a few lines of code at least", "if someone makes a mess on regexe's the compile will fail and no email will be sent anywhere, could we catch a compile fail?", "i don't think we log skipped emails, i think it would be nice to do that, so we can figure out what is not being sent"], "mstriemer": ["sure, i just figured this was easier than converting the old emails to regexes but i guess it really won't be that bad."]}], "3414": ["diox", "2015-10-26T19:28:48Z", {"diox": ["lol", "interestingly i don't think this branch is ever hit:) i removed it, thanks"], "chuckharmston": ["better commit message? should be clear what is being fixed.", "review", "this face is not amused. this is not a face of sadness, it is more of a grumpy, displeased look. used to express dissatisfaction. the eyes are distinct in their sideways glance, and may be referred to as'side-eye'."]}], "2769": ["andymckay", "2014-12-09T18:41:39Z", {"andymckay": ["nope all fine locally"], "robhudson": ["review any tests need updating?"]}]}, "readthedocs.org": {"1225": ["singingwolfboy", "2015-04-15T18:40:47Z", {"ericholscher": ["thanks:)"], "singingwolfboy": ["you're welcome! but - - did you mean to merge this, or close it?", "oh, i see - - this was already done in url never mind!"]}]}, "dipy": {"770": ["arokem", "2015-11-13T22:20:59Z", {"samuelstjean": ["can you add a deprecation warning and import the new module in the old one for compatibility with old stuff?"], "arokem": ["clearly this by itself is no good :-)"], "MrBago": ["shouldn't this get moved to syntax and relevant imports be adjusted?", "this looks good to me. my only question is about the deprecationwarning, these are silenced by default so most people will not see them. do we want something stronger? i feel like this question has come up before so if we settled on decision, i'm sorry for raising it again.", "k, i'm merging this. i brought this up partially because we're already using userwarnings for this kind of thing in some places, / home / bagrata / projects / dipy / dipy / align / aniso2iso. py."], "Garyfallidis": ["i agree that this is an important discussion and i am not sure we had a final decision on this. but because this is a generic design issue and not related with this pr i would suggest to move on with the release and then open an issue or a discussion in gitter to figure out the best warning strategy. sounds good?", "good reminder. write an issue please so we can keep track of that.", "we should clearly resolve this problem by number release."]}], "598": ["MarcCote", "2015-03-16T15:20:50Z", {"MarcCote": ["travis is not complaining, should be ready to merge.", "i'm not sure. i think it could be a syntax as it will be converted in syntax anyway. url", "ok, just tested it, it can be a syntax. do you want me to make the change everywhere?"], "matthew-brett": ["does this really need to be a float?", "yes, please. it makes it a bit easier to read, because at the moment i'm thinking 'what is the float for when the answer is just the usual signal that there is an error. good job on the 'try _ branch:)"], "Garyfallidis ": ["Thx #username. Let's hear what the buildbots say."]}]}, "regulations-parser": {"34": ["cmc333333", "2013-05-20T22:06:34Z", {"khandelwal": ["minor, but maybe to _ return could be named something closer to what it is? metadata _ fields?"], "cmc333333": ["second batch of commits are fixing little bugs that came up while parsing actual notices."]}]}, "kivy": {"4712": ["inclement", "2016-11-06T22:24:11Z", {"inclement": ["i've had this deployed in an app for number weeks now, with no complaints about double spaces being received, whereas i had many complaints about space not working before. so, i think this is good to merge."], "akshayaurora": ["a thumbs-up gesture indicating approval."]}], "4392": ["JamesMakela", "2016-06-14T05:38:31Z", {"inclement": ["this seems reasonable and a great improvement to me, thanks for the contribution! i'll leave it to an os x using dev to check though, i'm not familiar with homebrew."], "tito": ["i don't understand, homebrew install libraries and link them in / usr / local /, which is already used by us. no others projects check for \"homebrew installed libraries, as it's not up to the project to check that imo. for example, i do use brew on number different osx, i never had to hack anything, because it's linked in / usr / local, it just works. do we miss anything or is your installation have an issue?", "the approach is to fallback on pkg-config for both sdl2 and gstreamer, if frameworks have not been found. it shoudl work even if your homebrew is on your local directory, you just have to \"brew install pkg-config if you don't have it. i saw url - but that indicated from the beginning that it works as pkg _ config _ path is defined to extend the path to your home directory. so if you have pkg-config in your path, then he should find the sdl2 configuration, and everything will work. there is no need to do something homebrew specific as pkg-config is a standard way to detect libraries available on your system, and brew already manage that.:)"], "akshayaurora": ["syntaxstill gives you a issue while compiling?", "could you please rebase this?"]}], "868": ["luuvish", "2012-12-18T14:06:30Z", {"tito": ["ooooh nice one. thanks you very much!"]}]}, "web2py": {"1017": ["raj454raj", "2015-07-06T21:09:50Z", {"omartrinidad": ["oh, really good!"]}]}, "flask": {"409": ["dmishe", "2012-02-24T06:49:18Z", {"rduplain": ["you can already choose a template using a jinja loader: urldoes this gisted approach suffice?", "you're right, the jinja loader approach solves the general problem, and your pull request exposes in render _ template methods that jinja already has available. pulled, thanks."], "dmishe": ["it so much code, and i would say that it solves more global problem than just selecting templates. also this has no drawbacks, because jinja will not do any extra work if you pass it string. this is very small change for imo often used approach to custom templates."]}], "1743": ["homoSapiensSapiens", "2016-03-04T12:03:02Z", {"untitaker": ["thanks!"], "RonnyPfannschmidt": ["im Thumps up sign indicating approval on this, can someone else merge tho?"]}], "959": ["jso", "2014-01-23T19:49:59Z", {"mitsuhiko": ["out of scope for flask itself due to the integration with blueprints. you can already override the loader creation."]}], "1172": ["cgar", "2014-09-10T00:13:41Z", {"untitaker": ["thanks!"]}], "1751": ["royopa", "2016-03-12T23:33:28Z", {"untitaker": ["yeah, no. sorry. :("], "wlhlm": ["chances of getting this merged seem slim, for example see #1722, #1657, #1567, #1549."]}]}, "mezzanine": {"479": ["lorin", "2012-11-27T19:14:20Z", {"stephenmcd": ["Beautiful - thanks Lorin"]}], "792": ["daGrevis", "2013-10-12T19:34:02Z", {"stephenmcd": ["hey raitis, the intention of the warning is to ensure the developer is aware of the fact they haven't defined it - adding this default would go against that. thanks anyway.", "syntax isn't actually used when syntaxsee: url", "you're conflating two different things: the warning message, and the actual use of syntax to check for valid hosts. the warning message comes from mezzanine and will show whenever syntax isn't defined - the idea is to encourage the developer to ensure they have a value specifically set for their project, not some generic one that can be forgotten about, as proposed in this pr. the actual use of syntax to check for valid hosts is a django thing. the code i referenced has actually changed across django versions, but has the same result - please don't dwell on this though, it's not relevant to the issue."], "daGrevis": ["well, that's true, but, as i understand it, these settings are only for local environment, not production. so i see no reason why syntax is there, but syntax isn't \u2014 this is only inconvenience for development on local environments.", "is that condition on django number from pypi? i see the warning when i try to run server with syntax set to syntax and empty syntax. i run the server with syntax."]}]}, "kitsune": {"1873": ["mythmon", "2014-03-18T21:20:23Z", {"mythmon": ["number 6b9831 don't create duplicate links."], "rlr": ["review", "whoopsydoodoo"]}], "647": ["rlr", "2012-06-08T21:00:36Z", {"rehandalal": ["cool! review"]}], "333": ["willkg", "2011-11-10T17:02:13Z", {"jsocol": ["wfm! review"]}], "674": ["willkg", "2012-06-21T20:54:28Z", {"willkg": ["landed in master in number 5b35e31f34d985292642de6d5c5c6e60fd1"], "rlr": ["seems like a good workaround. review"]}], "2752": ["willkg", "2015-12-16T14:42:43Z", {"mythmon": ["to be honest, if this got merged i'd probably just add syntax to my script because i'm terrible. maybe a better approach would be to look for things that exist in the auto generated database. for example, the sample data leaves the descriptions to all topics blank. that was the actual problem. could we key off of details like that?", "thinking about this a bit, i figured out a way i can make this pretty bullet proof: in my script, i always import a db and then do extract _ db. i can assert that the place the database gets imported to and the place that extract _ db is pulling data from are the same. the root cause here is that i changed my django db settings to test the generatedata command at the work week, and then forgot to change it back. checking for that is pretty easy, but not something we should probably do in extract _ db."], "willkg": ["i'm not a huge fan of \"are you really sure you're a responsible adult? type questions, but i figure this is an easy change to make and might be good enough. another thing we could do is add some kind of check like \"the last question asked in this db was on yyy-mm - dd hh: mm and there are x questions in the db. and then ask the question, \"are you sure this is a recent db? that gives the user some information to gauge the answer and / or know when it's probably horribly wrong. would that be better?", "i don't think we can. because we can't know if someone ran generatedata after getting a production db which i do to \"catch up so i don't have to update it.", "also, i think if you're just going to do a \"yes |... we should just drop this and you can deal with issues.", "to clarify, we specifically need a \"fresh db dump. so a db with generatedata generated data isn't great. a db based on a dump from a few days ago, but with some additional data that came from testing or feature implementation isn't great, either. i don't think we can distinguish between those cases to do anything automatically. having said all that, i suspect this issue really only affects you. maybe this is something you should deal with in your scripts rather than us dealing with this in the codebase.", "that sounds perfect! i'll close this out."]}], "1886": ["rlr", "2014-04-01T20:31:34Z", {"mythmon": ["noice. once joni gives the go ahead, ship it!", "you changed the waffle flag from ethnio-all to ethnio. in the past we have done migrations to introduce new flags. you should either change it back to ethnio-all, or fiddle the flags in the db with a migration."], "rlr": ["fixord flag name ^", "number 0a5561559238663c2fda08cd7e53d49b9f8d2a8 new ethnio script to replace old one."]}], "1025": ["browning", "2013-01-01T16:18:40Z", {"willkg": ["is this related to a bug? if not, then it should go through ux.", "it's worth creating a bug so it can be discussed. generally, we don't make changes like this without discussion with the ux folks. directions can be tricky to word correctly in a way that doesn't create bigger problems."], "browning": ["nope, its not related to a bug. should i create an issue in bugzilla for it? or what do you mean by 'go through ux? thanks", "ok makes sense, created a bug here: urlfeel free to close this pull request if you like and we can pick it back up after it has been discussed. thanks"], "rlr": ["landed: number 8db59603d0af106339e02afe763b41c76dfa483thanks!", "you need to wrap the text in a gettext call for localization: syntax"]}], "2570": ["willkg", "2015-06-11T00:00:21Z", {"mythmon": ["this seems to happen fairly often. i'm not sure what causes it. i'll restart the job now, which should fix it.", "i have some nits / questions with the tests, but nothing that should stop this from merging.", "to be clear: the rest is good, the templates look like they'll work, and the tests look like they are testing the right review", "thanks!", "i don't understand this comment. do you? was it just a left over from when this template was copied from tidings?", "is there any reason this factory shouldn't have make instances with a syntax value by default?", "nit: this wrapping seems awkward to me. is there a good reason to have it across number lines like this?", "this works fine, but i just learned that you could get this url with syntax. it even includes the query string. on the other hand, having symmetry with the doesnotexist test below is nice.", "i think i'd make secret a ( url so it is different each time. i think the case where we don't want a secret on a watch is rarer than the case where we want a secret.", ":: + 1::"], "willkg": ["not sure why travis is failing on npm stuff. we should probably just retry it.", "^ ^ ^ travis passed.", "^ ^ ^ fixes from review comments.", "is this good to go?", "it's talking about dropping the locale prefix. i think it should drop it because then the server will figure it out. given that, i ditched the comment.", "i don't really have an opinion one way or the other. it won't change any of the rest of the code i wrote. what do you want to do?", "my bad - - that was originally a gazillion lines.", "oh, i didn't know about syntax. i 'm game for changing it. i don't feel strongly either way."]}], "1761": ["mythmon", "2013-12-13T18:49:39Z", {"rlr": ["fixes it for me! review"]}]}, "libcloud": {"618": ["parthiv777", "2015-10-29T12:20:06Z", {"Kami": ["i'm a bit confused, what's this pr supposed to do?:)"]}], "616": ["wido", "2015-10-27T15:59:48Z", {"Kami": ["Merged, thanks."], "wido": ["the build seems to fail, but i don't think it's related to this pr?"], "sebgoa": ["why do you say its failing, travis seems to have passed."]}]}, "bcfg2": {"238": ["gordonmessmer", "2014-11-06T17:52:20Z", {"solj": [":: + 1::", "merged, thanks!"], "solj ": ["Thumps up sign indicating approval", "Merged, thanks!"]}]}, "pulp_rpm": {"154": ["bowlofeggs", "2013-03-20T20:13:42Z", {"bowlofeggs": ["i just realized that this might be a dangerous operation. can someone comment on whether this will have ill effects? will this remove the unit from all repos that it is part of? i think it might, and if so, i'll need to make another pr.", "so, i tried this out with my setup, and i believe it does delete the instance from other repos than the intended one. due to this, i'll cancel this pr and make a new one later"], "jdob": ["It does, and it also doesn't decrement the content unit counts on the repo it's deleting it from. So if you had 5 RPMs and this code unassociates one, it'll still store 5 as the count."]}], "725": ["dkliban", "2015-10-16T19:15:51Z", {"bmbouter": ["is this the only area of the pulp _ rpm that uses copytree?", "looks good to me it's up to you how you want to handle the comments.", "consider importing it as syntax."], "dkliban": ["ok test"], "pulpbot": ["refer to this link for build results: url", "refer to this link for build results: url"]}]}, "sympy": {"9520": ["gxyd", "2015-06-14T12:08:34Z", {"gxyd": ["can some please review pr and restart the tests."], "jksuom": ["perhaps you could add the original version of the issue to the tests. i also wonder if the parentheses have any effect on the results. are syntax and syntax * m `) the same? another matter is that i vaguely recall having seen some comments about the possible admission of non-commutative entries in matrices. however, i could not find that now. can anybody point me to that discussion?", "a thumbs-up gesture indicating approval... the slow test timeout should be harmless. no - one seems to mind having non-commutative entries in matrices. merging in number hours, if there are no objections."]}], "9247": ["aktech", "2015-04-04T18:58:14Z", {"aktech": ["yes, that would be better, fixed that. thanks!"], "jksuom": ["from syntax it follows that syntax, so syntax. on the other hand, there is no simple relationship between syntax and syntax. so the code in master expressing the former in terms of the latter is wrong, and you are right in removing it. however, i am not sure if adding the two imaginary infinities would be necessary.", "codeyes, but perhaps it would be possible to find a more general condition to take care of all those cases, something like syntax.", "looks good now. a thumbs-up gesture indicating approval."]}], "1707": ["zanzibar7", "2012-12-31T20:38:27Z", {"jrioux": ["* * into master. used in a similar manner to a regular * asterisk character but tends to be shown in a similar vertical alignment to a \u2022 bullet point. the eight spoked asterisk has both a \u2733\ufe0e text and \u2733\ufe0f emoji presentation available on most platforms. * * pypy number. 0 - beta - 1; number. 3 - final - 42 * *: ( url _ docs build command: _ * * make clean && make html-errors && make latex && cd _ build / latex && xelatex sympy - *. tex * *"], "zanzibar7": ["the fail for python number. 2 - final - 0 looks like some kind of issue with the imports i added. the error message is cryptic, looks like plotting libraries which shouldn't be effected by the code changes i made. i don't have the tools for replicating this test-failure locally. help or suggestions?"], "certik": ["this patch is a thumbs-up gesture indicating approval. from me. thanks! i am merging it."], "asmeurer": ["that's a pyglet bug. you can ignore it."]}], "11619": ["mickyaero", "2016-09-16T00:40:18Z", {"smichr": ["replaced with #11625? it's not necessary to open a new pr with new commits. the pr will be updated. if you run into difficulties, just ask: most of us have been through those same issues, too."]}], "1070": ["smichr", "2012-02-21T06:53:12Z", {"smichr": ["ok, let's use bitcount rather than bin for sake of number. i don't know the source of the number errors. isthis from #1066? the ga tests don't run for me since i don't have numpyinstalled in more than number.", "ok, thanks for looking this over."], "asmeurer": ["a thumbs-up gesture indicating approval... running tests.", "* * sympy bot summary: * * all tests have passed. test results html report: url _ interpreter: _ / library / frameworks / python. framework / versions / 3. 2 / bin / python3 _ architecture: _ darwin _ cache: _ yes _ test command: _ url test _ master hash _: 1d55a7d219bfcc65c9212b8fc480f8a73c697396 _ branch hash _: 0e6c179cf5b8443e1875be96aa5dbcc010e7efd0automatic review by ( url"], "flacjacket": ["this looks good to me. in number i get the same galgebra errors as aaron, but i also have those in master, other than that i have everything passing. the qubit change is definitely a nice one."]}], "10427": ["Arafatk", "2016-01-19T17:58:17Z", {"smichr": ["my only concern is that this is competing with existing packages that handle explicit points and geometry. sympy's focus is symbolic calculations. using math. pow and only handling numerical input seems anti-sympy to me. perhaps the main routines could dispatch to numeric or non-numerical routines. does anyone else have reservations or counter-comments?", "would it be possible to do this in two passes, the first using syntax and then the second pass using the full calc to break ties?", "i'm looking into the speed issue with the closest points.", "nothing new regarding speed. i suspect the speed of using the math routine is that the values are converted to floats which are then processed quickly. i did add a pr with some other modifications, however, including retaining the ability to handle symbolic args - - even though it's only special cases that can be handled, there is no reason to exclude them outright, is there?", "the pr is at url", "the failure might be pointing out why we can't use syntax if we have non-rational points. i'm running a test to see.", "although this passes on my number - bit system, it fails at travis. here are the results there for the analysis of number equidistant points: syntaxsyntaxsyntax", "thanks for working on this. it's been committed.", "there's no need for sqrt, right? if syntax then syntax."], "leosartaj": ["imports inside functions are generally used when there are circular imports. otherwise top-level imports are preferred."], "OrkoHunter": ["why are these imports inside the function? they should be on the top.", "oh, the circular imports, they will not happen if we start importing modules, not every name inside them.:)"], "aktech": ["apart from the api changes, it's a good work!", "use inbuilt methods wherever possible.", "i have open a pr #10455 for fixing the issue with the speed of syntax method. lets see if we can use that. anyways, i am a thumbs-up gesture indicating approval. this pr.", "i don't see a way to implement this algorithm for pure symbols, moreover having this functionality, may help in implementing some other functionality & keeping it won't hurt probably. so, i am in favor of this pr.", "that's not how a 2d point is defined in sympy. please use sympy's syntax. code", "syntax - > syntax", "same", "after you use point2d, for syntax you could use something like :c ode", "put space around operatorsyntax - - > syntax", "put space around operator", "same here & further below as well", "same as url", "there exist syntax & syntax in sympy as well.", "where do you need this?", "there is already a method for calculating distance between two points, use that. code", "see this url", "see this url", "you could make the first import as a top level, it is used in both the functions."], "jksuom": ["i guess this has to deal with numbers only with no symbols. what i find a little disturbing is that using log instead of sqrt seems to lead to even better results, especially for big numbers.", "a thumbs-up gesture indicating approval... it should be quite sufficient to compare squared distances, and that would save time.", "is it possible that the time could depend on the type of numbers?", "i'm not sure what is going on but apparently the change of size or scale effected by sqrt matters. it would be interesting to know if other functions such as log would have a similar effect."]}], "610": ["smichr", "2011-09-19T01:32:10Z", {"smichr": ["but we have to check that p is odd.", "thanks everyone, this is in.", "if we don't make sure we are working with ints, any call to jacobi _ symbol will fail when the > > operator is used.", "we must only send odds to jacobi", "the n = = 0 case can never happen: number is caught above and within the routine n would have to be number before becoming number and number is already handled.", "here, we could just create a new j but we update the existing one instead", "we mustn't throw away the old j. there wasn't a test covering this situation so it was undetected.", "thanks for the helpful review. i'll commit after tests finish."], "certik": ["test results html report: urlsummary: all tests have passed. you can merge with master. automatic review by ( url", "test results html report: url * * note * * a custom interpreter was used: syntaxsummary: all tests have passed. you can merge with master. automatic review by ( url"]}], "12488": ["maurogaravello", "2017-04-03T21:06:33Z", {"smichr": ["beautiful!"], "kshitij10496": ["great work"], "maurogaravello": ["thanks!"]}]}, "otm-core": {}, "sunpy": {"1585": ["Cadair", "2015-10-19T14:30:06Z", {"ayshih": [":: + 1::"], "bsipocz": ["- ohh, ok that's good to know, even though it's a bit weird as the astropy and affiliates run with syntax without the getting the timeout."], "Cadair": ["this may or may not actually fix the problem. but it contains the astropy _ helpers update and should be merged anyway.", "quite why the doctest build is returning the successful error code i do not know."]}], "1564": ["dpshelio", "2015-09-29T12:33:19Z", {"Cadair": [":: + 1::"]}], "1444": ["Cadair", "2015-06-12T12:52:43Z", {"ayshih": [":: + 1::"]}]}, "beets": {"1947": ["wisp3rwind", "2016-04-18T09:48:44Z", {"sampsyo": ["seems great! i'm not even really sure we need both a relative and absolute variant, but it doesn't really hurt to have both.:: + 1::"]}], "520": ["silb", "2014-02-02T16:45:26Z", {"sampsyo": ["this looks really great! thanks for contributing; i'm sure others will be interested in something like this. aside from the above comments, i have a couple of conceptual questions: - the plugin seems to preserve mtimes during ordinary copy operations, which might happen at times other than during import. if that's the case, should the plugin be called something like syntax rather than referring specifically to import? - why does the plugin set the syntax field? it seems like you could just use the syntax field directly instead during queries and such. if you do want to keep the two fields in sync because \"added is the more intuitive name, a general solution like #488 could take care of that orthogonally.", "this use case makes a lot of sense; thanks for clarifying. you have a really good point that it's quixotic to endeavor to preserve mtimes for all time; we'd have to be careful about write operations and, even so, we would confuse the syntax command and other tools that expect the mtime to be \"honest. for that reason, i think your proposal to make the plugin leave the on-disk mtime alone and instead just use it to set \"added seems like the most focused solution \u2014it 's much easier to describe the plugin as trying to _ guess a better approximation for the \"added field _ than to _ preserve the file's mtime _. does that make sense to you?", "sounds great to me! the more events, the better, in my opinion. and i can't currently think of a better way to go about supporting move imports.", "awesome! any of these names work from my perspective. i think i lean slightly toward syntax for brevity, but i'll leave it up to you. other than that, do you think this is ready to merge?", "awesome; i'll merge this now. and definitely \u2014tests would be _ great _ to add. you may be interested in reusing some of the machinery from syntax, which sets up and runs import sessions on temporary files. ( url that makes sure album structures are created. you could use the same workflow to set a file's mtime and check that the database reflects this.", "valueerror seems a little bit user-unfriendly here. what do you think about one of the following? - just silently disable mtime preservation when not copying. - raise a usererror so a nice error message is printed to the console.", "this extremely minor and probably naive, but if you recorded the mtimes instead of the paths here, couldn't you support non-copying imports? that way, you could get the mtime before importing, so original the file would not have to exist in a pristine state when you copy the timestamp.", "aha, that makes sense. i suppose my suggestion would require another change: collect the mtime of the original file early in the import process. the syntax event, for example, runs right after the files are identified and before any changes are made."], "silb": ["thank you for your feedback. i didn't know that copy operations happen at other times than imports. my main motivation for writing this plugin is to preserve the dates when i added the different albums and tracks to my collection prior to having them imported into beats. prior to importing my collection into beats, my best approximation for when an album was added to my collection is the oldest file mtime of the files in the album. the syntax field is conceptually immutable and reflects the date when i originally obtained an album or item. the syntax field is mutable and should change whenever a file is retagged or modified in any other way. so after an album or item has been imported into beats, the syntax and syntax fields are not expected to remain in sync. either of the following changes would suite my needs: - don't preserve mtimes, but only use mtimes for setting the initial value for syntax during imports. the plugin could be renamed to something like syntax. - have it preserve mtimes only for copies during imports. both options require the plugin to know if it is being invoked during an import copy operation. and as for preserving mtimes during all types of copy operations, i don't think that is desirable. and one could always create a separate plugin that writes an item's syntax value to it's syntax field.", "good, then i'll just add the event locally and continue working on the plugin.", "now it works for both copy and move imports. the plugin still needs a new name, i'm thinking of something like syntax, syntax or simply syntax.", "or maybe syntax?", "it is ready to merge for my part. is there any test infrastructure / fixture in beets that would let me write tests that check the syntax and syntax fields in the database against mtimes on disk for an import's source and destination paths?", "did a final rebase before the merge.", "if i had configured beets to preserve mtimes during copy imports i would prefer it to fail instead of silently not preserving them. i'll try to use usererror instead.", "i tried to make it work for move imports as well. but i wasn't able to as i couldn't use the syntax event to get hold of the original path before the files where moved. the path i got was after the files had been moved and their syntax had been overwritten. correction: i got both source and destination paths, but it was still after the files had been moved, and the mtime of the source paths weren't preserved in the destination paths."], "nitper": ["#silb are you still working on this? If not, I'd be happy to pick it up.\n\nI want exactly what you were talking about - setting added = mtime on import."]}], "1911": ["jackwilsdon", "2016-03-16T20:56:45Z", {"sampsyo": ["this looks great; thank you! could you please add a changelog entry and then merge? about the name: it looks like they changed their branding. urlplease feel free to fix the naming, but it looks like it should be \"musixmatch rather than \"musixmatch."]}], "1630": ["pkess", "2015-09-30T14:42:22Z", {"sampsyo": ["looks right; thanks!"]}]}, "configuration": {"3267": ["rlucioni", "2016-07-22T16:45:29Z", {"jibsheet": ["a thumbs-up gesture indicating approval."], "schenedx": ["thank you for helping resolve this a thumbs-up gesture indicating approval."], "mikedikan": ["a thumbs-up gesture indicating approval."]}], "2269": ["sarina", "2015-09-08T19:38:27Z", {"feanil": [":: + 1::"]}], "1810": ["e0d", "2015-01-30T13:14:18Z", {"e0d": [":: + 1::"], "fredsmith": [":: + 1::"], "feanil": [":: + 1::"]}], "3022": ["jibsheet", "2016-05-06T13:53:24Z", {"e0d": [":: + 1::"]}], "1897": ["feanil", "2015-03-12T02:01:34Z", {"maxrothman": [":: + 1::"]}]}, "addon-sdk": {"537": ["Gozala", "2012-08-28T16:09:00Z", {"ochameau": ["could you add some simple tests to ensure that it does work?", "review"]}], "811": ["ochameau", "2013-02-23T13:20:47Z", {"erikvold": ["see i don't know what's different from the stuff that i already reviewed now.", "doesn't syntax on line number and syntax on line number need to match here? or do i misunderstand something?"], "Gozala": ["i think it would make more sense to just include modules into. xpi and then map to the an uri in it rather than copy files one by one every time."], "ochameau": ["sorry, that's my fault, i shouldn't have rebased before the review end...", "no no, you were right, my patch was number broken. in addition to that i faced some unfortunate mobile specific issue with setsubstitution here: urli now tested this patch extensively and seems to work fine.", "the question then is what would be the uri given from python to js? \"jar: file :/ / / + fennec _ remote _ path + \"/ extensions / + harness _ options + \". xpi! overloads / + name; is quite a scary one!", "please continue the discussion in following bug: url"]}], "729": ["Mossop", "2013-01-17T21:07:10Z", {"Mossop": ["yes, i was unable to reproduce that"], "canuckistani": ["I tested this branch - the icon works now, but as I mentioned on IRC I do get what looks like an extra padding row or something:\n\nurl\n\nShould this be a separate bug?"]}], "673": ["Gozala", "2012-12-03T19:26:29Z", {"erikvold": ["i get this error with syntax :c ode", "something happened to the commits that changed the registry. js file, i no longer see those diffs.", "ah i see your message about that in my inbox now, sorry i missed that.", "where does syntax come from?"], "Gozala": ["came from copying a same change i made to your collection / list :d that's why i had to write tests!!! will do and add tests now! thanks for catching that."]}], "993": ["jsantell", "2013-05-10T00:58:30Z", {"ZER0": ["if you want to switch to syntax it's up to you, but i'd like have a couple of more tests with non primitive value before landing this. with those tests added, and if all tests are passing, review:)", "what about a syntax instead? code", "could you add some test with non primitive value?"], "jsantell": [":: + 1:: i like this, will change to this and add more tests in the morning, just wanted something quick and working to use it, since it was broken before a person dancing, most commonly displayed as a salsa dancing woman wearing a red dress... originally intended to be gender-neutral, but now considered to be a female dancer. previous versions of this emoji displayed a male dancer, or a stick figure dancer."]}]}, "edx-ora2": {"738": ["mushtaqak", "2015-10-22T12:28:35Z", {"cahrens": ["i don't know how to review this, but if you followed whatever the process is for creating the minified files, then i'm sure it's fine."], "waheedahmed": [":: + 1::"], "symbolist": ["Thumps up sign indicating approval"]}]}, "ninja-ide": {"1780": ["juancarlospaco", "2014-05-31T02:32:25Z", {"ghost": ["Thanks!, I can quick preview some HTML now :)"]}], "1926": ["centaurialpha", "2015-07-24T19:54:20Z", {"diegosarmentero": ["thanks!"]}], "1777": ["diegosarmentero", "2014-05-24T13:55:00Z", {"ghost": ["* * looks awesome!. * * if you dont have any project open it does not show up anywhere: p", "whe you got nothing, when no project and no file has been opened yet, when you just fire up the ide it does not have the header yet, if i make a new empty file it shows up."], "diegosarmentero": ["i still don't follow, could you share a screenshot and explain? thats not the behavior i ser here"]}]}, "kuma": {"1040": ["lmorchard", "2013-04-23T18:56:46Z", {"groovecoder": ["sweet. i just realized we've been leaving the lines in url for these apps - we should remove them too."], "lmorchard": ["clean up for url in #1041"]}], "141": ["lmorchard", "2012-03-24T02:29:48Z", {"groovecoder": ["aside from the nit-pick it looks good.", "nit, after craig's html + css number - can we make this class simply 'template?", "see above nit: change to $. is", "same nit."], "lmorchard": ["no, i tried that. we already have a. template class somewhere that hides things, i think for markup templates cloned by js."]}], "1891": ["darkwing", "2014-01-17T19:02:55Z", {"groovecoder": ["if webqa doesn't have bandwidth, we can always ask writing team to give stage a good test before we push to production. stage now has a sanitized production dump of doc data: url"], "openjck": ["i notice some jslint violations - - strict equality, semicolons, and the like. can we fix those before we merge?", "we don't have automated jslint testing, i just noticed the violations while reading through the code.", "the code looks good to me, and a quick spot check reveals no issues. i can merge. for something this wide-ranging, we might also want to consider asking stephen or raymond to do some qa on staging before we push to production. what do you think?"], "darkwing": ["dnm'ing, can save a request here...", "ok ready. to test, make sure the ckeditor loads properly in add / edit / translate mode. ensure save and continue editing works. ensure attachments still work.", "i don't have that set up atm. can you let me know what you see?", "just checked, all rubbish. i'm not a jslint guy."]}], "4181": ["jwhitlock", "2017-04-15T16:27:32Z", {"jwhitlock": ["the django docs recommend ( url for signal registration. the functions in syntaxevents. pysyntax do not send emails, except for syntaxeditdocumentevent. firesyntax. calling syntaxfirst _ edit _ emailsyntax returns an syntaxemailmessagesyntax instance, and it is up to the caller to send it by calling the syntax. sendsyntax method. the outbox is empty for most of these tests. other tests in syntaxkuma. wiki. testssyntax exercise views, tasks, and forms that send the email, and they do check syntaxmail. outboxsyntax. i 've move the fixtures to syntaxconftest. pysyntax, because my next code also touches syntaxkuma. wikisyntax, and i immediately wished i had them for the new tests.", "i'm trying to change as little as possible, and i consider a big re-write ofsyntaxget _ previoussyntax out of scope. it is true that ids increase for recent revisions, but that would need to be validated for older revisions in the database.", "i don't understand your comment. there are four revisions created for this test case."], "safwanrahman": ["i still could not find a reason why the code of syntaxsignalssyntax live in syntaxapps. pysyntax part displeased, part unsure what to think. this face isn\u2019t sad, but is a bit confused and puzzled by the situation. the use of eyebrows on some platforms increases the appearance of confusion. a previous release of windows displayed this as the emoticon :s with an rotated s-shaped mouth.", "i have been testing mail functionality with the data got from syntaxoutboxsyntax like mentioned here url is it possible to implement that also in mdn? currently, you are testing the returned value of a syntaxemailsyntax instance. should it be better if we use syntaxoutboxsyntax mail data?", "if you rewrite the syntax easily", "can you create more than one syntaxrevisionsyntax so there are another revision exist. so if our code break it can be cought?", "sorry. i meant more than one revision for same document"], "escattone": ["This is great #username ! I really love everything about it:\n\nnice reorganization\nbeautiful new and re-written tests\nincreased test coverage\nnice housecleaning (removed time.sleep calls)\nnice new test fixtures\nfirst-translation notification emails now include diffs to the English version they're based on\nTested locally as well."]}], "2193": ["darkwing", "2014-03-26T04:50:27Z", {"openjck": ["i think we will need to remember to close the bugs manually. let's be sure we remember to do that.", "this may be the greatest pull request ever. who new one line could prevent so much frustration.", "should syntax also be syntax?", "nevermind me. i was reading the diff backwards."], "darkwing": ["does not compute..."]}], "3284": ["groovecoder", "2015-06-25T23:29:14Z", {"groovecoder": ["url", "dang - nr shows number waffle _ flag select queries now. face with open eyes and open mouth. the apple artwork for this emoji looks like a person yawning. google and microsoft \u2019 s artwork appear closer to the frowning description. need to move the check up higher if i can.", "note: i enabled syntax for everyone on production. i asked #mdn to re-ping bugs in the ( url if they notice any extra issues pop up. if nothing extra comes up this week, i propose we remove this flag and make these dumb urls permanent to avoid their logic * * and * * the memcache: get to the waffle flag table.", "right - it just skips all the \"smart logic bellow here. per new relic, the following calls to syntax, syntax, and syntax, and / or syntax make up as much as number number of the time spent in syntax"], "stephaniehobson": ["in ja the current behaviour on prod is: - dropdown menu link is to / en - us / firefoxin ja on this branch the behaviour is: - dropdown menu link is ja / docs / firefox - page doesn't exist so user is forwarded to en-us versionserver behaviour is different, use experience is the same :("], "darkwing": ["this is really, really great luke! well done!"], "jezdez": ["review", "works for me", "this syntax will not work correctly since syntax is the related manager and not some truthy object. you must use syntax", "hm, how is this dumb? more \"simplistic?", "yeah, i think we should make the \"dumb the default as soon as possible and live with the redirecting nature of the urls", "wait, you're right, syntax is a cached property of the document object and _ not _ a related manager as i thought. so forget what i said."]}]}, "networkx": {"2092": ["hagberg", "2016-04-18T16:08:11Z", {"dschult": ["This looks good as far as I can tell."]}], "1357": ["emilienkofman", "2015-02-18T16:03:29Z", {"emilienkofman": ["ok. for some reason mine is not so ugly... i may try again to do that properly. code! ( url"], "hagberg": ["thanks for the suggestion. unfortunately it's hard to get the arrows right. your approach isn't quite enough. e. g. with this code codeyou get an interesting but not so pretty drawing! ( url", "unfortunately, not a general solution for arrow drawing."], "chebee7i": ["why isn't the base of the arrowhead perpendicular to the line of the edge connecting the nodes?"]}]}, "teuthology": {"455": ["ghost", "2015-03-23T19:21:23Z", {"dachary": ["i actually have no clue how to do that properly :-("], "ceph-jenkins": ["refer to this link for build results: urltests passed for this pull request."]}], "712": ["ghost", "2015-11-21T11:04:32Z", {"zmc": ["let's use syntax for this, sound ok?"]}]}, "ka-lite": {"2924": ["benjaoming", "2015-01-30T23:22:37Z", {"aronasorman": ["alright, but we should get that fixed real soon"], "Antrikshy": ["new blue is gorgeous! looks like some parts of the admin area were not using the syntax class and now look totally inconsistent.!."], "benjaoming": ["#2922", "! ( url", "! ( url"]}], "2845": ["cpauya", "2015-01-12T10:40:00Z", {"jtamiace": ["sorry, still cannot see the sidebar", "error type: uncaught error: could not find template: 'topics / sidebar"], "cpauya": ["thanks for the tip! a happy and smiling face with big open mouth, showing teeth. differs only slightly from the smiling face with open mouth emoji by the fact that these eyes are emoji-style smiling eyes, instead of tall oval eyes."], "jamalex": ["there should be much nicer syntax ways to do this, rather than manually splitting."]}]}, "numba": {"183": ["hgrecco", "2013-03-29T18:01:34Z", {"jriehl": ["thanks for the fixes and beautification. sometimes it seems inheritance was made for supporting incompatible product lines via abstraction. regarding setuptools: we require distribute anyway, so we're way beyond worrying about setuptools."]}], "1024": ["pitrou", "2015-03-05T11:52:41Z", {"pitrou": ["they're only used for cffi support, so, yes."], "seibert": ["interesting. are these cffi types unused unless we are using a cffi-wrapped function?", "nope, i was just trying to get a sense for how often we need these types loaded."]}], "1789": ["pitrou", "2016-03-23T17:38:18Z", {"pitrou": ["ok, merged."], "stuartarchibald": ["this appears to do what it suggests. thanks for the patch."], "seibert": ["This has merge conflicts now."]}], "12": ["jaberg", "2012-07-21T17:47:06Z", {"jriehl": ["i'm inclined to reject this, but i'm not fully fluent with git yet. what does having a submodule buy us versus an installation dependency? what happens if a user already has the llvm-py package installed?", "thanks for the comments. closing."], "ilanschnell": ["i agree, llvmpy is a dependency, not a subproject."], "twiecki": ["yeah, i posted mine before i saw yours. including llvm-py as a submodule is a little bit more user friendly so i think this here is better."], "teoliphant": ["i think we need to reject this. llvmpy is a dependency. - travison aug number, number, at time, jon riehl wrote: > i'm inclined to reject this, but i'm not fully fluent with git yet. what does having a submodule buy us versus an installation dependency? what happens if a user already has the llvm-py package installed? > > \u2014 > reply to this email directly or view it on github."]}]}, "pybossa": {"674": ["alejandrodob", "2014-03-20T17:59:49Z", {"teleyinex": [":: + 1::"]}], "816": ["alejandrodob", "2014-06-03T09:55:55Z", {"teleyinex": ["hi, this is nice. question: does this disable all logging or only for factoryboy?", "a single slice or piece of shortcake \u2013 likely strawberry, but could be peach. this emoji is sometimes used in birthday greetings, as a variation of the birthday cake emoji."], "alejandrodob": ["it only disables logging, but i believe we are doing the logging with stdout and not really logging, so i believe it works. another option i could investigate is whether it's possible to disable only the factoryboy logging or not."]}]}, "openSUSE-release-tools": {}, "mozmill-ci": {"511": ["whimboo", "2014-10-22T14:03:53Z", {"whimboo": ["i wanna add that i'm not going to upgrade any kind of plugin in use. those can have side-effects, which we should cover in separate prs.", "this pr has been merged as url"], "andreeamatei": ["Yes, lets test this on staging. r+"]}], "316": ["whimboo", "2013-10-02T08:23:11Z", {"andreeamatei": ["looks good"]}], "768": ["whimboo", "2016-03-14T15:29:22Z", {"sydvicious": ["review"]}], "90": ["davehunt", "2012-05-22T10:08:10Z", {"whimboo": ["looks fine to me."]}]}, "blaze": {"617": ["mrocklin", "2014-09-10T17:32:47Z", {"mrocklin": ["ok, this is hooked up into the comprehensive into tests. some tests failing. will try to get to this this afternoon.", "swamped isn't exactly the word, more like drained. but in either case i probably won't work on this much today and getting it in is fairly high priority. on fri, sep number, number at time, phillip cloud wrote: > url happy to take this back if you're > swamped. > > \u2014 > reply to this email directly or view it on github > url"], "cpcloud": ["happy to take this back if you're swamped.", "alright, sounds good! bring on the zigzags!"]}], "1467": ["llllllllll", "2016-04-01T07:13:22Z", {"kwmsmith": ["looks good to me thanks."], "llllllllll": ["i will go over these cases and make sure the conversion makes sense. also, fun think that i learned while doing this, syntax does not implement syntax, so classes must be explicitly registered or actual subclasses. i think it is because the interface is ambigious with a sequence, for example, syntax implements iter, len, and getitem.", "i also found some isinstance checks that i think are improved by checking against mapping"]}]}, "scrapy": {"1532": ["hoatle", "2015-10-07T09:05:52Z", {"kmike": ["thanks! we should also fix it in url - could you submit a pull request?"], "hoatle": ["ok, i'll look into url"]}], "2189": ["redapple", "2016-08-19T15:48:42Z", {"kmike": ["there was a discussion about twisted version bump here: url - it seems we agreed on at least number +. probably jumping to number + requires another discussion."], "redapple": ["definitely.", "twisted number is a bit to big of a step forward. it was decided to require ( urland also recommend using virtualenvs for more up-to - date packages."]}], "687": ["curita", "2014-04-09T22:26:47Z", {"dangra": ["looks good to me thanks."]}]}, "otter": {}, "virt-test": {"1242": ["Guannan-Ren", "2013-12-14T12:02:19Z", {"yangdongsheng": ["this test here is clear. one question is can we configure the guest agent automatically in test code? by the way could you squash the 2nd commit into the 1st one, it just remove a blank line the 1st commit introduced. thanx", "okey, some small issues here. i will run the test after these issue being addressed. thanx", "there is my result of this test. code could you help to figure out where is the problem happened??", "good point!! actually, there is already a function in vm _ xml. py to achieve this request. please check virttest / libvirt _ xml / vm _ xml. py: set _ agent _ channel. and is using this function in this patch. yang", "i checked the environment in my guest, informations as follows: code", "so, it means these patch here is okey now? what i meet before is about selinux, right?", ", do not worry!! it is okey and i am merging it now. thank you:)", "do you mean a virsh dompmsuspend command have to print some message in stdout? i am not sure about it. or did you mean syntax here?", "please check virttest / libvirt _ xml / vm _ xml. py, there is a sync method in vmxml class. it can achieve what you want here.", "s / params / vm _ name", "as set _ agent _ channel is a static method of vmxml, we do not need a obj of vmxml to call it. code"], "Guannan-Ren": ["i squashed the issue fixes into a one commit.", "i use my local guest with swap partition. the virsh dompmsuspend < domain > disk will success.", "is it okay for you guys, if there is any problem, i can try to manage to resend or something"], "leonstack": ["i think the fail reason is syntax package wasn't installed in the guest or the version is too old. i tested it on a guest with syntax installed, the execution failed, but a guest with syntax worked. and after removing this package, execution failed. hope this can be help for you:)", "syntax is just for syntax, i don't know the fail reason of 'guest - suspend - disk yet :(", "by the way your branch shouldn't be syntax, please resend this pullreq with another branch based on syntax"], "lmr": ["#username, the latest JeOS image I pushed has qemu-ga installed, so at least for simple tests, no need to be worried anymore."]}], "1582": ["lmr", "2014-04-09T15:09:44Z", {"yangdongsheng": ["does there any caller exist passing remote _ ip, remote _ pwd or remote _ user to call service _ libvirtd _ control? afaik, there is only one caller in tp-libvirt. virsh _ iface _ trans. py. and it call service _ libvirtd _ control to start libvirtd on local host, without any remote parameter. what i mean here is that does we really need to add remote _ xxx parameters to service _ libvirtd _ control as it is not an sugguested way to manage libvirtd service? imo, utils _ libvirtd. libvirtd _ xxx and utils _ libvirtd. service _ libvirtd _ control is used to manage libvirtd service on local host. so we can use the module variable global _ libvirtd in it. if we need to control remote host, i sugguest to use class utils _ libvirtd. libvirtd. this is the similar way with other service module such as nfs. we can make it as a standard usage of service module in autotest / virt - test. so, i think the function service _ libvirtd _ control is here just for the compatibility, we should avoid to use it in new code. if no, at least we should make it used limitedly, only for local host. does it make sence?", "oh, yes, i see the callers in utils _ conn. as it is in virt-test repo, i think we can use the new and standard usage, class utils _ libvirtd. libvirtd, to replace it safely. about the non root issue in using service module, i think we can decide the system type without readlink / proc / 1 / exe, such as checking systemctl command. anyway, my opinion here is that we should limit the usage of utils _ libvirtd. service _ libvirtd _ control. so use it to control local host is enough, just keep it simple. if you agree, please post a \"go ahead, then i will send a pr for it.", "okey, a pr is coming today)."], "lmr": ["yes, just look at syntax more carefully and you will see the callers that use the extra params.", "and no, we can't use the global variable. syntax was designed to run as a regular user as much as possible, and one of the first things the service module will do on init is to try to readlink / proc / 1 / exe, which can only be done as root. this breaks virt-test big time when running the default qemu set as non root, which i, to put mildly, hated.", "sure. unfortunately i don't have a lot of time to work on virt-test, so i resort to quick fixes. i'll gladly take patches to make things more in line with your vision for the feature."]}], "2030": ["ldoktor", "2015-02-28T18:37:39Z", {"ldoktor": ["code"], "lmr": ["ok, let me give this a spin."]}], "1347": ["jzupka", "2014-01-14T11:31:44Z", {"jzupka": ["new version added and fixed based on comments url"], "ldoktor": ["hi ji \u0159\u00ed, thank you for this fix, works fine. please remove the unnecessarily lines and then it's imo ready."], "lmr": ["cool, looks good", "please write another pr introducing 'vhostforce as a parameter and fixing that particular use case. thanks!"]}], "1820": ["FengYang", "2014-09-03T08:14:34Z", {"ypu": ["as this fix get two ack and pass the travis, merge it. thanks and"]}]}, "ESP-Website": {"906": ["btidor", "2014-01-07T03:00:42Z", {"benjaminjkraft": ["okay, this looks good to me, merging.", "wait, is it using an old version of jquery, and if so, why?"], "jmoldow": ["we are using a different version of jquery on this line, so please don't remove it. note that this extends main. html, so it is already including common. js. no need to add it a second time.", "yes. according to the comment, our version of jquery \"may be different than the version of jquery that customforms-validation requires. i haven't checked to see if there is a newer version of jquery. validate that uses our version of jquery. if there is, then we can change this."]}], "1885": ["luanthe", "2015-11-19T02:52:58Z", {"benjaminjkraft": ["should this not go up above with the other check? i don't entirely understand the code here but it seems like this is unnecessarily inside a loop, and maybe could even share code with the other check. edit: oh, i see, i misread. would still be nice to share the code, but probably not worth it.", "if this is staying here, it's a bit confusing that this syntax is distinct from the one in the parent loop."], "luanthe": ["yeah, \"rule of three. there might be a smarter way of doing this, but i didn't think of one at the time."]}], "208": ["jmoldow", "2011-12-15T09:23:18Z", {"aseering": ["fyi, with the dashboard improvements, page-load times are still at best number 0sec on my desktop computer for splash number. not as good as i'd hoped; though a far cry from the 5min they used to be... so a solution to #164 could well be a good idea.", "these look good to me. day to comment, then will merge.", "looks good to me. \"day for comments, then merge."], "jmoldow": ["added fix to issue #164."]}]}, "nipype": {"1399": ["oesteban", "2016-03-07T18:12:57Z", {"chrisfilo": ["the tests fail because of the syntax error in rst files generated from the docstrings for the new interface. code"]}], "963": ["oesteban", "2014-10-16T14:53:56Z", {"oesteban": ["edit: i've rewritten this, hope it is more aligned with what you were thinking:)"], "satra": ["use a specific exception here."]}]}, "bedrock": {"851": ["pmclanahan", "2013-05-09T16:01:50Z", {"pmclanahan": ["hmm... i kindof like not doing the checks i don't need by putting the quick fails first. if i check everything before returning early then i get none of that benefit. i could do a few nested ifs if that'd be better.", "need the real url to just work so the cdn has a place to get the content :-)", "i thought it would matter because the superclass uses it to tack on the locale. i guess it would chose the default w / o any real request data, but it seemed to be appropriate.", "good point!"], "icaaq": ["should you mention that if they use jquery it's better to include tabzilla. js after the jquery script?"], "Osmose": ["welcome review moar tests and you're good to go!:: + 1::", "looks good to me the comments are nits for the most part. review a single slice or piece of shortcake \u2013 likely strawberry, but could be peach. this emoji is sometimes used in birthday greetings, as a variation of the birthday cake emoji.", "it'd be a bit more readable to move these conditions into a few variables and then collapse this multi-line conditional into a single line.", "when testing middleware, it's better to create a request using syntax and pass it through syntax than to invoke the entire test client. provides more isolation.", "there's number different conditions tested in that middleware, you could use a few more tests to make sure they function as expected as well.", "curious, why not a cdn in this case?", "you can save yourself some code by adding another method to the class that does this. codealso, is syntax really required here? the active locale during the middleware run doesn't really matter.", "nah, the middleware itself is what determines the locale that should be active, it does not use whatever locale was previously active at all. if you look at the prefixer class it uses it defaults to syntax if the request doesn't offer any useful info on what locale to use."]}], "1186": ["kyoshino", "2013-08-22T11:26:50Z", {"pmclanahan": ["Updated to include French in another PR."], "kyoshino": ["thanks!"]}], "3149": ["jgmize", "2015-07-22T17:42:53Z", {"pmclanahan": ["i think this is a fine solution, but the other way we solve these kinds of things is to have them in syntax. i'm thinking we'll eventually want to get everything out of syntax, so my question is whether you think this pr is a good chance to do some of that?"], "jgmize": ["if you don't make it lazy, you either can't override it from url or you can't default it based on the debug setting in local. py, unless i'm mistaken.", "once we're done eliminating url i don't really see a point in keeping settings as a dir anyway - - i'd rather just have url pull everything from env vars."]}], "2745": ["flodolo", "2015-02-17T18:35:42Z", {"pmclanahan": ["does this need a change to the home page regex in global. conf now that the wild-card change isn't happening right now?"], "flodolo": ["no, this is a locale that we used to support on mozilla. org, so it's already thereurl"]}], "1729": ["alexgibson", "2014-02-24T15:42:52Z", {"alexgibson": ["pr updated!"], "jpetto": ["only case i could find here that this wouldn't fix is if there's a modal created with syntax. zooming on a modal without the syntax class applied would have the same layout issues. i 'm wondering if syntax should override syntax on small viewports, forcing it to be syntax if the screen size is less than our tablet breakpoint. could maybe use the syntax line from the syntax page?", "looks good! review a magnifying glass, pointing to the right. the same as the right-pointing magnifying glass emoji, but with the glass on the left instead of the right."]}], "3143": ["jpetto", "2015-07-20T15:32:58Z", {"alexgibson": ["tested locally and fix seems to work well, review:: + 1:: also filed ( url for syntax highlight issues in fx number."]}], "2100": ["TheoChevalier", "2014-06-13T19:03:19Z", {"jpetto": ["a good way to test ga is to use the syntax function from syntax, and then set your syntax in syntax, like: syntaxif you install the ( url you can see / inspect all ga calls.", "no problem! for the js / css conventions, we have styleguides is a situational, but is a good starting point. the rest is rather url specific, and will improve with time / experience. a face with smiling eyes and a broad open smile, showing upper teeth and tongue on some platforms. conveys general happiness and good-natured amusement. similar to a yellow face with simple open eyes and a broad open smile, showing upper teeth and tongue on some platforms. conveys general pleasure and good cheer or humor. not to be confused with \ud83d\ude03 grinning face with big eyes or \ud83d\ude04 grinning face with smiling eyes, which have the same smiles but more expressive eye shapes. grinning face but with but with taller, more excited eyes.", "looking really good - almost there! last thing after the above tweaks would be to optimize the images. a quick test locally showed a number reduction on the number 5kb syntax! i ran all through ( url", "- if you need any help going the jpg route, please don't hesitate to ask myself or thanks!", "excellent! if you haven't already, maybe try dropping the quality down to ~ 75%. that _ usually _ is a sweet spot. if significant artifacts appear, then i think number 3kb is totally acceptable. thanks!", "woo! number 0kb is great. looks like the other images could still use a run through imageoptim, but that should be it.", "small nit-pick - no need for syntax qualifier on syntax values.", "we've got a handy ( url you can use here.", "no need for the nested selector here - could just do syntax.", "to ensure the requests aren't aborted, all ga calls should use our ( url", "small nit-pick - indentation here is off. should be two spaces in from the previous block.", "we should probably get a better url here, and should wrap the string for l10n. a happy and smiling face with big open mouth, showing teeth. differs only slightly from the smiling face with open mouth emoji by the fact that these eyes are emoji-style smiling eyes, instead of tall oval eyes. also, for consistency, i'm thinking this link should have a period and the trailing syntax like the badge link above.", "wrap the string for l10n?", "i think these may be better as a syntax and syntax.", "unless we expect non-firefox users to hit this page somehow, you could probably drop all the syntax prefixes.", "would be nice to have syntax on the relevant links.", "small nit-pick - should have number space indentation inside the sandbox function.", "you could simplify the two selectors / listeners above with something like syntax.", "could simplify a bit and remove the syntax qualifier on these first number event listeners.", "small nit - our convention is to put each selector on its own line, like :c ode", "to match the psd, you can specify the standard weight of open sans with the syntax mixin. if you then remove syntax, the font will match the design.", "i think syntax is a little closer to the psd. you could play with the gradient a little bit to try to more closely match the stops of the psd, but only if you have time.", "ah, neat. i had not seen this block before. maybe add an html comment above the syntax noting that the markup below is placeholder only?", "can we put this inside the syntax block so it doesn't get sent to the client?", "ah, sorry, i should have been more explicit here. i think syntax should stay a syntax, and then each syntax could be a syntax, with each syntax being a syntax.", "this could probably be a syntax as well.", "no need for this mixin - syntax's already have this mixin added in syntax.", "if you add syntax in this selector, you'll be pretty darned close to the psd."], "TheoChevalier": ["thanks jon:) should be pretty okay now, i verified that ga was working as expected. however, i still can't get the right font-weight on the blue button, even with open-sans mixin, because font-weight: bold is defined in. button cssi'll wait before rebasing the latest commit", "number, ouch, i used url it seems i should stop using it:)", "actually we have a quality loss :/ on the left you can see the number 8kb picture, on the right, the mockup do we still want to use the number 8kb file?! ( url", "sorry, got busy other the weekend with other projects. i added the. jpg, it looks really great on nightly, i can only see a very minor gradient difference on blink, but that's an edge case we don't have to worry about for this page. the picture size is now ~ 103kb, i've set the jpeg quality to number, i can reduce if needed.", "number looked a bit too much, number looks like a good compromise. 40kb\\ o / thanks again for all the feedback", "sorry, i thought you said other pictures than nightly-background. png were already ok. updated, and got huge win on size", "this will never be exposed, it's actually only a placeholder for localizers to get inspired. locales will provide content for the whole {% l10n promo _ locale%} block. for instance: url", "good idea"], "sgarrity": ["in the old / firefox / aurora page, to get this large centered background-logo effect without a huge file-size penalty, we opted for a large centered jpeg, that faded out to black on the far left / right: see this old example: url"]}], "3501": ["l-hedgehog", "2015-11-03T00:35:09Z", {"alexgibson": ["i believe the co-ordinates here may also need updating? url"]}]}, "pylearn2": {"1390": ["goodfeli", "2015-02-09T18:10:31Z", {"nouiz": ["i would be more clear like: the old parameter name for a was log _ a. this was confusing as it wasn't defined in term of log _ a. we just renamed the parameter name to a. the behavior is the same."]}], "790": ["ghost", "2014-04-03T12:32:57Z", {"goodfeli": ["you need to register your e-mail address here first: url"]}], "1353": ["minhlab", "2015-01-17T22:23:02Z", {"lamblin": ["i'm afraid the merge commit will confuse the history on github. instead of merging in cases of conflicts, we try to _ rebase _ on the latest master instead, and force-push on the pull request. do you think you can try to do that? otherwise i'll try to find some time to do it.", "thanks!", "i think it may be better to fix syntax so it accepts a list as syntax.", "in that case, i'm pretty sure there is no particular reason. it may even already work, and the only change needed would be to update the docstring:) if it does not, then changing the syntax method to set syntax should be enough."], "bartvm": ["looks good to me although some unit tests that can run on travis might be a good idea?", "oops, mistook that for a script, my bad. looks good then!", "you should probably follow the format used everywhere else ( url", "whichever you prefer. no official responsibilities come with putting your name at the top; it's mostly for credit i guess. most people will ask their questions on pylearn-users or pylearn-dev, regardless of what it says at the top of the file."], "minhlab": ["yes, there are", "i removed syntax and change things to make it work.", "i ( url with lisa-lab / master because github complained that there was a merge conflict.", "i have never had time to learn git carefully but now it starts to make sense to me :d", "i think so but hesitate to modify things...", "ok, i pushed a new version.", "i mean maybe people didn't accept lists for a reason.", "you're right, i'll do it next week."]}]}, "ipython": {"3037": ["techtonik", "2013-03-19T15:18:09Z", {"ivanov": ["thanks for your contribution, but i'm not sure it's necessary. i propose we continue the discussion on #3025 where i had indicated the way we currently have available for doing this sort of thing."], "ellisonbg": ["i am going to close this pr until we have made a decision in the context of #3025 if we go this direction, we can always reopen the pr.", "closing."], "techtonik": ["i still need to know the ipython version that is running in specific console."], "Carreau": ["#3025 is still open. I'll add a comment to revisit this."]}], "3381": ["minrk", "2013-05-29T21:13:15Z", {"ivanov": ["we figured that we can add the arbitrary factor later, so decided to merge as is."], "wjakob": ["specifyingcodeat the beginning of every notebook indeed does the job of providing images at the right resolution, but it's unfortunate that this is always necessary as high-dpi displays are fairly common nowadays. it _ is _ possible to get a cross-platform pixel density value from the browser. to me, this seems like a much more robust and user-friendly way to do this automatically."], "chuckdries": ["the command% config inlinebackend. figure _ format = 'retina appears to work well in jupiter notebooks but not in qtconsole. any ideas why?"], "takluyver": ["qtconsole can run on pyqt5, i believe. i suspect there's something the qtconsole code needs to do to display the image at double-resolution, though."], "dkasak": ["is there a reason this is not the default, at least for notebooks? the out-of - the - box experience for notebooks is pretty bad right now on a higher resolution screen, with both graphics and text very visibly blurry.", "ah, the first part explains it. as was mentioned before, it would probably be possible to query the dpi value. would it make more sense then to implement this in jupyter by making it send this command when the python kernel is used?", "> you can't really do that either, as the frontend try to be as agnostic as possible wrt what language is implemented in the back end and sending that command would be an ipython specific thing. also nothing guarantee that the kernel is connected to a single client in which case \"connected to hi dpi is not a binary choice. that sounds reasonable and i realize the frontend is maximally agnostic of the backend by design. on the other hand, this particular situation is less than ideal and seems to point to a possible deficiency in the abstraction from a usability point of view. perhaps there * is * a need for a way to specify some backend-specific configuration in jupyter? i 'm also trying to consider what a higher-by - default figure resolution would imply for lower resolution screens. i'm not too familiar with the current architecture of jupyter, but i suppose there isn't any scaling involved so the figure would simply appear larger than usual? i'm wondering whether this is perhaps a more graceful kind of failure than displaying blurry images. then again, if there isn't any scaling involved, i'm not sure why i even saw blur as opposed to just a very small figure. i guess a first reasonable step would be to at least make the syntax for this a bit less arcane and awkward, such as was suggested in #3982. syntax or syntax seem much cleaner than syntax"], "kencoken": ["running notebook server number. 0 and ipython number. 1, and using :c odewhen running matplotlib to get retina-resolution images, but these are then displayed double-size in my notebooks. has something changed recently to make this fix no longer function, or am i doing something stupid at my end?"], "minrk": ["could introduce an arbitrary scale factor, i guess.", "that's enough for the spec, but i'm not sure if the qtconsole handles it."], "Carreau": ["could the 2x factor be modifiable? we're starting to see higher resolution that have bastard format that are not 2x. i'm convince that their are only few users, but having a syntax would change the api in the future if we want multiple option. if you think that unnecessary for now, that also fine with me.", "> is there a reason this is not the default, at least for notebooks? the out-of - the - box experience for notebooks is pretty bad right now on a higherg resolution screen, with both graphics and text very visibly blurry. yes: because the kernel does not know it is controlled from a notebook. and even if it is controlled from a notebook it does not mean the notebook is on hi-dpi screen.", "> i do probably agree that it is time to update the default on this. i agree > that kernels should be agnostic to frontends, but the current default * is * > biased towards particular frontends with low resolution rendering. i don't > know the numbers, but high resolution screens are extremely popular these > days. i have been embarrassed multiple times showing people matplotlib on > my laptop and having to explain to them why it looks bad. defaulting to > something that looks good everywhere is a safe bet in my mind. > > i am also a thumbs-up gesture indicating approval. for making the api simpler to adjust. that way if folks have > large notebooks and need the lower resolution, it is easy to set it. if / when we change, i would consider that close to breaking api so i would _ prefer _ to have it in a major version of ipython / ipykernel."], "ellisonbg": ["i don't think we need to do the arbitrary scale factor yet. i don't have a retina screen to test, but the code looks good."]}], "6015": ["jcjaskula", "2014-06-18T22:36:06Z", {"jcjaskula": ["thanks for the code review and pointing out several mistakes i made. i update my changes and took the lead in adding some documentation in the custom. js template to highlight the new event related to the dashboard loading.", "yes, i was thinking doing such a thing but was uncomfortable in modifying the history and i didn't know how it would display here with the code comments. please let me know what you guys prefer before merging.", "rebased / squashed for a cleaner history.", "thanks, don't worry about the delay. i was fine with my branch to work on the extension. i'll try to release something soon. i'm pretty busy so it won't be perfect, but at least usable."], "Carreau": ["and also in general try to avoid having your editor trim white space at eol, it adds extra noise when blaming or bisecting. we try to clean these whitespace only on line that are modified or closed to modified lines.", "i'm a thumbs-up gesture indicating approval. in adding an event.", "thanks, as it is relatively simple i would even rebase / squash and force push to have a clean history, but i don't know how other are feeling.", "thanks, i put a note on dev meeting to get comment from a third dev.", "thanks a lot, sorry for the time to merge, we did a review during the hangout and merged while we were discussing. looking forward to more contribution and to get your dashboard released as a separate package!", "the number space a re markdown formatting. please avoid removing, or code will not be highlighted. cf: url", "idem here, indent by number spaces."], "damianavila": [" to this event too... it is a minimal change and it is a necessary entry point for all of us I like to customized our notebook look and feel D19"]}], "3674": ["minrk", "2013-07-17T21:51:03Z", {"ivanov": ["looks great..."]}], "10443": ["Carreau", "2017-04-11T18:59:26Z", {"thisch": ["typo: syntax instead of syntax", "see #10444"]}], "9522": ["Carreau", "2016-06-01T22:05:23Z", {"takluyver": ["is it likely to change enough to be worth testing? i don't want to slow travis down too much.", "tests are run in parallel except when commits and prs are coming in fast enough that travis throttles us. i don't feel very strongly about it, i just think it's worth considering."]}], "4708": ["damianavila", "2013-12-17T11:51:45Z", {"ellisonbg": ["looks good, merging.", "while you are at this, can you audit the other mathjax config things to make sure nbconvert is tracking what is in the live notebook. for example, we also now set syntax inside the syntax section. might as well update all that while we are touching this code.", "same here as above."], "Carreau": ["will read more carefully but at first glance null. tplx should be regenerated and test fails.", "and what would be the meaning of syntax it would nice to be more explicit.", "can you do that? can you point me at the doc in jinja that speak about that!? i was wondering if is was possible but never found it!", "ah, yes, remember seeing it now. it never marked my brain as beeing what i was looking for. great!", "yes, i would prefer something more explicit. i'm searching for a better name, but can't find."], "damianavila": ["yep, not ready for review yet... i did some things too much complicated... i will work on this in a couple of hours...", "changed the name to of empty prompt to a more explicit one: syntax: wink: instead of syntax.", "any other comments?", "people, any more comments on this?", "thanks!", "syntax is for empty... i try to make it short but i can change it if you want...", "yes, you can do it!!! a yellow face with a slight, partially open smile and its left eye winking. signals a joke, flirtation, hidden meaning, or general positivity. tone varies, including playful, affectionate, suggestive, or ironic. an emoji form of the;) emoticon. not to be confused with the more mischievous or sexual a sly smile, often used with a sexual, or smug connotation. not to be confused with the unamused face, which has similar eyes, but a displeased mouth. on snapchat, this emoji next to a contact denotes that this person snaps you frequently, but you do not frequently snap them in return. smirking face. here it is the ref: url", "ok, think a little bit... if nobody come up with a better name. signals a joke, flirtation, hidden meaning, or general positivity. tone varies, including playful, affectionate, suggestive, or ironic. an emoji form of the;) emoticon. not to be confused with the more mischievous or sexual a sly smile, often used with a sexual, or smug connotation. not to be confused with the unamused face, which has similar eyes, but a displeased mouth. on snapchat, this emoji next to a contact denotes that this person snaps you frequently, but you do not frequently snap them in return. smirking face.) by tomorrow, i will change it to syntax to make it more explicit...", "ok, i will do it tomorrow morning... it's late here; -)", "ok"]}], "5886": ["mattja", "2014-05-22T12:50:39Z", {"minrk": ["yes, please do make the same pr upstream to pyzmq.", "zeromq / pyzmq #551 is merged, closing here in favor of #5927."], "mattja": ["the recent change in commit 9db97427835ff55ca90479b4638656b367f87ae5 means that code in external / ssh / is no longer used, so perhaps this pull request should have been upstream to pyzmq?", "submitted upstream zeromq / pyzmq #551"]}], "1898": ["minrk", "2012-06-11T01:38:42Z", {"fperez": ["yes!!! finally it bugged you enough to do it, i kept punting;) thanks man, merging now."]}], "1693": ["bfroehle", "2012-05-03T17:47:30Z", {"bfroehle": ["spelling fixed, and a new commit describing the history of the variable."], "minrk": ["looks sensible to me, after fixing the little typos that we are deprecating the variable, not depreciating it.", "thanks! and no worries about force push - it's always okay to force-push to a pr, i do it to fix spelling errors or rewrite commit messages all the time.", "s / depreciated / deprecated /", "do you want to add a note here that explains that this var only exists in number number? i believe it was added as a rename in the great reorganization of number, but as described in #1167, the complexity and confusion is probably not worth whatever aesthetic improvement may have been achieved."]}], "5313": ["minrk", "2014-03-10T02:47:45Z", {"jdfreder": ["looks good to me, i'm surprised the syntax function was being called again in the template exporter.", "merged, thanks"], "ellisonbg": ["I think it looks fine, but I don't know as much about this part of the code."]}]}, "quark": {"210": ["roaet", "2014-09-17T18:58:14Z", {"asadoughi": [":: + 1::"]}], "306": ["Cerberus98", "2015-01-13T00:05:58Z", {"Cerberus98": ["wat", "left this in so i didn't have to have quark actually installed to run it"], "ghost": ["looks good to me"]}]}, "pombola": {"791": ["teuben", "2013-09-12T13:06:20Z", {"dracos": ["i have removed the incorrect syntaxs that were causing the navigation display issue, so it should be a bit better now."], "teuben": ["i've done a \"git merge upstream / master, which i hadn't realized was missing from my clone. also fixed some menu items, but this is no doubt a work in progress. the previous pull request was done from an outdated master, but had no conflict since it was limited work on the branch.", "thank you so much!! i had missed that hierarchy mishap, and then cutting and pasting did that damage n times, including a spurious' b '. thanks for fixing!"]}], "2051": ["duncanparkes", "2016-03-02T11:39:11Z", {"tmtmtmtm": ["Thumps up sign indicating approval"]}]}, "werkzeug": {"891": ["untitaker", "2016-04-10T21:56:07Z", {"homu": ["an umbrella with a hooked handle, displayed open with rain drops falling on it. the color of this umbrella varies by platform. in november number a global durex poll named this the \"unofficial safe sex emoji to mark world aids day. the latest upstream changes made this pull request unmergeable. please resolve the merge conflicts.", "an umbrella with a hooked handle, displayed open with rain drops falling on it. the color of this umbrella varies by platform. in november number a global durex poll named this the \"unofficial safe sex emoji to mark world aids day. the latest upstream changes made this pull request unmergeable. please resolve the merge conflicts.", "an umbrella with a hooked handle, displayed open with rain drops falling on it. the color of this umbrella varies by platform. in november number a global durex poll named this the \"unofficial safe sex emoji to mark world aids day. the latest upstream changes made this pull request unmergeable. please resolve the merge conflicts."]}]}, "pelican": {"1617": ["pxquim", "2015-02-07T18:35:02Z", {"goanpeca": ["what about subparts in a page, not an article. the series plugin works great with series of articles, but what if you want to keep editing of content simple but provide a \"complex for the styling of lets say a homepage or any other page? is it possible somehow to have subparts in a markdown file they would get rendered in the specific location in the template. right now there is a content tag in the templates, but that's it. lets say a stupid... template syntax is :c odethere are some extensions to include a grid in markdown, but these force extra nomenclature... right now i am doing these \"complex templates by writing the pages directly in html, but of course you loose the flexibility and cleanness of markdown. would something like this be worth doing?"], "justinmayer": ["have you see the ( url i suspect you'll find that it provides very similar functionality.", "/ you both raise some good points, and i can see how the use cases you describe would benefit from the functionality provided here. as suggested, perhaps this might be best suited as an optional plug-in. would you be so kind as to reformulate this as a plug-in and resubmit it in the pelican-plugins repository?", "this functionality has been moved to the syntax plugin, as noted above."]}], "1927": ["Scheirle", "2016-03-14T18:21:41Z", {"Scheirle": ["has anyone else some feedback or can this be merged?", "renamed syntax to syntax. note to self :c ode", "you're right, fixed it. now it is also possible to load custom extensions e. g. :c ode", "maybe we should add syntax as default? refs #1024url"], "Totktonada": ["sooner or later that should happens. sooner is better. only one note: it is breaking change and should be mentioned in the release notes."], "justinmayer": ["thanks for all your hard work on this, bernhard. much appreciated! a thumbs-up gesture indicating approval."], "randomllama": ["i found this line confusing. since we're passing kwargs to markdown, i was expecting syntax to work in the config. perhaps it would be better to append? code... or the like."]}]}, "django-debug-toolbar": {"797": ["dankram", "2016-01-05T19:31:01Z", {"tim-schilling": ["you've reversed the order in which the syntax are added here. while i don't think the impact is that significant since the likelihood of someone using syntax to prefix a url pattern is low, this pr shouldn't be changing that."]}]}, "ralph": {"1967": ["szok", "2015-11-20T16:42:42Z", {"ar4s": ["the letters ok, shown enclosed in a square. meaning okay, denoting approval. the opposite of the squared ng emoji."], "mkurek": ["the letters ok, shown enclosed in a square. meaning okay, denoting approval. the opposite of the squared ng emoji.", "flow: - add field syntax to asset - copy values from syntax from boasset to syntax in asset - remove syntax field in boasset - rename field syntax to syntax"]}], "30": ["ambv", "2012-07-25T09:22:13Z", {"quamilek": ["please install this package manually: syntaxit will be fixed soon."]}]}, "Minecraft-Overviewer": {"438": ["Fenixin", "2011-07-21T21:26:45Z", {"agrif": ["good work, as always! i don't think the north orientation stuff touches any of the texture code, so it's probably safe to push now."]}]}, "sentry": {"3222": ["mattrobenolt", "2016-05-12T18:16:37Z", {"mattrobenolt": ["i should mention that this was related to url"], "dcramer": [":: + 1::"]}], "3833": ["mattrobenolt", "2016-07-28T20:51:23Z", {"dcramer": ["reviewed number of number files at r1. review status: all files reviewed at latest revision, all discussions resolved. - - - _ comments from ( url <! - - sent from url - - >"]}]}, "deis": {"4856": ["monaka", "2016-01-18T06:05:08Z", {"bacongobbler": ["the test failure was due to an unrelated change which has been fixed in master. merging!"], "monaka": ["this will fix #4854"], "mboersma": ["jenkins, add to whitelist."], "deis-admin": ["thanks for the contribution! please ensure your commits follow our ( url this code will be tested once a deis maintainer reviews it. your pull request can earn you credit at digitalocean! see url for details."]}], "1437": ["bacongobbler", "2014-07-25T21:45:09Z", {"carmstrong": ["looks good to me although i still propose an syntax or syntax commit subject. i find myself in need of that sometimes."], "bacongobbler": ["i always find improvements / enhancements under either refactoring or style, but i could see a need for that. do you have an example for a time an enhancement is not considered a refactor?", "i like number - letter subject titles, but i can't think of any outside of syntax which looks like \"improv and \"enhc which looks ugly. got any suggestions? d:", "a thumbs-up gesture indicating approval."], "mboersma": ["looks good to me"]}], "5047": ["slack", "2016-06-06T17:34:34Z", {"bacongobbler": ["just waiting on ci then will merge a thumbs-up gesture indicating approval."], "slack": ["if second looks good to me would just merge this, that'd be 100 emoji: the number one-hundred, written in red, underlined twice for emphasis. originating from the number 100 written on a school exam or paper to indicate a perfect score of 100 out of 100. teachers in japan may also use a stamp in addition to the 100 mark, to indicate that a student has performed very well. this 100 emoji is commonly used as a shorthand for 100%, with the usage meaning \u201ckeep it real\u201d or a similar sentiment. a 100 emoji can be used to express pride or general acceptance of an idea. in snapchat, the 100 emoji appearing next to a fire emoji indicates a 100 day snapstreak..", "oh yeah, forgot ci runs are long. i'll keep track of the pr then. a person dancing, most commonly displayed as a salsa dancing woman wearing a red dress.. originally intended to be gender-neutral, but now considered to be a female dancer. previous versions of this emoji displayed a male dancer, or a stick figure dancer."]}], "4196": ["mboersma", "2015-08-04T04:56:14Z", {"carmstrong": ["code looks good to me"], "technosophos": ["code looks good to me"]}], "3627": ["bacongobbler", "2015-05-05T20:37:31Z", {"carmstrong": ["code looks good to me"], "mboersma": ["code looks good to me is a more appropriate place than the systemd unit, and syntax is preferable.", "yes please, this is more robust and should go into v1. 6."], "smothiki": ["code looks good to me"]}]}, "buildbot": {"2163": ["rayalan", "2016-04-24T18:05:15Z", {"tardyp": ["thanks", "get", "indeed. codeas it might return none if is defined to none. i am not very fond of this way to write it. can we calculate tochangeid before the loop, so that this is easier to read?"], "cmouse": ["isn't that the original line?"]}], "1923": ["iblis17", "2015-11-16T13:00:52Z", {"jaredgrubb": ["looks good to me!"], "iblis17": ["but i have no idea about the failed test. i am investigating on it...", "hmm... i just try to make travis ci rebuild, then it seems that everything works fine."]}], "1777": ["apilloud", "2015-07-17T17:21:07Z", {"sa2ajj": ["thank you:)"]}], "1418": ["gangefors", "2014-12-05T16:27:31Z", {"sa2ajj": ["Thank you!"]}], "1044": ["yetanotherion", "2014-01-13T17:30:42Z", {"yetanotherion": ["i need to rewrite the commit messages sorry for that. i'll close that one and create a new one."], "djmitche": ["you can push a rebase to the same branch and buildbot will update it, so no need to close. shall i re-open this pr?"]}], "2594": ["rodrigc", "2017-01-15T01:46:44Z", {"rodrigc": ["which file should this function go in?", "refactoring depends on url", "refactoring completed"], "tardyp": ["lets add a buildbot _ worker. compat module", "looks like this deserves factorization in a function"]}], "864": ["MichaelMayorov", "2013-09-05T15:19:59Z", {"MichaelMayorov": ["updated"], "jaredgrubb": ["that's all my comments. otherwise looks ok to me!", "looks like this list was in alphabetical order... wouldnt hurt to move \"protocols so it keeps that order"], "djmitche": ["this implementation looks fine. this needs the test changes described above, as well as updates to the documentation and release notes.", "this test, and more below, are named after the method being tested. you've changed the name of the method, so the test should change, too.", "you'll also need tests that verify all of the new checks that you've added - invalid protocols, duplicate ports, etc. the tests above only check syntax."]}]}, "remo": {"1235": ["akatsoulas", "2016-09-13T14:38:19Z", {"glogiotatidis": ["\u03b9 'd bring all those in this project. these paths in bedrock are not guarantied to work."]}]}, "celery": {"186": ["jbochi", "2010-09-11T19:22:58Z", {"ask": ["thanks! nvie will look into this as soon as he gets the time."], "jbochi": ["hi nvie, that's the best i could do, but please feel free to modify / optimize the function. it looks complex indeed. we could do something like this :c odeit 's a simpler implementation, but not very fast. and you're welcome. it's a honor to contribute.", "ps: just realized that the example above would not work. it does not take into account that sometimes we have to add one week.", "ask, my full name is juarez bochi:) i will have a look at the tests tomorrow. thanks!"], "nvie": ["while i understand the need to be more conservative with the scheduler wake-up, i find it rather tough to check the correctness of the implementation of the syntax method, since it's a bit complex. i think that the necessity certainly exists for this implementation, though. i strongly believe that this method could be implemented simpler, but as long as the tests pass, this is a good place to start optimising from. thanks for the patch.", "i agree that that is indeed a complicating factor. when i tried to quickly reimplement the function body in a simpler fashion, this was exactly what i did not account for, too. i'm currently on a somewhat tight schedule, so i don't have the time to look at it more closely, unfortunately :("]}]}, "pip": {"3707": ["alquerci", "2016-05-20T23:58:17Z", {"alquerci": ["seems has been fixed since python number ( url"], "pradyunsg": ["hi! could you by any chance fix the conflicts in this pr? sidenote: the tests seem to be failing on appveyor.", "could you fix the conflicts in this pr; again?", "closing due to lack of a response.", "please don't have a numbered list here. the news fragments get aggregated into a list. this would result in a list containing a list - nobody wants that in news.: phaving a commit message style summary line followed by a small passage describing the change would probably be a better format.:) - - - this suggests to me that this pr is doing multiple things at the same time; if so, is it possible to split them?", "nit: catch", "nit: use syntax", "nit: use plain english; as above.", "i think it makes sense to have a docstring here describing why we don't simply reuse syntax.", "maybe make this syntax?", "nit: you're using the same decorator in multiple places; you can simply make it into a module level underscored variable and decorate functions with it. code", "i'm curious, what are you seeing?", "skip the test or make it fail if you come inside the except; maybe don't actually catch it? same for later cases as well."], "dstufft": ["you said this has been fixed - does that mean this pr is no longer needed? or that it's needed for python's older then number?"], "BrownTruck": ["hello! i am an automated bot and i have noticed that this pull request is not currently able to be merged. if you are able to either merge the syntaxmastersyntax branch into this pull request or rebase this pull request against syntaxmastersyntax then it will eligible for code review and hopefully merging!"]}], "2560": ["xavfernandez", "2015-03-17T21:33:41Z", {"xavfernandez": ["my bad, there are some more bz2 extensions to check", "finally went with the simple solution:)", "and i forgot the syntax dance.", "replaced by #2629"], "Ivoz": ["it strikes me that instead of increasing the complexity of the logic in that syntax series, pip could instead just analyse what archive formats its python supports at runtime, and change the error message around."]}], "3837": ["njsmith", "2016-07-10T03:26:37Z", {"xavfernandez": ["it looks like this got stuck, should it be closed?"], "dstufft": ["instead of syntax this would probably be better as either a blank value or something like syntax. singling out glibc where will make this value nonsensical as soon as someone adds support for something like musl.", "eh, it should be pretty easy to figure it out based on pip version?", "yea, but not-glibc - or - musl - or - msvc - or - ublic - or... starts to become super ugly, and i'm not sure how useful it will be to pull that information out on a regular basis.", "well, everywhere else in the database we just use a singular value for unknown and we don't attempt to enumerate all of the known-unknowns in that value. often time that value is just null."], "njsmith": ["eh, i think it'd be an improvement, but am not really up for arguing about it more", "my thinking was that syntax is ambiguous: it could mean \"not unix, or it could mean \"not glibc, or it could mean \"not glibc or musl. and trying to disentangle those in the linehaul data will be a hassle later, when there are pip's that only know glibc and pip's that know both feeding into the data simultaneously. so better that we say exactly what we know - - when we add support for musl we can change this to syntax or whatever.", "not as easy as if the data is right there and unambiguous :-)", "i guess it depends on whether we're optimizing for database aesthetics or database usability? :-) if it helps, it looks like musl doesn't provide any way to get this information at all :-("], "BrownTruck": ["hello! i am an automated bot and i have noticed that this pull request is not currently able to be merged. if you are able to either merge the syntaxmastersyntax branch into this pull request or rebase this pull request against syntaxmastersyntax then it will eligible for code review and hopefully merging!"]}], "2217": ["dstufft", "2014-12-18T02:45:28Z", {"alex": ["this looks like a bug in cachecontrol, that syntax is missing a close method.", "merge conflicts here."], "dstufft": ["thanks"]}], "1335": ["dstufft", "2013-11-22T03:02:04Z", {"pfmoore": ["this does not seem to put the pyc files into record, so they will not be removed on uninstall. this is bad as it will leave clutter around and could potentially mean that uninstalled modules are still importable. i 've not tested the details - i only saw this after it was merged. did anyone check this? i see no test that does so. at a minimum, if the record handling cannot be fixed easily then - - no - compile should be the default until a resolution can be found.", "apologies, you are correct. i misunderstood the code - didn't read it in enough detail. i have confirmed that this works on python number. blame it on checking emails before my first caffeine hit, plus having had trouble with this stuff in the past when using wininst installers :-)"], "dstufft": ["all tests passed except for pypy which is known to be broken with number.", "this is the record for twine installed from wheelcodethe compilation step happens before the record step so it should pick it up as part of that.", "it should work in py3 regardless because the compilation happens prior to the record being generated. code", "i'm doing this instead... codesince syntax isn't available on every python and some oss package differently."], "qwcode": ["it only works in py3 because of pr #646 i added a year ago. if you take that change out, pip leaves syntax laying around. the - - record feature of distutils by itself was not pycache aware, when i looked at it.", "ok, you're just talking about wheels my pt was just that syntax alone was not capturing the pycache files for * * sdist * * uninstalls. pip has to do it after the fact, because distutils is unaware of pycache", "most of syntax can be removed now, because it was handling wheel pyc removal before. code", "use syntax", "by the way the uninstall code checks if syntax = = true, then uses syntax"]}]}, "BinPy": {"155": ["shrutig", "2014-03-20T23:18:44Z", {"debugger22": ["could you please add tests also", "an example would also be a nice asset to have.", "closing it for now. please reopen it if you want to continue."], "mohitgujarathi14": ["Shouldnt you be writing IC_74138 using class DEMUX/MUX constructor ?\nAlso all the outputs have only become instances of a GATE (NAND) since you didnt apply self.output() method on them."]}]}, "statsmodels": {"3444": ["josef-pkt", "2017-02-06T18:43:38Z", {"TomAugspurger": ["looks good to me based on a very quick skim."], "josef-pkt": ["i have one more coming up with the release version change in setup. pybut that's the last, before final checks. travis is busy and will still take some time to run the test for this.", "all green, merging"]}]}, "rootpy": {"71": ["ndawe", "2012-11-20T00:06:48Z", {"pwaller": ["looks good to me #72.", "xref whatsnew #139"]}]}, "gunicorn": {"957": ["gcallaghan", "2014-12-17T00:12:25Z", {"tilgovi": ["hmmm... now i wonder why we even send sigkill after sigquit and if number is enough time."], "gcallaghan": ["i'm not sure the original intention but it looks like this was introduced in number 9bae0daf21c29f28e54c12e302914556d43436a"], "benoitc": ["Sometimes SIGQUIT wasn't enough and we need definitely to kill at the end.\n\nI am not sure I like the proposed solution. What about sending the signal once to the workers then wait until the graceful timeout or until there are workers alive? IMO we should send the signal only once, there is no interrest to send it twice.", "ok, working on a new patch then"]}]}, "oh-mainline": {"1735": ["ananyacleetus", "2015-10-12T16:01:09Z", {"ehashman": ["looks good to me a colorful party popper, used for party or other celebration. appears as a conical party hat, with streamers or confetti bursting out of one end. design may feature stripes."], "Deborah-Digges": ["Thanks for the contibution, username \nPlease do send an email to permit us to use your work if you haven't done so already url"]}]}, "iris": {"1212": ["pelson", "2014-06-27T10:32:27Z", {"bjlittle": ["sweet, thanks:: + 1::", "syntax", "is it worthwhile having a link to the biggus on github?", "syntax"], "ajdawson": ["Doesn't quite make sense. Perhaps something about a collapsing a dimension and still being able to subtract from the original."]}], "2071": ["ehogan", "2016-07-06T15:21:22Z", {"ajdawson": ["note that syntax is deprecated, replaced by syntax. in syntax this has been addressed by adding an syntax keyword argument and removing the note ( url we won't accept code changes to syntax but this update seems reasonable since there will likely be at least one more release before iris number where syntax will simply be deleted.", "i was actually going to merge this as it was, but you've deleted it!"], "ehogan": ["apologies, i realise this is the incorrect place for this pull request and i've just discovered it's already fixed in the correct place: url closing.", "hehe, sorry, i was too quick! i've restored it:)"]}], "151": ["bblay", "2012-10-09T14:58:52Z", {"pelson": ["sorry but this gets my syntax - not because of anything badly done on your behalf, but because i fundamentally disagree with fixing the data in this way... my concerns are with \"interpreting the data such that very large forecast periods are automatically counted as having overflowed. at the heart of the problem is the fact that either the grib specification, or more likely, the ecmwf's grib api is handling the encoding / decoding incorrectly. it is there that i feel this change should be made rather than in the iris ingestion phase. if only the grib api were on github then we could fork it and fix this...; -)"], "cpelley": ["should we not raise an exception if it goes beyond this range?", "i think it would be useful to put a docstring for this test function to indicate what its actually testing"], "esc24": ["- please squash the commits in this pr."], "bblay": ["it was suggested that the functionality to fix incorrectly decoded negative forecast periods should not happen automatically, but should be applied explicitly by the user; with a callback, for example. unfortunately this proved awkward as there are other metadata calculated from the forecast period before the callback is applied.", "squashed", "rebasing to master", "this change reflects the inability of the vanilla grib api to decode negative forecast time without our patch.", "these are the results we were getting from the patched grib api", "ok, but we don't use docstrings in test funcs as they get printed out, so we use comments.", "wait, why are you reviewing a closed pr? a face with smiling eyes and a broad open smile, showing upper teeth and tongue on some platforms. conveys general happiness and good-natured amusement. similar to a yellow face with simple open eyes and a broad open smile, showing upper teeth and tongue on some platforms. conveys general pleasure and good cheer or humor. not to be confused with \ud83d\ude03 grinning face with big eyes or \ud83d\ude04 grinning face with smiling eyes, which have the same smiles but more expressive eye shapes. grinning face but with but with taller, more excited eyes."]}]}, "spyne": {"347": ["DXist", "2014-04-09T13:06:50Z", {"plq": ["I've already fixed this. you can perhaps cherry-pick 919bae0 and 3b18a8e from my repo temporariy while waiting for #336 to land"]}]}, "riak-python-client": {"102": ["armon", "2012-02-14T21:03:57Z", {"seancribbs": ["looks good, can you rebase or fix the conflicts with the master branch and push again?", "thanks!"], "armon": ["rebased now."]}]}, "mopidy": {"722": ["trygveaa", "2014-04-25T04:21:52Z", {"jodal": ["thanks :-)"]}], "1571": ["rec", "2016-10-16T18:16:24Z", {"adamcik": ["should be fine here, just won't show up on docs until the next release."]}]}, "pyramid": {"51": ["blaflamme", "2010-11-27T14:16:56Z", {"mcdonc": ["merged and pushed, thanks!"]}]}, "webview": {"317": ["dak", "2013-12-20T14:43:18Z", {"philschatz": ["a thumbs-up gesture indicating approval."]}]}, "vispy": {"193": ["mssurajkaiga", "2014-03-14T18:44:55Z", {"mssurajkaiga": ["sure. i will modify the code to use quaternions instead.", "i have implemented quaternion-based arcball but somehow it rotates weirdly. i compared the model-view matrices generated by this and by renaud blanch's implementation and they are the same for same values of mouse positions. yet the rotations are very different. i guess i'm missing something very basic here!! i have spent most of the weekend fixing bugs in it. could anyone help me out with this?", "yeah, i tried swapping them but the problem was still not solved. i will look into bell's implementation."], "rougier": ["i tested and needed to replace: syntaxwithsyntaxbut even with his change, the interaction is not satisfactory. you should use gavin bell trackball implementation. have a look at: urlurl"], "rossant": ["this may be ok for an example. eventually, we'll want to implement this feature in the core package so that it can be easily used anywhere. i'm not sure where we'd want to put it. also, i'd prefer an efficient implementation based on quaternions.", "i'd say they lead to more compact, more elegant, more readable and more efficient code. i don't see a good reason not to use them actually.", "what's the status of this?", "so should we close this then?"], "larsoner": ["afaik quaternions can also lead to reduced numerical precision issues, but perhaps not in our use cases.", "closing, we can still take the code bits from this that we need to set up the cameras. this would be a good next target once you're done with tests for visuals if you're still looking for things to do:)"], "campagnola": ["quaternions make baby leibniz cry. just saying.", "is there an advantage to quaternions vs matrices?", "it would be awesome if you can duplicate this example using visuals and a subclass of transform that implements quaternions. the mesh _ visual example in the scenegraph branch has animated transforms; that might be a good place to start."], "almarklein": ["my previous scenegraph code had a subpackage for cameras. i think luke's code has something similar. it would fit perfectly there. quaternions rock.", "quaternions avoid gimbal lock. also, quaternions should provide for smoother animations when interpolating between two key points.", "the only disadvantage of quaternions that i know of is that they do not fit into a human brain.", "i think that arcball manipulation should better be done in scene / cameras. py now."]}]}, "Pillow": {"741": ["aclark4life", "2014-06-27T23:15:53Z", {"hugovk": ["thanks."]}]}, "MakeAPI": {"246": ["jbuck", "2016-02-24T20:38:29Z", {"cadecairos": ["review"]}]}, "psychopy": {"850": ["kohlman", "2015-02-26T09:34:09Z", {"peircej": ["i'm not sure about the change to using syntax rather than syntaxthe advantage about logging is that it allows users to control whether or not they get this level of information from a single point."], "kohlman": ["yeah, jon. i thought about that. the problem is that the log files were not even written because the uninformative error messages came up. but thinking about it, maybe adding the parallelport _ _ init _ _ is sufficient because it will preclude the error from happening. then, just logging should be alright. i'll add another commit re-inserting the logging messages. the only drawback is that users won't be aware of the warnings if they just include the code without taking care of proper logging etc. i don't know how acceptable this is."]}]}, "symfony-docs-fr": {"710": ["Zzortell", "2015-05-01T08:30:16Z", {"gregquat": ["thanks"]}]}, "girder": {"1679": ["zachmullen", "2016-11-15T15:23:05Z", {"msmolens": ["It's not a great omen that this badge shows the default branch (master) is failing."], "jbeezley": ["i'm pretty sure there is a + / - number variance in the coverage due to asynchronous tests. for example, the \"done condition of the test triggers before or after some code execution in the test.", "yeah, the last pr i merged had a spurious error. that will happen from time to time. i didn't rerun it this time in case someone wanted to look at it."], "zachmullen": ["those numbers look wonky, i think that calculation is not accurate. not sure why.", "i queued a rebuild.", "good point, it just does the head of the branch now."]}], "1495": ["zachmullen", "2016-08-09T13:57:10Z", {"zachmullen": ["this is the line that contains the fix of the failing test."], "cpatrick": ["looks good to me", "a rocket being propelled into space. a large ship, used for transport of people or cargo across the ocean. may be a cruise ship, commonly found around tropical locations.: shipit:"]}]}, "vumi": {"124": ["piet-praekelt", "2012-01-13T07:04:16Z", {"piet-praekelt": ["see commit message: i re-excluded twisted. plugins from the syntax entry, restoring the status quo for now."], "dmaclay": ["well, installed tox & went > tox... now it's doing things... no explosions yet, but i'm afraid i'll only be good for a sample of a noob opinion"]}]}, "salt-cloud": {"873": ["sebgoa", "2013-10-24T11:36:11Z", {"s0undt3ch": ["huh?", "it was a happy and smiling face with big open mouth, showing teeth. differs only slightly from the smiling face with open mouth emoji by the fact that these eyes are emoji-style smiling eyes, instead of tall oval eyes."], "sebgoa": ["was 7a02c46 also merged?", "thanks. my mind does not work well with pr for some reason... i always get confused. thanks for the merge"]}], "44": ["dangarthwaite", "2012-09-17T23:42:52Z", {"thatch45": ["awesome, thanks"]}]}, "mongo-python-driver": {"309": ["oxymor0n", "2016-07-29T04:04:22Z", {"ajdavis": ["the enhancement to mongoclient parameters looks quite nice to me. i notice that we can't specify syntax via the uri, but i think that's ok.", "there's a mix of parameter styles. you can see that tz _ aware is snake-cased. the principle, more or less, is that standard mongodb uri options are camel-cased, and pymongo-specific options are snake-cased. this isn't deliberate, but it's a consequence of how we use the same code to validate mongoclient parameters and uri options, and we've decided to live with it. short answer: let's leave unicode _ decode _ error _ handler snake-cased."], "oxymor0n": ["cool, that makes sense. thanks for the clarification!"], "llvtt": ["i think syntax has a similar problem to syntax, where it can't be specified in the uri. would you mind making a similar change for connect as you have for tz _ aware on l357?", "this is a minor nit: we try to keep the imports alphabetical in pymongo. could you move syntax above syntax?"]}]}, "pootle": {"4635": ["ta2-1", "2016-04-07T07:02:48Z", {"unho": ["reviewed and tested and it is ok. but i left some comment on url asking if the table order should be further changed to align with the actions, so until that is sorted out i am withholding my gtm.", "given last input on #4630 i am gtm."], "julen": ["good one, ship it:: + 1::"]}], "5387": ["phlax", "2016-10-17T13:41:10Z", {"dwaynebailey": ["if we're expecting people to set this or use sites. then this definitely needs to be in number - local. conf. sample. and i'm guessing now that we might want to to be localhost if we want pootle to be able to run straight away after init? we moved all our settings to the pootle _ namespace just to make sure its clear what we manage and what we don't. unless we're using something from django i'd say its our thing and prevents any future conflict when django decided canonical _ url would b a great thing to add", "yeah i get that, but now we can init / initdb without much effort, this would change that. i think missing should fail, and yip if we just upgrade 'localhost to a warning that would cover things i think."], "unho": ["looks good to me docs can be landed afterwards.", "this setting is lacking all kind of documentation. can it be renamed to syntax?", "also record the new setting in release notes, and in settings docs."], "phlax": ["my feeling is that its not really a syntax thing - but yep it defo needs some docs", "ill add a default in local. conf - template", "re sites - using it is undocumented - and has no ui - im figuring anyone using sites is already customizing heavily - probs noonei am wondering tho if there is any possibility of a historical use that might mean someone has syntax configured"]}]}, "XBlock": {"264": ["cpennington", "2014-11-10T14:32:50Z", {"dmitchell": [":: + 1:: hedged on my not having an opinion on where the max is hardcoded", "can we get instructions emailed to edx-code and number devs on enabling this? should you add to the onboarding or other overview docs?"], "cpennington": ["i added a note to the xblock readme. until we have a better sense of whether we like this workflow, i don't want to push it out too widely."], "doctoryes": ["so this is git integration of run _ quality checking before allowing a commit? or a push? how would i enable this checking myself? is it automatic? if automatic, will this be turned on for every developer when merged?"]}], "301": ["adampalay", "2015-06-18T21:59:02Z", {"cpennington": ["it's only syntax if the value has changed. syntax is just the list of fields that might be dirty.", "i wonder, for a mutable field, whether this should just do the deepcopy of value. what happens if we do: set - > save - > mutate - > save?", "probably doesn't need to happen with this pr, but this could be simplified and inlined as :c ode", "i think this test would be better written to test that syntax is or isn't called after each call to syntax.", "maybe add an syntax here too? and perhaps a comment on the next line that we're testing what happens if you mutate a pointer without retrieving it through syntax?"], "waheedahmed": [":: + 1::"]}]}, "socorro": {"917": ["twobraids", "2012-11-02T19:06:43Z", {"erikrose": ["mock decorator makes baby erik cry :-): weird params in reverse order and overly broad mocking scope. instead, might i suggest the multi-clause syntax statement of python number or, if stuck in number, syntax?"], "rhelmer": ["why not remove this?", "What explains this decrease? Is the official coverage reported for different platform/library combinations?"], "twobraids": ["this pr will be updated after pr919 is accepted. hold off on further review for now.", "however, on seeing that contextlib. nested is deprecated, i have trepidation. i'm not in favor of introducing something into the code base that is already outdated. i would rather use this in the growing arsenal of arguments for moving to a python number standard. we can accomplish some truly great things if we were working a little closer to the proverbial edge. since i got my coveted review i'm not going to treat this as a blocking issue for this pr. i'll do the merge in the morning...", "that is a mystery artifact that i do not understand. it was a test that has nothing to do with what was working on that was failing. i meant to investigate to see why it appears to work in master, but i can't see how could ever have worked. i'll do my neglected investigation.", "the investigation leads to pr919. this change in testcrashstorage will be withdrawn once pr919 is accepted."], "peterbe": ["review only read through the code. i didn't actually run it.", "/ me reading up on syntax", "i recommend using the syntax thing as a decorator instead. then you don't get this almost insane number - level indentation."]}], "580": ["ghost", "2012-05-10T10:23:41Z", {"adngdb": ["code looks good and it seems to work well. review"]}], "3501": ["adngdb", "2016-10-04T23:00:48Z", {"peterbe": ["oh. see the first screenshot above. note how the date is set to \"october number, number - time. when i opened the page, the actual utc time was oct number but at time. that's number hours different. number hours is the difference between me and utc. so bug lies somewhere in the js code. the link on the top crasher page is: `urlso somewhere the js code takes the input / default thinks it's in my local timezone and \"converts it.", "i just don't get it. perhaps it's best if you go back and take a look. by the way, when i go back to the master branch, the problem goes away."]}]}, "play1": {"835": ["opyate", "2015-02-12T16:47:41Z", {"xael-fry": ["( url", "merged and pushed in master and number. x. thanks", "why did you remove this line?", "ok saw it thanks"], "opyate": [":: + 1::", "those buttons are too close together."], "gpgekko": ["i understand the goal here, but this change would be very inconvenient. perhaps we can add a command line argument to specify the java version instead, and have it fall back to the current behavior if the argument isn't provided. that would be much more convenient for the majority of use cases.", "flag-only. as for the name, i'm not sure, there seem to be mixed conventions ( syntax vs `- - url either way, the documentation and help text / command description will need to be updated to reflect the changes.", "perhaps change the title of the pull request for future reference. the rest looks fine to me.", "i don't think this got merged yet?", "i think he might be referencing that in url"]}]}, "fjord": {"3": ["willkg", "2012-08-16T14:54:43Z", {"willkg": ["^ ^ ^ fixes from ricky's comments.", "i've tested some of the instructions, but none of the l10n ones. i'll test those when we get that side of things working. landed in a9e2d16cee4c49a762354df91b4003d84e7f6d25 and aa2bfb839435c612b43a0c78a2565786a9c95cf4"], "rlr": ["Looks good other than the typo. I haven't actually gone through the instructions for real though.", "/me wants this", "typo"]}], "32": ["willkg", "2012-09-17T21:39:52Z", {"willkg": ["i can't tell if you're suggesting that being able to trick it is bad or not. this is sort of a high-level \"are things ok-ish? test page. i think it's probably ok that you can trick it out. anyhow, i want to redo the kitsune services / monitor page in a similar way. i'll probably do that when i add the es check."], "rlr": ["- i like your changes to the view. - tests pass now - i was able to trick it to go fully green by entering the same memcached address twice in the list and it returned the expected review from me", "yeah, i wasn't clear. i was proud of myself for being able to trick itand i am totally ok that it is possible:)", "i <3 the simplification of the template code"]}]}, "youtube-dl": {"7819": ["dgoguerra", "2015-12-09T21:16:18Z", {"dstftw": ["this looks like copyrighted content. youtube-dl does not support sites dedicated to ( url that does not violate any copyrights.", "by checking several pages i can state that url is clearly dedicated to copyright infringement therefore can't be supported by youtube-dl."], "dgoguerra": ["it does serve copyrighted content. i didn't even think about it, even though you state it very clearly in the project description. my fault, sorry!"]}], "1601": ["FiloSottile", "2013-10-14T22:30:45Z", {"FiloSottile": ["ok it works but we need to check if it stable and to quiet that stuff down.", "umh, a strange line to hang on...", "rebased to re-run, let's see...", "test worked, cinemassacre md5 changed, videopremium stayed."], "jaimeMF": ["i think this change is not the cause of the hang, it, i'm a thumbs-up gesture indicating approval... the only problem is all the noise it produces.", "rzhxeo did some improvements on the cinemassacre extractor, i think he changed some of the rtmp urls, so it's normal. it seems we don't get all the rtmpdump messages now, that's great:)"], "phihag": ["rtmpdump ( url", "thanks! applied to current youtube-dl master."]}], "4356": ["akretz", "2014-12-02T22:30:07Z", {"jaimeMF": ["thanks, i have just simplified it a bit in number 3c8babaab947d243f4b8cc4e1fa0bc4b4e1603."]}], "5966": ["ciferkey", "2015-06-13T03:46:28Z", {"dstftw": ["i suggest you reading ( url in the first place."]}]}, "tp-qemu": {"604": ["PandaWei", "2016-04-29T03:08:37Z", {"xutian": ["merged, thanks"]}]}, "solitude": {"53": ["andymckay", "2013-01-15T19:46:51Z", {"wraithan": ["review", "not that i particularly care, but don't we usually have a trailing comma?", "so completed, cancelled and failed are the only states that can come from here? seems reasonable but just want to make sure that is right."], "andymckay": ["so far", "yeah if i remember, json is indoctrinating me not to"]}]}, "feincms": {"545": ["feczo", "2014-08-21T00:50:51Z", {"matthiask": ["thanks! :-)"]}]}, "wagtail": {"3377": ["chosak", "2017-02-16T18:58:20Z", {"chosak": ["apologies, fixed in number 9c389."], "gasman": ["thanks!", "this generates a syntax warning - please can you fix?"]}]}, "freeseer": {"620": ["umcsdon", "2014-10-08T01:44:39Z", {"dideler": ["i think you'll like ( url"], "mtomwing": ["Hey #username, feel free to join us on IRC (#freeseer on freenode) if you have any questions about git or stuff."]}]}, "gaffer": {"1906": ["danieldresser", "2016-10-31T21:49:31Z", {"danieldresser": ["comment addressed."], "johnhaddon": ["thanks for coming back to this one daniel - if you could just address that one comment i made we can get this merged.", "i know this isn't the most performance critical part of the code, but calling syntax does have overhead, and i think it's worth not being in the habit of calling it inside loops like this. could you switch to this style throughout? syntaxsyntaxsyntax"]}]}, "pull": {}, "hashstack": {"353": ["ahmadia", "2014-07-08T02:26:54Z", {"certik": ["i think this might fix it. i can test at work tomorrow. but this looks like it might fix #350."]}]}, "invenio": {"2774": ["dset0x", "2015-02-13T08:56:39Z", {"PXke": ["so what is the status?"], "tiborsimko": ["note that we are generalising marc setup to use proper standard names everywhere, and to use schemas everywhere, see #2075, so that issues like this will be soon solved that way."], "jirikuncar": ["please amend component name in the commit message: syntax - > syntax", "you might also want to check syntax package.", "can be added to _ invenio demosite _."], "jalavik": ["thanks for this list! i believe it shows that we should have a stable interface for this. most likely something like sqlalchemy's query interface allowing to specify for syntax or many - even our good ol 'pal bibrecord also had this idea via syntax and syntax. note the trailing s' in the last one to denote many.", "as for the immediate future, we can probably just solve this in overlay configuration until #2075. future enhancements to syntax as a whole are coming so this issue could be fully addressed then."]}], "3308": ["blixhavn", "2015-06-25T08:15:04Z", {"blixhavn": ["i guess it wouldn't hurt", "i've checked, it doesn't work. probably because as you can see below, the exception comes from the legacy function syntax, and not sqlalchemy."], "jirikuncar": ["can you check if you can use syntax instead?", "shall we keep syntax?"]}]}, "topaz": {"283": ["timfel", "2013-01-24T09:14:57Z", {"alex": ["i'm not sure this is correct, as far as i know mri doesn't flush any os buffers when syntax is called, and we don't maintain any of our own buffers yet."], "timfel": ["you're right. closing this"]}]}, "zipline": {"337": ["humdings", "2014-05-24T00:00:20Z", {"humdings": ["no problem, i have the other functions as well, i will submit another pr for each one. the order _ percent and and order _ target _ percent functions have to be treated a little different. for those ones, the orders can be incorrect if there are open orders for any sid.", "would it be preferable to do separate commits in this same branch for the other functions since they are all related?", "i agree on the parameter name here, i originally had a something like 'open _ order _ fail, or 'cancel _ if _ orders _ pending. i think it should be more explicit what the behavior will be when it's set one way or the other. jess seemed to like the ignore _ open _ orders, so i went with that, but i can swap it out if there is a consensus on what it should be. i have the others written, and it looks like the check for open orders should alway be sid specific, even for the order% and target%, otherwise a rebalance from weights will only place the first order. i will also change it to make the old behavior the default.", "that was the first way i went about this. it does work, but if there are several unfilled limit orders out, it can reverse the sign of the order and things go crazy. i think it would work well that way in practice, but it's though to make realistic use cases in order to test it out.", "i'm going to close this and continue from url i think there are a lot of unintended consequences that show up when using this in practice. also, i forgot to rebase this branch and its a mess."], "twiecki": ["thanks for doing that, looks good on a first skim. i think the other order methods need that kwarg as well though and pass it through.", "yeah, best to get it all on the same branch i think. also, i think this would need some unittests that involved open orders.", "rather than not executing the order, should functions like syntax not simply take open orders into account and order the difference?"]}]}, "marketplace-tests": {"276": ["teodosia", "2013-05-09T13:55:04Z", {"AndreiH": ["since that bug was fixed. tested this and it fails for me. some other locators need to be updated. thanks!"], "AlinT": ["as we are back on dev, looks good to me"]}]}, "autotest-docker": {"187": ["cevich", "2014-06-23T15:43:17Z", {"jzupka": ["hmm. if we define and document self. stuff like variable for special purpose in class then i think that we don't have to care about wrong usage? a thumbs-down gesture indicating disapproval."], "ldoktor": ["hi chris, i don't see the benefit of this. do you have any use cases? additionally i believe, you can set syntax to whatever you want by overriding it in your syntax. just set syntax after you call syntax. but it's possible, that i just don't see your point of view.", "yeah, python is pretty interesting language. try this for example :c ode"], "cevich": ["there, that syntax is the other way to do it. though after going through all that, i think the first way in syntax is a bit more clean. it seems there's not really a good way to fix this part displeased, part unsure what to think. this face isn \u2019 t sad, but is a bit confused and puzzled by the situation. the use of eyebrows on some platforms increases the appearance of confusion. a previous release of windows displayed this as the emoticon: s with an rotated s-shaped mouth."]}]}, "shinken": {"318": ["titilambert", "2012-05-04T18:15:35Z", {"h4wkmoon": ["this will create \"folders in graphite, right? to classify hosts / services?"], "naparuba": ["sorry, but the url part is not ok, it will kill performances. initial _ broks are done for this. i don't really understand the _ pre thing. isn't it possible to get a module conf instead of a host one?", "it's not it will be slower than initial, it's already done in the initial:)"], "xkilian": ["the _ pre and _ post variables assigned to a host or service get added to the datasource name when exporting data to graphite. ex. _ pre serverserver. hostname. serviceeach value seperated by a dot is placed in a hierarchy of folders and also classifies data in the web interface.", "on number number number time, gab \u00e8s jean wrote: > it's not it will be slower than initial, it's already done in the initial:) > > - - - > > reply to this email directly or view it on github: > url > but can intial broks be modified to load only a customizable set of data > to make it faster?"], "titilambert": ["i made a new version of the patch without edit url"]}]}, "sm": {"340": ["letsboogey", "2016-10-31T15:21:58Z", {"letsboogey": ["oops, will fix that"], "chandrikas": [", we don't want to turn logging on by default. snapwatchd takes an additional parameter that conditionally turns logging on. we need to make sure snapwatchd is started with that option.", "looks good. i'll get it into the patchqueue."], "MarkSymsCtx": ["unintended change here as well."]}]}, "tp-libvirt": {"737": ["waynesun09", "2016-03-31T03:12:55Z", {"Hao-Liu": ["ack and merge this"]}]}, "Kawaz3rd": {"248": ["giginet", "2014-10-09T17:44:02Z", {"lambdalisue": ["! ( url", "\u30b3\u30e1\u30f3\u30c8\u3067\u3082\u6307\u6458\u3057\u305f\u3051\u3069\u3001\u3053\u3053\u306f\u76f4\u63a5 syntax \u3092\u4f7f\u3046\u3079\u304d\u3002syntax\u306e\u4f7f\u7528\u306f\u30e9\u30a4\u30d6\u30e9\u30ea\u4f5c\u6210\u3068\u304b\u5fc5\u8981\u6027\u304c\u306a\u3044\u5834\u5408\u4ee5\u5916\u306f\u4f7f\u308f\u306a\u3044\u307b\u3046\u304c\u8eab\u306e\u305f\u3081", "syntax\u3082\u540c\u69d8\u3002\u66f8\u304d\u76f4\u3059\u304b syntax\u3068\u304b\u4f5c\u3063\u3066\u305d\u3053\u306b\u5b9a\u6570\u3067\u5b58\u5728\u3055\u305b\u3066\u305d\u3063\u3061\u3092\u30ea\u30d5\u30a1\u30fc", "\u306a\u3093\u3067 syntax \u4f7f\u3046\u5fc5\u8981\u3042\u308b\u306e\uff1f", "\u306a\u308b\u307b\u3069\u3001\u305d\u306e\u65e8\u3092\u30b3\u30e1\u30f3\u30c8\u3067\u66f8\u3044\u3066\uff08syntax\u306e\u901a\u5e38\u306e\u4f7f\u3044\u65b9\u3067\u306f\u306a\u3044\u305f\u3081\uff09\u3002\u3042\u3068 syntax\u3092\u4f7f\u304a\u3046"]}]}, "eden": {"637": ["arnavkagrawal", "2013-11-17T13:16:16Z", {"flavour": ["<} flavour { > you can use auth. s3 _ has _ role <} flavour { > no need to do extra db queries <} flavour { > s3 _ has _ role does a simple lookup in the session so much faster <} flavour { > & i'm not sure why you patch the settings. get call <} flavour { > that doesn't seem to help <} flavour { > i want to be ale to deliebrately control the user view & the admin view separately <} flavour { > i think this needs 2x different settings <} flavour { > so if s3 _ has _ role: check the admin deployment _ setting <} flavour { > else: check the normal user setting <} flavour { > normal user is the current one <} flavour { > 'registration requests <} flavour { > we can have the get _ auth _ admin _ sees _ organisation call fallback to the normal user one <} flavour { > this will be fully backwards-comaptible which is alwys good"], "nursix": ["sorry, but that doesn't make much sense. we have a function that accepts uuids, but even better is to use the system roles ids from session. a db lookup is neither necessary here nor is it desirable to spread out auth table queries."]}]}, "SimpleCV": {"453": ["acrlakshman", "2013-04-22T20:47:48Z", {"kscottz": ["i am not convinced that this actually works correctly. i am going to need to see a lot more testing to prove that it works. the code is also really bulky. there has got to be a more elegant / pythonic way to do this. the way i envisioned this working is that for each edge point in the contour we would shoot a vector from the centroid of the contour to each point in the contour. the expansion / contraction would be just a multiplication of the vector length. if you were clever you could probably get this done in one or two list comprehensions. the trick is that this method probably should return not just a contour but also the modified. blob."], "jayrambhia": ["This seems really great. "]}]}, "nikola": {"648": ["ralsina", "2013-09-02T14:40:11Z", {"ralsina": ["well. i am not sure it's a good idea to do it or not.", "i'd say yes, this would allow a html feed, with formatting, but without the \"forbidden elements.", "this is clearly not happening."], "Kwpolska": ["what is the status of this?"], "da2x": ["is this still needed with the new rss _ plain option?"], "arusahni": ["just ran it against my code. the output looks fine.:: + 1:: that being said, youtube videos, on account of them using iframes, are stripped out. i understand there are security concerns for having embeds and iframes in the feed, but is there any way to have it fall back to using some placeholder text so readers know there is something there? i'm using the restructured text directive."]}]}}